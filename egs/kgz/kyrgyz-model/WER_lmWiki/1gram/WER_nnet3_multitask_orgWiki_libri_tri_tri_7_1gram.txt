%WER 90.53 [ 172 / 190, 0 ins, 82 del, 90 sub ] [PARTIAL] exp/nnet3/multitask/decode/wer_10
test_data_dir=data_orgWiki/test
graph_dir=exp_orgWiki/triphones/graph
decode_dir=exp/nnet3/multitask/decode
final_model=exp/nnet3/multitask/orgWiki/final_adj.mdl

    ###### BEGIN LANGUAGE INFO ######
    lang= orgWiki
    num_targets= 412
    data_dir= data/orgWiki/train
    ali_dir= exp/orgWiki/tri_ali
    egs_dir= exp/orgWiki/nnet3/egs
    ###### END LANGUAGE INFO ######
    

    ###### BEGIN LANGUAGE INFO ######
    lang= libri
    num_targets= 450
    data_dir= data/libri/train
    ali_dir= exp/libri/tri_ali
    egs_dir= exp/libri/nnet3/egs
    ###### END LANGUAGE INFO ######
    

    #######################
    ### BEGIN NNET INFO ###
    #######################
    
left-context: 6
right-context: 7
num-parameters: 65012
modulus: 1
input-node name=input dim=13
component-node name=tdnn1.affine component=tdnn1.affine input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=65 output-dim=50
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=50 output-dim=50
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=50 output-dim=50
component-node name=tdnn2.affine component=tdnn2.affine input=tdnn1.renorm input-dim=50 output-dim=50
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=50 output-dim=50
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=50 output-dim=50
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -1), Offset(tdnn2.renorm, 2)) input-dim=100 output-dim=50
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=50 output-dim=50
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=50 output-dim=50
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -3), Offset(tdnn3.renorm, 3)) input-dim=100 output-dim=50
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=50 output-dim=50
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=50 output-dim=50
component-node name=prefinal-affine-lang-0.affine component=prefinal-affine-lang-0.affine input=tdnn4.renorm input-dim=50 output-dim=50
component-node name=prefinal-affine-lang-0.relu component=prefinal-affine-lang-0.relu input=prefinal-affine-lang-0.affine input-dim=50 output-dim=50
component-node name=prefinal-affine-lang-0.renorm component=prefinal-affine-lang-0.renorm input=prefinal-affine-lang-0.relu input-dim=50 output-dim=50
component-node name=output-0.affine component=output-0.affine input=prefinal-affine-lang-0.renorm input-dim=50 output-dim=412
component-node name=output-0.log-softmax component=output-0.log-softmax input=output-0.affine input-dim=412 output-dim=412
output-node name=output input=output-0.log-softmax dim=412 objective=linear
component-node name=prefinal-affine-lang-1.affine component=prefinal-affine-lang-1.affine input=tdnn4.renorm input-dim=50 output-dim=50
component-node name=prefinal-affine-lang-1.relu component=prefinal-affine-lang-1.relu input=prefinal-affine-lang-1.affine input-dim=50 output-dim=50
component-node name=prefinal-affine-lang-1.renorm component=prefinal-affine-lang-1.renorm input=prefinal-affine-lang-1.relu input-dim=50 output-dim=50
component-node name=output-1.affine component=output-1.affine input=prefinal-affine-lang-1.renorm input-dim=50 output-dim=450
component-node name=output-1.log-softmax component=output-1.log-softmax input=output-1.affine input-dim=450 output-dim=450
output-node name=output-1 input=output-1.log-softmax dim=450 objective=linear
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=65, output-dim=50, learning-rate=0.00015, max-change=0.75, linear-params-rms=0.4391, bias-{mean,stddev}=0.1125,2.411, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=50, self-repair-scale=1e-05, count=1.23e+04, self-repaired-proportion=0.0606667, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.18,0.18,0.30 0.41,0.58,1.6,5.4,6.2 6.5,7.5,7.5,8.0), mean=2.91, stddev=2.38], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.06,0.10 0.14,0.28,0.54,0.95,0.96 0.97,0.98,0.98,0.99), mean=0.575, stddev=0.31]
component name=tdnn1.renorm type=NormalizeComponent, input-dim=50, output-dim=50, target-rms=1, add-log-stddev=false
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=50, output-dim=50, learning-rate=0.00015, max-change=0.75, linear-params-rms=0.2585, bias-{mean,stddev}=-0.02619,0.9858, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=50, self-repair-scale=1e-05, count=1.13e+04, self-repaired-proportion=0.0606667, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.05 0.08,0.14,0.32,1.6,2.0 2.1,2.3,2.3,2.6), mean=0.672, stddev=0.738], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.06,0.11 0.13,0.19,0.32,0.88,0.97 0.97,0.99,0.99,1.0), mean=0.442, stddev=0.303]
component name=tdnn2.renorm type=NormalizeComponent, input-dim=50, output-dim=50, target-rms=1, add-log-stddev=false
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=100, output-dim=50, learning-rate=0.00015, max-change=0.75, linear-params-rms=0.1907, bias-{mean,stddev}=0.1374,1.005, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=50, self-repair-scale=1e-05, count=8.19e+03, self-repaired-proportion=0.0733333, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.0002,0.0002,0.0006 0.03,0.24,0.75,1.7,2.4 2.5,3.7,3.7,4.0), mean=1.08, stddev=0.962], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.004 0.09,0.24,0.51,0.84,0.98 0.99,0.99,0.99,1.0), mean=0.541, stddev=0.303]
component name=tdnn3.renorm type=NormalizeComponent, input-dim=50, output-dim=50, target-rms=1, add-log-stddev=false
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=100, output-dim=50, learning-rate=0.00015, max-change=0.75, linear-params-rms=0.1906, bias-{mean,stddev}=-0.2207,0.9793, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=50, self-repair-scale=1e-05, count=3.84e+03, self-repaired-proportion=0.159333, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.01,0.93,1.8,2.4 2.5,2.8,2.8,2.8), mean=1.01, stddev=0.895], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.04,0.55,0.85,0.91 0.96,0.98,0.98,0.98), mean=0.498, stddev=0.34]
component name=tdnn4.renorm type=NormalizeComponent, input-dim=50, output-dim=50, target-rms=1, add-log-stddev=false
component name=prefinal-affine-lang-0.affine type=NaturalGradientAffineComponent, input-dim=50, output-dim=50, learning-rate=0.00015, max-change=0.75, linear-params-rms=0.1666, bias-{mean,stddev}=-0.1618,0.9799, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-lang-0.relu type=RectifiedLinearComponent, dim=50, self-repair-scale=1e-05, count=2.3e+03, self-repaired-proportion=0.108, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 6e-05,0.02,0.18,0.26,0.36 0.38,0.39,0.39,0.71), mean=0.184, stddev=0.14], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0.001,0.08,0.30,0.44,0.46 0.47,0.48,0.48,0.58), mean=0.266, stddev=0.165]
component name=prefinal-affine-lang-0.renorm type=NormalizeComponent, input-dim=50, output-dim=50, target-rms=1, add-log-stddev=false
component name=output-0.affine type=NaturalGradientAffineComponent, input-dim=50, output-dim=412, learning-rate=0.00015, max-change=1.5, linear-params-rms=0.152, bias-{mean,stddev}=1.192e-07,0.04762, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-0.log-softmax type=LogSoftmaxComponent, dim=412
component name=prefinal-affine-lang-1.affine type=NaturalGradientAffineComponent, input-dim=50, output-dim=50, learning-rate=0.00015, max-change=0.75, linear-params-rms=0.2402, bias-{mean,stddev}=-0.105,0.9922, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-lang-1.relu type=RectifiedLinearComponent, dim=50, self-repair-scale=1e-05, count=2.56e+03, self-repaired-proportion=0.041, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.003 0.05,0.22,0.36,0.51,0.58 0.63,0.66,0.66,0.68), mean=0.349, stddev=0.184], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.02 0.09,0.25,0.38,0.46,0.54 0.57,0.60,0.60,0.60), mean=0.349, stddev=0.153]
component name=prefinal-affine-lang-1.renorm type=NormalizeComponent, input-dim=50, output-dim=50, target-rms=1, add-log-stddev=false
component name=output-1.affine type=NaturalGradientAffineComponent, input-dim=50, output-dim=450, learning-rate=0.00015, max-change=1.5, linear-params-rms=0.2529, bias-{mean,stddev}=-3.188e-09,0.04213, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-1.log-softmax type=LogSoftmaxComponent, dim=450

    #####################
    ### END NNET INFO ###
    #####################
    
