%WER 93.20 [ 822 / 882, 4 ins, 265 del, 553 sub ] exp/nnet3/multitask/decode/wer_9
test_data_dir=data_orgWiki/test
graph_dir=exp_orgWiki/triphones/graph
decode_dir=exp/nnet3/multitask/decode
final_model=exp/nnet3/multitask/orgWiki/final_adj.mdl

    ###### BEGIN LANGUAGE INFO ######
    lang= orgWiki
    num_targets= 422
    data_dir= data/orgWiki/train
    ali_dir= exp/orgWiki/tri_ali
    egs_dir= exp/orgWiki/nnet3/egs
    ###### END LANGUAGE INFO ######
    

    ###### BEGIN LANGUAGE INFO ######
    lang= babel
    num_targets= 454
    data_dir= data/babel/train
    ali_dir= exp/babel/tri_ali
    egs_dir= exp/babel/nnet3/egs
    ###### END LANGUAGE INFO ######
    

    #######################
    ### BEGIN NNET INFO ###
    #######################
    
left-context: 6
right-context: 7
num-parameters: 65726
modulus: 1
input-node name=input dim=13
component-node name=tdnn1.affine component=tdnn1.affine input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=65 output-dim=50
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=50 output-dim=50
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=50 output-dim=50
component-node name=tdnn2.affine component=tdnn2.affine input=tdnn1.renorm input-dim=50 output-dim=50
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=50 output-dim=50
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=50 output-dim=50
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -1), Offset(tdnn2.renorm, 2)) input-dim=100 output-dim=50
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=50 output-dim=50
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=50 output-dim=50
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -3), Offset(tdnn3.renorm, 3)) input-dim=100 output-dim=50
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=50 output-dim=50
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=50 output-dim=50
component-node name=prefinal-affine-lang-0.affine component=prefinal-affine-lang-0.affine input=tdnn4.renorm input-dim=50 output-dim=50
component-node name=prefinal-affine-lang-0.relu component=prefinal-affine-lang-0.relu input=prefinal-affine-lang-0.affine input-dim=50 output-dim=50
component-node name=prefinal-affine-lang-0.renorm component=prefinal-affine-lang-0.renorm input=prefinal-affine-lang-0.relu input-dim=50 output-dim=50
component-node name=output-0.affine component=output-0.affine input=prefinal-affine-lang-0.renorm input-dim=50 output-dim=422
component-node name=output-0.log-softmax component=output-0.log-softmax input=output-0.affine input-dim=422 output-dim=422
output-node name=output input=output-0.log-softmax dim=422 objective=linear
component-node name=prefinal-affine-lang-1.affine component=prefinal-affine-lang-1.affine input=tdnn4.renorm input-dim=50 output-dim=50
component-node name=prefinal-affine-lang-1.relu component=prefinal-affine-lang-1.relu input=prefinal-affine-lang-1.affine input-dim=50 output-dim=50
component-node name=prefinal-affine-lang-1.renorm component=prefinal-affine-lang-1.renorm input=prefinal-affine-lang-1.relu input-dim=50 output-dim=50
component-node name=output-1.affine component=output-1.affine input=prefinal-affine-lang-1.renorm input-dim=50 output-dim=454
component-node name=output-1.log-softmax component=output-1.log-softmax input=output-1.affine input-dim=454 output-dim=454
output-node name=output-1 input=output-1.log-softmax dim=454 objective=linear
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=65, output-dim=50, learning-rate=0.00015, max-change=0.75, linear-params-rms=0.4883, bias-{mean,stddev}=0.1285,2.796, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=50, self-repair-scale=1e-05, count=1.43e+04, self-repaired-proportion=0.0513333, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.20,0.20,0.52 0.75,0.92,2.3,4.8,7.2 8.2,8.9,8.9,11), mean=3.19, stddev=2.6], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.12,0.12,0.21 0.24,0.27,0.51,0.88,0.95 0.96,0.96,0.96,0.99), mean=0.571, stddev=0.276]
component name=tdnn1.renorm type=NormalizeComponent, input-dim=50, output-dim=50, target-rms=1, add-log-stddev=false
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=50, output-dim=50, learning-rate=0.00015, max-change=0.75, linear-params-rms=0.2833, bias-{mean,stddev}=-0.01673,0.9952, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=50, self-repair-scale=1e-05, count=2.05e+04, self-repaired-proportion=0.042, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.11,0.14 0.18,0.21,0.45,1.7,2.2 2.6,3.1,3.1,3.2), mean=0.854, stddev=0.868], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.14,0.18 0.20,0.25,0.37,0.84,0.96 0.98,0.99,0.99,0.99), mean=0.489, stddev=0.276]
component name=tdnn2.renorm type=NormalizeComponent, input-dim=50, output-dim=50, target-rms=1, add-log-stddev=false
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=100, output-dim=50, learning-rate=0.00015, max-change=0.75, linear-params-rms=0.2168, bias-{mean,stddev}=0.1337,1.002, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=50, self-repair-scale=1e-05, count=8.19e+03, self-repaired-proportion=0.0466667, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.0005,0.0005,0.08 0.15,0.28,0.73,2.4,2.8 3.0,4.3,4.3,4.8), mean=1.31, stddev=1.15], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.14 0.21,0.26,0.52,0.93,0.97 0.99,1.0,1.0,1.0), mean=0.559, stddev=0.296]
component name=tdnn3.renorm type=NormalizeComponent, input-dim=50, output-dim=50, target-rms=1, add-log-stddev=false
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=100, output-dim=50, learning-rate=0.00015, max-change=0.75, linear-params-rms=0.2187, bias-{mean,stddev}=-0.2286,0.9718, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=50, self-repair-scale=1e-05, count=4.35e+03, self-repaired-proportion=0.068, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0004 0.004,0.11,0.82,2.1,2.7 2.9,3.5,3.5,4.5), mean=1.2, stddev=1.1], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.002 0.03,0.16,0.55,0.86,0.95 0.95,0.97,0.97,0.99), mean=0.52, stddev=0.321]
component name=tdnn4.renorm type=NormalizeComponent, input-dim=50, output-dim=50, target-rms=1, add-log-stddev=false
component name=prefinal-affine-lang-0.affine type=NaturalGradientAffineComponent, input-dim=50, output-dim=50, learning-rate=0.00015, max-change=0.75, linear-params-rms=0.1716, bias-{mean,stddev}=-0.1682,0.9644, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-lang-0.relu type=RectifiedLinearComponent, dim=50, self-repair-scale=1e-05, count=512, self-repaired-proportion=0.1, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.001,0.15,0.27,0.34 0.35,0.37,0.37,0.41), mean=0.164, stddev=0.119], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.02,0.27,0.40,0.44 0.54,0.56,0.56,0.61), mean=0.258, stddev=0.169]
component name=prefinal-affine-lang-0.renorm type=NormalizeComponent, input-dim=50, output-dim=50, target-rms=1, add-log-stddev=false
component name=output-0.affine type=NaturalGradientAffineComponent, input-dim=50, output-dim=422, learning-rate=0.00015, max-change=1.5, linear-params-rms=0.146, bias-{mean,stddev}=7.689e-09,0.04622, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-0.log-softmax type=LogSoftmaxComponent, dim=422
component name=prefinal-affine-lang-1.affine type=NaturalGradientAffineComponent, input-dim=50, output-dim=50, learning-rate=0.00015, max-change=0.75, linear-params-rms=0.278, bias-{mean,stddev}=-0.1032,1.019, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-affine-lang-1.relu type=RectifiedLinearComponent, dim=50, self-repair-scale=1e-05, count=4.1e+03, self-repaired-proportion=0.03, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,8e-06 0.03,0.26,0.60,0.87,1.0 1.2,1.2,1.2,1.3), mean=0.595, stddev=0.346], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0.0002 0.11,0.34,0.50,0.61,0.71 0.77,0.83,0.83,0.85), mean=0.463, stddev=0.212]
component name=prefinal-affine-lang-1.renorm type=NormalizeComponent, input-dim=50, output-dim=50, target-rms=1, add-log-stddev=false
component name=output-1.affine type=NaturalGradientAffineComponent, input-dim=50, output-dim=454, learning-rate=0.00015, max-change=1.5, linear-params-rms=0.2449, bias-{mean,stddev}=4.095e-08,0.07055, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-1.log-softmax type=LogSoftmaxComponent, dim=454

    #####################
    ### END NNET INFO ###
    #####################
    
