
####==========================####
#### TRAINING AUDIO DATA PREP ####
####==========================####

./run_gmm.sh: Assuming your train audio data is in /data/librispeech/audio/8k/train
./run_gmm.sh: Making soflinks to original audio data with libri_ as prefix
local/prepare_audio_data.sh: looking for audio data in input_libri/audio

 4.86 hours of audio for training 
 in data_libri/train/wav.scp


####==========================####
#### TRAIN FEATURE EXTRACTION ####
####==========================####

MAKE PLPs:
nj=8
Source data dir: data_libri/train
Destination feats dir: plp_libri
Log dir: data_libri/train/make_plp_log
steps/make_plp.sh --cmd utils/run.pl --nj 8 data_libri/train plp_libri/make_plp_log plp_libri
utils/validate_data_dir.sh: Successfully validated data-directory data_libri/train
steps/make_plp.sh: [info]: no segments file exists: assuming wav.scp indexed by utterance.
Succeeded creating PLP features for train
fix_data_dir.sh: kept all 1400 utterances.
fix_data_dir.sh: old files are kept in data_libri/train/.backup

Succeeded creating CMVN stats for train

fix_data_dir.sh: kept all 1400 utterances.
fix_data_dir.sh: old files are kept in data_libri/train/.backup
./extract_feats.sh: splitting feats into 8 subdirs
utils/validate_data_dir.sh: Successfully validated data-directory data_libri/train/split8/1
utils/validate_data_dir.sh: Successfully validated data-directory data_libri/train/split8/2
utils/validate_data_dir.sh: Successfully validated data-directory data_libri/train/split8/3
utils/validate_data_dir.sh: Successfully validated data-directory data_libri/train/split8/4
utils/validate_data_dir.sh: Successfully validated data-directory data_libri/train/split8/5
utils/validate_data_dir.sh: Successfully validated data-directory data_libri/train/split8/6
utils/validate_data_dir.sh: Successfully validated data-directory data_libri/train/split8/7
utils/validate_data_dir.sh: Successfully validated data-directory data_libri/train/split8/8

####==============####
#### Create L.fst ####
####==============####

./compile_Lfst.sh: Looking for lexicon files in input_libri
./compile_Lfst.sh: Extracting phonemes from input_libri/lexicon.txt and saving them to input_libri/phones.txt
local/prepare_dict.sh: Creating data_libri/local/dict and moving lexicon files from input_libri into it.
local/prepare_dict.sh: This script really is just copy-pasting, nothing new generated.
Dictionary preparation succeeded

Checking data_libri/local/dict/silence_phones.txt ...
--> reading data_libri/local/dict/silence_phones.txt
--> data_libri/local/dict/silence_phones.txt is OK

Checking data_libri/local/dict/optional_silence.txt ...
--> reading data_libri/local/dict/optional_silence.txt
--> data_libri/local/dict/optional_silence.txt is OK

Checking data_libri/local/dict/nonsilence_phones.txt ...
--> reading data_libri/local/dict/nonsilence_phones.txt
--> data_libri/local/dict/nonsilence_phones.txt is OK

Checking disjoint: silence_phones.txt, nonsilence_phones.txt
--> disjoint property is OK.

Checking data_libri/local/dict/lexicon.txt
--> reading data_libri/local/dict/lexicon.txt
--> data_libri/local/dict/lexicon.txt is OK

Checking data_libri/local/dict/extra_questions.txt ...
--> data_libri/local/dict/extra_questions.txt is empty (this is OK)
--> SUCCESS [validating dictionary directory data_libri/local/dict]

**Creating data_libri/local/dict/lexiconp.txt from data_libri/local/dict/lexicon.txt
fstaddselfloops 'echo 72 |' 'echo 7232 |' 
Checking data_libri/lang/phones.txt ...
--> data_libri/lang/phones.txt is OK

Checking words.txt: #0 ...
--> data_libri/lang/words.txt has "#0"
--> data_libri/lang/words.txt is OK

Checking disjoint: silence.txt, nonsilence.txt, disambig.txt ...
--> silence.txt and nonsilence.txt are disjoint
--> silence.txt and disambig.txt are disjoint
--> disambig.txt and nonsilence.txt are disjoint
--> disjoint property is OK

Checking sumation: silence.txt, nonsilence.txt, disambig.txt ...
--> summation property is OK

Checking data_libri/lang/phones/context_indep.{txt, int, csl} ...
--> 1 entry/entries in data_libri/lang/phones/context_indep.txt
--> data_libri/lang/phones/context_indep.int corresponds to data_libri/lang/phones/context_indep.txt
--> data_libri/lang/phones/context_indep.csl corresponds to data_libri/lang/phones/context_indep.txt
--> data_libri/lang/phones/context_indep.{txt, int, csl} are OK

Checking data_libri/lang/phones/disambig.{txt, int, csl} ...
--> 84 entry/entries in data_libri/lang/phones/disambig.txt
--> data_libri/lang/phones/disambig.int corresponds to data_libri/lang/phones/disambig.txt
--> data_libri/lang/phones/disambig.csl corresponds to data_libri/lang/phones/disambig.txt
--> data_libri/lang/phones/disambig.{txt, int, csl} are OK

Checking data_libri/lang/phones/nonsilence.{txt, int, csl} ...
--> 70 entry/entries in data_libri/lang/phones/nonsilence.txt
--> data_libri/lang/phones/nonsilence.int corresponds to data_libri/lang/phones/nonsilence.txt
--> data_libri/lang/phones/nonsilence.csl corresponds to data_libri/lang/phones/nonsilence.txt
--> data_libri/lang/phones/nonsilence.{txt, int, csl} are OK

Checking data_libri/lang/phones/silence.{txt, int, csl} ...
--> 1 entry/entries in data_libri/lang/phones/silence.txt
--> data_libri/lang/phones/silence.int corresponds to data_libri/lang/phones/silence.txt
--> data_libri/lang/phones/silence.csl corresponds to data_libri/lang/phones/silence.txt
--> data_libri/lang/phones/silence.{txt, int, csl} are OK

Checking data_libri/lang/phones/optional_silence.{txt, int, csl} ...
--> 1 entry/entries in data_libri/lang/phones/optional_silence.txt
--> data_libri/lang/phones/optional_silence.int corresponds to data_libri/lang/phones/optional_silence.txt
--> data_libri/lang/phones/optional_silence.csl corresponds to data_libri/lang/phones/optional_silence.txt
--> data_libri/lang/phones/optional_silence.{txt, int, csl} are OK

Checking data_libri/lang/phones/roots.{txt, int} ...
--> 71 entry/entries in data_libri/lang/phones/roots.txt
--> data_libri/lang/phones/roots.int corresponds to data_libri/lang/phones/roots.txt
--> data_libri/lang/phones/roots.{txt, int} are OK

Checking data_libri/lang/phones/sets.{txt, int} ...
--> 71 entry/entries in data_libri/lang/phones/sets.txt
--> data_libri/lang/phones/sets.int corresponds to data_libri/lang/phones/sets.txt
--> data_libri/lang/phones/sets.{txt, int} are OK

Checking data_libri/lang/phones/extra_questions.{txt, int} ...
--> WARNING: the optional data_libri/lang/phones/extra_questions.{txt, int} are empty!

Checking optional_silence.txt ...
--> reading data_libri/lang/phones/optional_silence.txt
--> data_libri/lang/phones/optional_silence.txt is OK

Checking disambiguation symbols: #0 and #1
--> data_libri/lang/phones/disambig.txt has "#0" and "#1"
--> data_libri/lang/phones/disambig.txt is OK

Checking topo ...
--> data_libri/lang/topo's nonsilence section is OK
--> data_libri/lang/topo's silence section is OK
--> data_libri/lang/topo is OK

Checking data_libri/lang/oov.{txt, int} ...
--> 1 entry/entries in data_libri/lang/oov.txt
--> data_libri/lang/oov.int corresponds to data_libri/lang/oov.txt
--> data_libri/lang/oov.{txt, int} are OK

--> data_libri/lang/L.fst is olabel sorted
--> data_libri/lang/L_disambig.fst is olabel sorted
--> WARNING (check output above for warnings)

####===============####
#### TRAINING GMMs ####
####===============####


####===========================####
#### BEGIN TRAINING MONOPHONES ####
####===========================####

#### Train Monophones ####
### Define audio features ###
feat-to-dim 'ark,s,cs:apply-cmvn --norm-vars=true --utt2spk=ark:data_libri/train/split8/1/utt2spk scp:data_libri/train/split8/1/cmvn.scp scp:data_libri/train/split8/1/feats.scp ark:- | add-deltas ark:- ark:- |' - 
apply-cmvn --norm-vars=true --utt2spk=ark:data_libri/train/split8/1/utt2spk scp:data_libri/train/split8/1/cmvn.scp scp:data_libri/train/split8/1/feats.scp ark:- 
add-deltas ark:- ark:- 
WARNING (feat-to-dim[5.3.243~1-e4cd1]:Close():kaldi-io.cc:512) Pipe apply-cmvn --norm-vars=true --utt2spk=ark:data_libri/train/split8/1/utt2spk scp:data_libri/train/split8/1/cmvn.scp scp:data_libri/train/split8/1/feats.scp ark:- | add-deltas ark:- ark:- | had nonzero return status 36096
steps/train_mono.sh: Initializing monophone system
steps/train_mono.sh: Compiling monophone training graphs

##########################################
### BEGIN FLATSTART MONOPHONE TRAINING ###
##########################################
steps/train_mono.sh: Aligning data from flat start (pass 0)
steps/train_mono.sh: Estimating model from flat start alignments

########################################
### BEGIN MAIN EM MONOPHONE TRAINING ###
########################################

steps/train_mono.sh: Pass 1
steps/train_mono.sh: Expectation Step in EM Algorithm
steps/train_mono.sh: Maximize-Step in EM Algorithm
../../../src/gmmbin/gmm-info exp_libri/monophones/final.mdl 
number of phones 71
number of pdfs 215
number of transition-ids 438
number of transition-states 215
feature dimension 39
number of gaussians 215
#### Align Monophones ####
cat: exp_libri/monophones/splice_opts: No such file or directory
cp: cannot stat 'exp_libri/monophones/splice_opts': No such file or directory
cat: exp_libri/monophones/delta_opts: No such file or directory
cp: cannot stat 'exp_libri/monophones/delta_opts': No such file or directory
steps/align_si.sh: feature type is delta
steps/align_si.sh: Aligning data in data_libri/train using model from exp_libri/monophones putting alignments in exp_libri/monophones_aligned

####===========================####
#### END TRAINING MONOPHONES ####
####===========================####


####==========================####
#### BEGIN TRAINING TRIPHONES ####
####==========================####

### Train Triphones ###
steps/train_deltas.sh --cmd utils/run.pl --num-iters 2 --beam 10 100 200 data_libri/train data_libri/lang exp_libri/monophones_aligned exp_libri/triphones
num_leaves = 100
tot_gauss = 200
steps/train_deltas.sh: accumulating tree stats
steps/train_deltas.sh: getting questions for tree-building, via clustering
steps/train_deltas.sh: building the tree
steps/train_deltas.sh: Initializing triphone model
steps/train_deltas.sh: converting alignments from exp_libri/monophones_aligned to use current senomes
steps/train_deltas.sh: compiling training graphs (HMMs) of transcripts

steps/train_deltas.sh: training pass 1
steps/train_deltas.sh: M-Step in EM Algorithm

steps/train_deltas.sh: Done training system with delta+delta-delta features in exp_libri/triphones

../../../src/gmmbin/gmm-info exp_libri/triphones/final.mdl 
number of phones 71
number of pdfs 96
number of transition-ids 438
number of transition-states 215
feature dimension 39
number of gaussians 100
### Align Triphones ###
cat: exp_libri/triphones/splice_opts: No such file or directory
cp: cannot stat 'exp_libri/triphones/splice_opts': No such file or directory
cat: exp_libri/triphones/delta_opts: No such file or directory
cp: cannot stat 'exp_libri/triphones/delta_opts': No such file or directory
steps/align_si.sh: feature type is delta
steps/align_si.sh: Aligning data in data_libri/train using model from exp_libri/triphones putting alignments in exp_libri/triphones_aligned

####========================####
#### END TRAINING TRIPHONES ####
####========================####


####===================####
#### GRAPH COMPILATION ####
####===================####

arpa2fst - 
LOG (arpa2fst[5.3.243~1-e4cd1]:Read():arpa-file-parser.cc:94) Reading \data\ section.
LOG (arpa2fst[5.3.243~1-e4cd1]:Read():arpa-file-parser.cc:149) Reading \1-grams: section.
LOG (arpa2fst[5.3.243~1-e4cd1]:Read():arpa-file-parser.cc:149) Reading \2-grams: section.
WARNING (arpa2fst[5.3.243~1-e4cd1]:ConsumeNGram():arpa-lm-compiler.cc:313) line 7242 [-2.96997	<s> <s>] skipped: n-gram has invalid BOS/EOS placement
fstisstochastic data_libri/lang_decode/G.fst 
8.74073e-05 -0.146296
Succeeded in formatting data

### compile LG.fst ###
fstpushspecial 
fstminimizeencoded 
fstdeterminizestar --use-log=true 
fsttablecompose data_libri/lang_decode/L_disambig.fst data_libri/lang_decode/G.fst 
fstisstochastic data_libri/lang_decode/tmp/LG.fst 
-0.0937748 -0.0943346
[info]: LG not stochastic.
### compile CLG.fst ###
fstcomposecontext --context-size=3 --central-position=1 --read-disambig-syms=data_libri/lang_decode/phones/disambig.int --write-disambig-syms=data_libri/lang_decode/tmp/disambig_ilabels_3_1.int data_libri/lang_decode/tmp/ilabels_3_1 
fstisstochastic data_libri/lang_decode/tmp/CLG_3_1.fst 
0 -0.0943346
[info]: CLG not stochastic.
### compile Ha.fst ###
make-h-transducer --disambig-syms-out=exp_libri/triphones/graph/disambig_tid.int --transition-scale=1.0 data_libri/lang_decode/tmp/ilabels_3_1 exp_libri/triphones/tree exp_libri/triphones/final.mdl 
### compile HCLGa.fst ###
fstdeterminizestar --use-log=true 
fstminimizeencoded 
fsttablecompose exp_libri/triphones/graph/Ha.fst data_libri/lang_decode/tmp/CLG_3_1.fst 
fstrmsymbols exp_libri/triphones/graph/disambig_tid.int 
fstrmepslocal 
fstisstochastic exp_libri/triphones/graph/HCLGa.fst 
0 -0.248565
HCLGa is not stochastic
### compile HCLG.fst ###
add-self-loops --self-loop-scale=0.1 --reorder=true exp_libri/triphones/final.mdl 

####==========================####
#### TESTING AUDIO DATA PREP ####
####==========================####

local/prepare_audio_data.sh: looking for audio data in /data/librispeech/audio/8k/test

 .44 hours of audio for training 
 in data_libri/test/wav.scp


####=========================####
#### TEST FEATURE EXTRACTION ####
####=========================####

MAKE PLPs:
nj=8
Source data dir: data_libri/test
Destination feats dir: plp_libri
Log dir: data_libri/test/make_plp_log
steps/make_plp.sh --cmd utils/run.pl --nj 8 data_libri/test plp_libri/make_plp_log plp_libri
utils/validate_data_dir.sh: Successfully validated data-directory data_libri/test
steps/make_plp.sh: [info]: no segments file exists: assuming wav.scp indexed by utterance.
Succeeded creating PLP features for test
fix_data_dir.sh: kept all 119 utterances.
fix_data_dir.sh: old files are kept in data_libri/test/.backup

Succeeded creating CMVN stats for test

fix_data_dir.sh: kept all 119 utterances.
fix_data_dir.sh: old files are kept in data_libri/test/.backup
./extract_feats.sh: splitting feats into 8 subdirs
utils/validate_data_dir.sh: Successfully validated data-directory data_libri/test/split8/1
utils/validate_data_dir.sh: Successfully validated data-directory data_libri/test/split8/2
utils/validate_data_dir.sh: Successfully validated data-directory data_libri/test/split8/3
utils/validate_data_dir.sh: Successfully validated data-directory data_libri/test/split8/4
utils/validate_data_dir.sh: Successfully validated data-directory data_libri/test/split8/5
utils/validate_data_dir.sh: Successfully validated data-directory data_libri/test/split8/6
utils/validate_data_dir.sh: Successfully validated data-directory data_libri/test/split8/7
utils/validate_data_dir.sh: Successfully validated data-directory data_libri/test/split8/8

####================####
#### BEGIN DECODING ####
####================####


####================####
#### BEGIN DECODING ####
####================####


 ### Decoding with 8 jobs  ### steps/decode.sh 6
decode.sh: feature type is delta
#### BEGIN CALCULATE WER ####

####==============####
#### END DECODING ####
####==============####

###
###
../../../src/gmmbin/gmm-info exp_libri/triphones/final.mdl 
###
