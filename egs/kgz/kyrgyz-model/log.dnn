
###### BEGIN LANGUAGE INFO ######
lang= org
num_targets= 770
data_dir= data/org/train
ali_dir= exp/org/tri_ali
egs_dir= exp/org/nnet3/egs
###### END LANGUAGE INFO ######


###### BEGIN LANGUAGE INFO ######
lang= org
num_targets= 770
data_dir= data/org/train
ali_dir= exp/org/tri_ali
egs_dir= exp/org/nnet3/egs
###### END LANGUAGE INFO ######

### ============================ ###
### CREATE CONFIG FILES FOR NNET ###
### ============================ ###
feat-to-dim scp:data/org/train/feats.scp - 
nnet3-init exp/nnet3/multitask/configs//ref.config exp/nnet3/multitask/configs//ref.raw 
LOG (nnet3-init[5.3.83~1-9204]:main():nnet3-init.cc:80) Initialized raw neural net and wrote it to exp/nnet3/multitask/configs//ref.raw
nnet3-info "nnet3-copy --edits='rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - |" 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/configs//ref.raw to -
nnet3-init exp/nnet3/multitask/configs//ref.config exp/nnet3/multitask/configs//ref.raw 
LOG (nnet3-init[5.3.83~1-9204]:main():nnet3-init.cc:80) Initialized raw neural net and wrote it to exp/nnet3/multitask/configs//ref.raw
nnet3-info "nnet3-copy --edits='rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - |" 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/configs//ref.raw to -
steps/nnet3/xconfig_to_configs.py --xconfig-file exp/nnet3/multitask/configs/network.xconfig --config-dir exp/nnet3/multitask/configs/ --nnet-edits=rename-node old-name=output-0 new-name=output
### ================== ###
### MAKE NNET3 EGS DIR ###
### ================== ###
### MAKE SEPARATE EGS DIR PER LANGUAGE ###
local/nnet3/prepare_multilingual_egs.sh --cmd utils/run.pl --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 2 data/org/train data/org/train exp/org/tri_ali exp/org/tri_ali exp/org/nnet3/egs exp/org/nnet3/egs
local/nnet3/prepare_multilingual_egs.sh --cmd utils/run.pl --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 2 data/org/train data/org/train exp/org/tri_ali exp/org/tri_ali exp/org/nnet3/egs exp/org/nnet3/egs
2
data/org/train data/org/train exp/org/tri_ali exp/org/tri_ali exp/org/nnet3/egs exp/org/nnet3/egs
local/nnet3/prepare_multilingual_egs.sh: Generate separate egs directory per language for multilingual training.
online_ivector_dir =
local/nnet3/prepare_multilingual_egs.sh: Generate egs for 
local/nnet3/prepare_multilingual_egs.sh: calling get_egs.sh
steps/nnet3/get_egs.sh --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 --samples-per-iter 400000 --stage 0 --cmd utils/run.pl --generate-egs-scp true data/org/train exp/org/tri_ali exp/org/nnet3/egs
steps/nnet3/get_egs.sh: feature type is raw
steps/nnet3/get_egs.sh: working out number of frames of training data
feat-to-len scp:data/org/train/feats.scp ark,t:- 
steps/nnet3/get_egs.sh: working out feature dim
*** steps/nnet3/get_egs.sh: warning: the --frames-per-eg is too large to generate one archive with
*** as many as --samples-per-iter egs in it.  Consider reducing --frames-per-eg.
steps/nnet3/get_egs.sh: creating 1 archives, each with 60142 egs, with
steps/nnet3/get_egs.sh:   8 labels per example, and (left,right) context = (16,12)
steps/nnet3/get_egs.sh: copying data alignments
copy-int-vector ark:- ark,scp:exp/org/nnet3/egs/ali.ark,exp/org/nnet3/egs/ali.scp 
LOG (copy-int-vector[5.3.83~1-9204]:main():copy-int-vector.cc:83) Copied 546 vectors of int32.
steps/nnet3/get_egs.sh: Getting validation and training subset examples.
steps/nnet3/get_egs.sh: ... extracting validation and training-subset alignments.
... Getting subsets of validation examples for diagnostics and combination.
nnet3-copy-egs ark:- ark,scp:exp/org/nnet3/egs/combine.egs,exp/org/nnet3/egs/combine.scp 
LOG (nnet3-copy-egs[5.3.83~1-9204]:main():nnet3-copy-egs.cc:436) Read 7625 neural-network training examples, wrote 7625, 0 examples had errors.
rm: cannot remove 'exp/org/nnet3/egs/train_combine.scp': No such file or directory
rm: cannot remove 'exp/org/nnet3/egs/valid_combine.scp': No such file or directory
steps/nnet3/get_egs.sh: Generating training examples on disk
steps/nnet3/get_egs.sh: recombining and shuffling order of archives on disk
steps/nnet3/get_egs.sh: removing temporary archives
steps/nnet3/get_egs.sh: removing temporary alignments and transforms
steps/nnet3/get_egs.sh: Finished preparing training examples
online_ivector_dir =
### MAKE ONE BIG MULTILING EGS DIR ###
steps/nnet3/multilingual/combine_egs.sh --cmd utils/run.pl --samples-per-iter 10000 --lang2weight 0.5,0.5 2 exp/org/nnet3/egs exp/org/nnet3/egs exp/nnet3/multitask/egs
steps/nnet3/multilingual/combine_egs.sh: allocating multilingual examples for training.
steps/nnet3/multilingual/combine_egs.sh: combine combine.scp examples from all langs in exp/nnet3/multitask/egs/combine.scp.
steps/nnet3/multilingual/combine_egs.sh: combine train_diagnostic.scp examples from all langs in exp/nnet3/multitask/egs/train_diagnostic.scp.
steps/nnet3/multilingual/combine_egs.sh: combine valid_diagnostic.scp examples from all langs in exp/nnet3/multitask/egs/valid_diagnostic.scp.
steps/nnet3/multilingual/combine_egs.sh: Finished preparing multilingual training example.
### ================ ###
### BEGIN TRAIN NNET ###
### ================ ###
2017-12-03 13:10:55,001 [steps/nnet3/train_raw_dnn.py:34 - <module> - INFO ] Starting raw DNN trainer (train_raw_dnn.py)
2017-12-03 13:10:55,008 [steps/nnet3/train_raw_dnn.py:181 - train - INFO ] Arguments for the experiment
{'backstitch_training_interval': 1,
 'backstitch_training_scale': 0.0,
 'cleanup': True,
 'cmvn_opts': '--norm-means=false --norm-vars=false',
 'combine_sum_to_one_penalty': 0.0,
 'command': 'utils/run.pl',
 'compute_average_posteriors': False,
 'dir': 'exp/nnet3/multitask',
 'dropout_schedule': None,
 'egs_command': 'queue.pl',
 'egs_dir': 'exp/nnet3/multitask/egs',
 'egs_opts': None,
 'egs_stage': 0,
 'email': None,
 'exit_stage': None,
 'feat_dir': 'data/org/train',
 'final_combination': True,
 'final_effective_lrate': 0.00015,
 'frames_per_eg': 8,
 'image_augmentation_opts': None,
 'initial_effective_lrate': 0.0015,
 'max_lda_jobs': 10,
 'max_models_combine': 20,
 'max_param_change': 2.0,
 'minibatch_size': '256,128',
 'momentum': 0.0,
 'nj': 4,
 'num_epochs': 1.0,
 'num_jobs_compute_prior': 10,
 'num_jobs_final': 1,
 'num_jobs_initial': 1,
 'online_ivector_dir': None,
 'preserve_model_interval': 100,
 'presoftmax_prior_scale_power': -0.25,
 'prior_subset_size': 20000,
 'proportional_shrink': 0.0,
 'rand_prune': 4.0,
 'remove_egs': True,
 'reporting_interval': 0.1,
 'samples_per_iter': 10000,
 'shuffle_buffer_size': 5000,
 'srand': 0,
 'stage': -5,
 'targets_scp': 'exp/org/tri_ali',
 'transform_dir': None,
 'use_dense_targets': False,
 'use_gpu': True}
2017-12-03 13:10:55,013 [steps/libs/nnet3/train/common.py:410 - verify_egs_dir - WARNING ] The ivector ids are not used. It's your responsibility to make sure the ivector extractor has been used consistently
2017-12-03 13:10:55,013 [steps/nnet3/train_raw_dnn.py:294 - train - INFO ] Preparing the initial network.
2017-12-03 13:10:55,082 [steps/nnet3/train_raw_dnn.py:328 - train - INFO ] Training will run for 1.0 epochs = 72 iterations
2017-12-03 13:10:55,083 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 0)
2017-12-03 13:10:55,086 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 0, learning rate is 0.0015.
2017-12-03 13:10:56,585 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 1)
2017-12-03 13:10:56,590 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 1, learning rate is 0.00145278842229.
2017-12-03 13:10:58,066 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 2)
2017-12-03 13:10:58,071 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 2, learning rate is 0.00140706279996.
2017-12-03 13:11:00,617 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 3)
2017-12-03 13:11:00,622 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 3, learning rate is 0.00136277636348.
2017-12-03 13:11:03,118 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 4)
2017-12-03 13:11:03,126 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 4, learning rate is 0.00131988381535.
2017-12-03 13:11:05,841 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 5)
2017-12-03 13:11:05,847 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 5, learning rate is 0.00127834128381.
2017-12-03 13:11:08,068 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 6)
2017-12-03 13:11:08,074 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 6, learning rate is 0.0012381062779.
2017-12-03 13:11:10,922 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 7)
2017-12-03 13:11:10,928 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 7, learning rate is 0.00119913764407.
2017-12-03 13:11:13,496 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 8)
2017-12-03 13:11:13,506 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 8, learning rate is 0.00116139552402.
2017-12-03 13:11:15,601 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 9)
2017-12-03 13:11:15,610 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 9, learning rate is 0.001124841314.
2017-12-03 13:11:17,343 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 10)
2017-12-03 13:11:17,349 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 10, learning rate is 0.00108943762526.
2017-12-03 13:11:18,980 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 11)
2017-12-03 13:11:18,989 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 11, learning rate is 0.00105514824586.
2017-12-03 13:11:21,756 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 12)
2017-12-03 13:11:21,760 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 12, learning rate is 0.00102193810359.
2017-12-03 13:11:24,281 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 13)
2017-12-03 13:11:24,286 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 13, learning rate is 0.000989773230125.
2017-12-03 13:11:27,132 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 14)
2017-12-03 13:11:27,138 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 14, learning rate is 0.000958620726279.
2017-12-03 13:11:29,435 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 15)
2017-12-03 13:11:29,439 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 15, learning rate is 0.000928448728337.
2017-12-03 13:11:32,049 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 16)
2017-12-03 13:11:32,054 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 16, learning rate is 0.000899226375478.
2017-12-03 13:11:34,619 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 17)
2017-12-03 13:11:34,624 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 17, learning rate is 0.000870923778208.
2017-12-03 13:11:36,585 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 18)
2017-12-03 13:11:36,590 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 18, learning rate is 0.000843511987786.
2017-12-03 13:11:38,188 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 19)
2017-12-03 13:11:38,193 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 19, learning rate is 0.000816962966612.
2017-12-03 13:11:39,829 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 20)
2017-12-03 13:11:39,834 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 20, learning rate is 0.000791249559555.
2017-12-03 13:11:42,760 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 21)
2017-12-03 13:11:42,769 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 21, learning rate is 0.000766345466176.
2017-12-03 13:11:45,307 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 22)
2017-12-03 13:11:45,314 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 22, learning rate is 0.000742225213823.
2017-12-03 13:11:47,889 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 23)
2017-12-03 13:11:47,893 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 23, learning rate is 0.000718864131583.
2017-12-03 13:11:50,070 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 24)
2017-12-03 13:11:50,075 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 24, learning rate is 0.000696238325042.
2017-12-03 13:11:52,873 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 25)
2017-12-03 13:11:52,879 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 25, learning rate is 0.00067432465185.
2017-12-03 13:11:55,516 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 26)
2017-12-03 13:11:55,522 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 26, learning rate is 0.000653100698048.
2017-12-03 13:11:57,505 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 27)
2017-12-03 13:11:57,511 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 27, learning rate is 0.000632544755143.
2017-12-03 13:11:59,149 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 28)
2017-12-03 13:11:59,154 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 28, learning rate is 0.000612635797901.
2017-12-03 13:12:00,778 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 29)
2017-12-03 13:12:00,785 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 29, learning rate is 0.000593353462847.
2017-12-03 13:12:03,412 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 30)
2017-12-03 13:12:03,418 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 30, learning rate is 0.000574678027434.
2017-12-03 13:12:06,048 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 31)
2017-12-03 13:12:06,053 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 31, learning rate is 0.000556590389867.
2017-12-03 13:12:08,600 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 32)
2017-12-03 13:12:08,609 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 32, learning rate is 0.000539072049571.
2017-12-03 13:12:10,830 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 33)
2017-12-03 13:12:10,838 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 33, learning rate is 0.000522105088264.
2017-12-03 13:12:13,669 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 34)
2017-12-03 13:12:13,674 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 34, learning rate is 0.000505672151633.
2017-12-03 13:12:16,252 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 35)
2017-12-03 13:12:16,257 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 35, learning rate is 0.000489756431578.
2017-12-03 13:12:18,174 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 36)
2017-12-03 13:12:18,179 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 36, learning rate is 0.000474341649025.
2017-12-03 13:12:19,882 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 37)
2017-12-03 13:12:19,887 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 37, learning rate is 0.000459412037276.
2017-12-03 13:12:21,489 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 38)
2017-12-03 13:12:21,494 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 38, learning rate is 0.000444952325877.
2017-12-03 13:12:24,363 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 39)
2017-12-03 13:12:24,368 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 39, learning rate is 0.000430947725003.
2017-12-03 13:12:26,876 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 40)
2017-12-03 13:12:26,886 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 40, learning rate is 0.000417383910331.
2017-12-03 13:12:29,845 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 41)
2017-12-03 13:12:29,851 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 41, learning rate is 0.000404247008386.
2017-12-03 13:12:32,135 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 42)
2017-12-03 13:12:32,142 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 42, learning rate is 0.000391523582352.
2017-12-03 13:12:34,809 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 43)
2017-12-03 13:12:34,814 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 43, learning rate is 0.00037920061833.
2017-12-03 13:12:37,444 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 44)
2017-12-03 13:12:37,449 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 44, learning rate is 0.000367265512023.
2017-12-03 13:12:39,427 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 45)
2017-12-03 13:12:39,433 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 45, learning rate is 0.000355706055849.
2017-12-03 13:12:41,066 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 46)
2017-12-03 13:12:41,074 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 46, learning rate is 0.000344510426451.
2017-12-03 13:12:42,663 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 47)
2017-12-03 13:12:42,668 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 47, learning rate is 0.000333667172604.
2017-12-03 13:12:45,662 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 48)
2017-12-03 13:12:45,669 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 48, learning rate is 0.000323165203505.
2017-12-03 13:12:48,245 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 49)
2017-12-03 13:12:48,253 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 49, learning rate is 0.000312993777426.
2017-12-03 13:12:51,016 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 50)
2017-12-03 13:12:51,021 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 50, learning rate is 0.000303142490729.
2017-12-03 13:12:53,245 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 51)
2017-12-03 13:12:53,250 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 51, learning rate is 0.000293601267223.
2017-12-03 13:12:56,034 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 52)
2017-12-03 13:12:56,041 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 52, learning rate is 0.000284360347861.
2017-12-03 13:12:58,705 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 53)
2017-12-03 13:12:58,714 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 53, learning rate is 0.000275410280754.
2017-12-03 13:13:00,753 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 54)
2017-12-03 13:13:00,759 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 54, learning rate is 0.000266741911506.
2017-12-03 13:13:02,449 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 55)
2017-12-03 13:13:02,454 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 55, learning rate is 0.00025834637385.
2017-12-03 13:13:04,117 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 56)
2017-12-03 13:13:04,123 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 56, learning rate is 0.00025021508058.
2017-12-03 13:13:06,800 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 57)
2017-12-03 13:13:06,805 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 57, learning rate is 0.000242339714766.
2017-12-03 13:13:09,425 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 58)
2017-12-03 13:13:09,430 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 58, learning rate is 0.000234712221249.
2017-12-03 13:13:11,997 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 59)
2017-12-03 13:13:12,003 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 59, learning rate is 0.0002273247984.
2017-12-03 13:13:14,328 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 60)
2017-12-03 13:13:14,333 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 60, learning rate is 0.000220169890143.
2017-12-03 13:13:17,210 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 61)
2017-12-03 13:13:17,215 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 61, learning rate is 0.000213240178225.
2017-12-03 13:13:19,840 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 62)
2017-12-03 13:13:19,845 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 62, learning rate is 0.000206528574728.
2017-12-03 13:13:21,929 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 63)
2017-12-03 13:13:21,935 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 63, learning rate is 0.000200028214824.
2017-12-03 13:13:23,589 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 64)
2017-12-03 13:13:23,594 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 64, learning rate is 0.000193732449752.
2017-12-03 13:13:25,385 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 65)
2017-12-03 13:13:25,391 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 65, learning rate is 0.000187634840015.
2017-12-03 13:13:28,045 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 66)
2017-12-03 13:13:28,051 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 66, learning rate is 0.000181729148794.
2017-12-03 13:13:30,680 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 67)
2017-12-03 13:13:30,685 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 67, learning rate is 0.000176009335574.
2017-12-03 13:13:33,281 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 68)
2017-12-03 13:13:33,286 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 68, learning rate is 0.000170469549958.
2017-12-03 13:13:35,487 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 69)
2017-12-03 13:13:35,493 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 69, learning rate is 0.000165104125688.
2017-12-03 13:13:38,128 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 70)
2017-12-03 13:13:38,133 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 70, learning rate is 0.000159907574848.
2017-12-03 13:13:40,726 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 71)
2017-12-03 13:13:40,733 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 71, learning rate is 0.00015.
2017-12-03 13:13:42,658 [steps/nnet3/train_raw_dnn.py:401 - train - INFO ] Doing final combination to produce final.raw
2017-12-03 13:13:42,658 [steps/libs/nnet3/train/frame_level_objf/common.py:481 - combine_models - INFO ] Combining set([37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72]) models.
2017-12-03 13:13:55,696 [steps/nnet3/train_raw_dnn.py:423 - train - INFO ] Cleaning up the experiment directory exp/nnet3/multitask
exp/nnet3/multitask: num-iters=72 nj=1..1 num-params=0.3M combine=-3.65->-3.56
steps/nnet3/train_raw_dnn.py --stage=-5 --cmd=utils/run.pl --trainer.num-epochs 1 --trainer.optimization.num-jobs-initial=1 --trainer.optimization.num-jobs-final=1 --trainer.optimization.initial-effective-lrate=0.0015 --trainer.optimization.final-effective-lrate=0.00015 --trainer.optimization.minibatch-size=256,128 --trainer.samples-per-iter=10000 --trainer.max-param-change=2.0 --trainer.srand=0 --feat.cmvn-opts=--norm-means=false --norm-vars=false --feat-dir data/org/train --egs.dir exp/nnet3/multitask/egs --use-dense-targets false --targets-scp exp/org/tri_ali --cleanup.remove-egs true --use-gpu true --dir=exp/nnet3/multitask
['steps/nnet3/train_raw_dnn.py', '--stage=-5', '--cmd=utils/run.pl', '--trainer.num-epochs', '1', '--trainer.optimization.num-jobs-initial=1', '--trainer.optimization.num-jobs-final=1', '--trainer.optimization.initial-effective-lrate=0.0015', '--trainer.optimization.final-effective-lrate=0.00015', '--trainer.optimization.minibatch-size=256,128', '--trainer.samples-per-iter=10000', '--trainer.max-param-change=2.0', '--trainer.srand=0', '--feat.cmvn-opts=--norm-means=false --norm-vars=false', '--feat-dir', 'data/org/train', '--egs.dir', 'exp/nnet3/multitask/egs', '--use-dense-targets', 'false', '--targets-scp', 'exp/org/tri_ali', '--cleanup.remove-egs', 'true', '--use-gpu', 'true', '--dir=exp/nnet3/multitask']
use_multitask_egs=True
### ============== ###
### END TRAIN NNET ###
### ============== ###
### ========================== ###
### SPLIT & COPY NNET PER LANG ###
### ========================== ###
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/org/tri_ali/final.mdl - exp/nnet3/multitask/org/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/org/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language org.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/org exp/org/nnet3/egs
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/org/tri_ali/final.mdl - exp/nnet3/multitask/org/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-1 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/org/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language org.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/org exp/org/nnet3/egs
### ============== ###
### BEGIN DECODING ###
### ============== ###
### decoding with 4 jobs, unigram LM ###
steps/nnet3/decode.sh --nj 8 --cmd utils/run.pl --max-active 600 --min-active 200 exp_org/triphones/graph data_org/test exp/nnet3/multitask/decode exp/nnet3/multitask/org/final_adj.mdl SPOKEN_NOISE SIL
steps/nnet3/decode.sh: feature type is raw
steps/nnet3/decode.sh: line 169: steps/diagnostic/analyze_lats.sh: No such file or directory
Decoding done.

#### BEGIN CALCULATE WER ####
###==============###
### END DECODING ###
###==============###

###### BEGIN LANGUAGE INFO ######
lang= org
num_targets= 770
data_dir= data/org/train
ali_dir= exp/org/tri_ali
egs_dir= exp/org/nnet3/egs
###### END LANGUAGE INFO ######


###### BEGIN LANGUAGE INFO ######
lang= org2
num_targets= 722
data_dir= data/org2/train
ali_dir= exp/org2/tri_ali
egs_dir= exp/org2/nnet3/egs
###### END LANGUAGE INFO ######

### ============================ ###
### CREATE CONFIG FILES FOR NNET ###
### ============================ ###
feat-to-dim scp:data/org/train/feats.scp - 
nnet3-init exp/nnet3/multitask/configs//ref.config exp/nnet3/multitask/configs//ref.raw 
LOG (nnet3-init[5.3.83~1-9204]:main():nnet3-init.cc:80) Initialized raw neural net and wrote it to exp/nnet3/multitask/configs//ref.raw
nnet3-info "nnet3-copy --edits='rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - |" 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/configs//ref.raw to -
nnet3-init exp/nnet3/multitask/configs//ref.config exp/nnet3/multitask/configs//ref.raw 
LOG (nnet3-init[5.3.83~1-9204]:main():nnet3-init.cc:80) Initialized raw neural net and wrote it to exp/nnet3/multitask/configs//ref.raw
nnet3-info "nnet3-copy --edits='rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - |" 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/configs//ref.raw to -
steps/nnet3/xconfig_to_configs.py --xconfig-file exp/nnet3/multitask/configs/network.xconfig --config-dir exp/nnet3/multitask/configs/ --nnet-edits=rename-node old-name=output-0 new-name=output
### ================== ###
### MAKE NNET3 EGS DIR ###
### ================== ###
### MAKE SEPARATE EGS DIR PER LANGUAGE ###
local/nnet3/prepare_multilingual_egs.sh --cmd utils/run.pl --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 2 data/org/train data/org2/train exp/org/tri_ali exp/org2/tri_ali exp/org/nnet3/egs exp/org2/nnet3/egs
local/nnet3/prepare_multilingual_egs.sh --cmd utils/run.pl --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 2 data/org/train data/org2/train exp/org/tri_ali exp/org2/tri_ali exp/org/nnet3/egs exp/org2/nnet3/egs
2
data/org/train data/org2/train exp/org/tri_ali exp/org2/tri_ali exp/org/nnet3/egs exp/org2/nnet3/egs
local/nnet3/prepare_multilingual_egs.sh: Generate separate egs directory per language for multilingual training.
online_ivector_dir =
local/nnet3/prepare_multilingual_egs.sh: Generate egs for 
local/nnet3/prepare_multilingual_egs.sh: calling get_egs.sh
steps/nnet3/get_egs.sh --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 --samples-per-iter 400000 --stage 0 --cmd utils/run.pl --generate-egs-scp true data/org/train exp/org/tri_ali exp/org/nnet3/egs
steps/nnet3/get_egs.sh: feature type is raw
steps/nnet3/get_egs.sh: working out number of frames of training data
feat-to-len scp:data/org/train/feats.scp ark,t:- 
steps/nnet3/get_egs.sh: working out feature dim
*** steps/nnet3/get_egs.sh: warning: the --frames-per-eg is too large to generate one archive with
*** as many as --samples-per-iter egs in it.  Consider reducing --frames-per-eg.
steps/nnet3/get_egs.sh: creating 1 archives, each with 60142 egs, with
steps/nnet3/get_egs.sh:   8 labels per example, and (left,right) context = (16,12)
steps/nnet3/get_egs.sh: copying data alignments
copy-int-vector ark:- ark,scp:exp/org/nnet3/egs/ali.ark,exp/org/nnet3/egs/ali.scp 
LOG (copy-int-vector[5.3.83~1-9204]:main():copy-int-vector.cc:83) Copied 546 vectors of int32.
steps/nnet3/get_egs.sh: Getting validation and training subset examples.
steps/nnet3/get_egs.sh: ... extracting validation and training-subset alignments.
... Getting subsets of validation examples for diagnostics and combination.
nnet3-copy-egs ark:- ark,scp:exp/org/nnet3/egs/combine.egs,exp/org/nnet3/egs/combine.scp 
LOG (nnet3-copy-egs[5.3.83~1-9204]:main():nnet3-copy-egs.cc:436) Read 7625 neural-network training examples, wrote 7625, 0 examples had errors.
rm: cannot remove 'exp/org/nnet3/egs/train_combine.scp': No such file or directory
rm: cannot remove 'exp/org/nnet3/egs/valid_combine.scp': No such file or directory
steps/nnet3/get_egs.sh: Generating training examples on disk
steps/nnet3/get_egs.sh: recombining and shuffling order of archives on disk
steps/nnet3/get_egs.sh: removing temporary archives
steps/nnet3/get_egs.sh: removing temporary alignments and transforms
steps/nnet3/get_egs.sh: Finished preparing training examples
online_ivector_dir =
local/nnet3/prepare_multilingual_egs.sh: Generate egs for 
local/nnet3/prepare_multilingual_egs.sh: calling get_egs.sh
steps/nnet3/get_egs.sh --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 --samples-per-iter 400000 --stage 0 --cmd utils/run.pl --generate-egs-scp true data/org2/train exp/org2/tri_ali exp/org2/nnet3/egs
steps/nnet3/get_egs.sh: feature type is raw
steps/nnet3/get_egs.sh: working out number of frames of training data
feat-to-len scp:data/org2/train/feats.scp ark,t:- 
steps/nnet3/get_egs.sh: working out feature dim
*** steps/nnet3/get_egs.sh: warning: the --frames-per-eg is too large to generate one archive with
*** as many as --samples-per-iter egs in it.  Consider reducing --frames-per-eg.
steps/nnet3/get_egs.sh: creating 1 archives, each with 60142 egs, with
steps/nnet3/get_egs.sh:   8 labels per example, and (left,right) context = (16,12)
steps/nnet3/get_egs.sh: copying data alignments
copy-int-vector ark:- ark,scp:exp/org2/nnet3/egs/ali.ark,exp/org2/nnet3/egs/ali.scp 
LOG (copy-int-vector[5.3.83~1-9204]:main():copy-int-vector.cc:83) Copied 547 vectors of int32.
steps/nnet3/get_egs.sh: Getting validation and training subset examples.
steps/nnet3/get_egs.sh: ... extracting validation and training-subset alignments.
... Getting subsets of validation examples for diagnostics and combination.
nnet3-copy-egs ark:- ark,scp:exp/org2/nnet3/egs/combine.egs,exp/org2/nnet3/egs/combine.scp 
LOG (nnet3-copy-egs[5.3.83~1-9204]:main():nnet3-copy-egs.cc:436) Read 7625 neural-network training examples, wrote 7625, 0 examples had errors.
rm: cannot remove 'exp/org2/nnet3/egs/train_combine.scp': No such file or directory
rm: cannot remove 'exp/org2/nnet3/egs/valid_combine.scp': No such file or directory
steps/nnet3/get_egs.sh: Generating training examples on disk
steps/nnet3/get_egs.sh: recombining and shuffling order of archives on disk
steps/nnet3/get_egs.sh: removing temporary archives
steps/nnet3/get_egs.sh: removing temporary alignments and transforms
steps/nnet3/get_egs.sh: Finished preparing training examples
### MAKE ONE BIG MULTILING EGS DIR ###
steps/nnet3/multilingual/combine_egs.sh --cmd utils/run.pl --samples-per-iter 10000 --lang2weight 0.5,0.5 2 exp/org/nnet3/egs exp/org2/nnet3/egs exp/nnet3/multitask/egs
steps/nnet3/multilingual/combine_egs.sh: allocating multilingual examples for training.
steps/nnet3/multilingual/combine_egs.sh: combine combine.scp examples from all langs in exp/nnet3/multitask/egs/combine.scp.
steps/nnet3/multilingual/combine_egs.sh: combine train_diagnostic.scp examples from all langs in exp/nnet3/multitask/egs/train_diagnostic.scp.
steps/nnet3/multilingual/combine_egs.sh: combine valid_diagnostic.scp examples from all langs in exp/nnet3/multitask/egs/valid_diagnostic.scp.
steps/nnet3/multilingual/combine_egs.sh: Finished preparing multilingual training example.
### ================ ###
### BEGIN TRAIN NNET ###
### ================ ###
2017-12-03 13:23:48,703 [steps/nnet3/train_raw_dnn.py:34 - <module> - INFO ] Starting raw DNN trainer (train_raw_dnn.py)
2017-12-03 13:23:48,710 [steps/nnet3/train_raw_dnn.py:181 - train - INFO ] Arguments for the experiment
{'backstitch_training_interval': 1,
 'backstitch_training_scale': 0.0,
 'cleanup': True,
 'cmvn_opts': '--norm-means=false --norm-vars=false',
 'combine_sum_to_one_penalty': 0.0,
 'command': 'utils/run.pl',
 'compute_average_posteriors': False,
 'dir': 'exp/nnet3/multitask',
 'dropout_schedule': None,
 'egs_command': 'queue.pl',
 'egs_dir': 'exp/nnet3/multitask/egs',
 'egs_opts': None,
 'egs_stage': 0,
 'email': None,
 'exit_stage': None,
 'feat_dir': 'data/org/train',
 'final_combination': True,
 'final_effective_lrate': 0.00015,
 'frames_per_eg': 8,
 'image_augmentation_opts': None,
 'initial_effective_lrate': 0.0015,
 'max_lda_jobs': 10,
 'max_models_combine': 20,
 'max_param_change': 2.0,
 'minibatch_size': '256,128',
 'momentum': 0.0,
 'nj': 4,
 'num_epochs': 1.0,
 'num_jobs_compute_prior': 10,
 'num_jobs_final': 1,
 'num_jobs_initial': 1,
 'online_ivector_dir': None,
 'preserve_model_interval': 100,
 'presoftmax_prior_scale_power': -0.25,
 'prior_subset_size': 20000,
 'proportional_shrink': 0.0,
 'rand_prune': 4.0,
 'remove_egs': True,
 'reporting_interval': 0.1,
 'samples_per_iter': 10000,
 'shuffle_buffer_size': 5000,
 'srand': 0,
 'stage': -5,
 'targets_scp': 'exp/org/tri_ali',
 'transform_dir': None,
 'use_dense_targets': False,
 'use_gpu': True}
2017-12-03 13:23:48,715 [steps/libs/nnet3/train/common.py:410 - verify_egs_dir - WARNING ] The ivector ids are not used. It's your responsibility to make sure the ivector extractor has been used consistently
2017-12-03 13:23:48,715 [steps/nnet3/train_raw_dnn.py:294 - train - INFO ] Preparing the initial network.
2017-12-03 13:23:48,791 [steps/nnet3/train_raw_dnn.py:328 - train - INFO ] Training will run for 1.0 epochs = 72 iterations
2017-12-03 13:23:48,791 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 0)
2017-12-03 13:23:48,796 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 0, learning rate is 0.0015.
2017-12-03 13:23:51,782 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 1)
2017-12-03 13:23:51,787 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 1, learning rate is 0.00145278842229.
2017-12-03 13:23:54,645 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 2)
2017-12-03 13:23:54,650 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 2, learning rate is 0.00140706279996.
2017-12-03 13:23:57,437 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 3)
2017-12-03 13:23:57,442 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 3, learning rate is 0.00136277636348.
2017-12-03 13:24:00,115 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 4)
2017-12-03 13:24:00,120 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 4, learning rate is 0.00131988381535.
2017-12-03 13:24:02,706 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 5)
2017-12-03 13:24:02,711 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 5, learning rate is 0.00127834128381.
2017-12-03 13:24:05,652 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 6)
2017-12-03 13:24:05,657 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 6, learning rate is 0.0012381062779.
2017-12-03 13:24:08,480 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 7)
2017-12-03 13:24:08,485 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 7, learning rate is 0.00119913764407.
2017-12-03 13:24:11,220 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 8)
2017-12-03 13:24:11,225 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 8, learning rate is 0.00116139552402.
2017-12-03 13:24:13,936 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 9)
2017-12-03 13:24:13,941 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 9, learning rate is 0.001124841314.
2017-12-03 13:24:17,043 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 10)
2017-12-03 13:24:17,048 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 10, learning rate is 0.00108943762526.
2017-12-03 13:24:19,956 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 11)
2017-12-03 13:24:19,962 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 11, learning rate is 0.00105514824586.
2017-12-03 13:24:22,999 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 12)
2017-12-03 13:24:23,004 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 12, learning rate is 0.00102193810359.
2017-12-03 13:24:25,599 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 13)
2017-12-03 13:24:25,604 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 13, learning rate is 0.000989773230125.
2017-12-03 13:24:28,390 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 14)
2017-12-03 13:24:28,395 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 14, learning rate is 0.000958620726279.
2017-12-03 13:24:30,918 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 15)
2017-12-03 13:24:30,923 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 15, learning rate is 0.000928448728337.
2017-12-03 13:24:33,416 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 16)
2017-12-03 13:24:33,421 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 16, learning rate is 0.000899226375478.
2017-12-03 13:24:35,973 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 17)
2017-12-03 13:24:35,978 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 17, learning rate is 0.000870923778208.
2017-12-03 13:24:38,796 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 18)
2017-12-03 13:24:38,802 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 18, learning rate is 0.000843511987786.
2017-12-03 13:24:41,516 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 19)
2017-12-03 13:24:41,521 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 19, learning rate is 0.000816962966612.
2017-12-03 13:24:44,381 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 20)
2017-12-03 13:24:44,386 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 20, learning rate is 0.000791249559555.
2017-12-03 13:24:47,379 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 21)
2017-12-03 13:24:47,384 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 21, learning rate is 0.000766345466176.
2017-12-03 13:24:49,959 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 22)
2017-12-03 13:24:49,964 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 22, learning rate is 0.000742225213823.
2017-12-03 13:24:52,671 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 23)
2017-12-03 13:24:52,678 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 23, learning rate is 0.000718864131583.
2017-12-03 13:24:55,399 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 24)
2017-12-03 13:24:55,404 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 24, learning rate is 0.000696238325042.
2017-12-03 13:24:58,192 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 25)
2017-12-03 13:24:58,198 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 25, learning rate is 0.00067432465185.
2017-12-03 13:25:01,074 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 26)
2017-12-03 13:25:01,081 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 26, learning rate is 0.000653100698048.
2017-12-03 13:25:03,778 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 27)
2017-12-03 13:25:03,783 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 27, learning rate is 0.000632544755143.
2017-12-03 13:25:06,623 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 28)
2017-12-03 13:25:06,628 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 28, learning rate is 0.000612635797901.
2017-12-03 13:25:09,351 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 29)
2017-12-03 13:25:09,358 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 29, learning rate is 0.000593353462847.
2017-12-03 13:25:12,108 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 30)
2017-12-03 13:25:12,116 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 30, learning rate is 0.000574678027434.
2017-12-03 13:25:14,783 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 31)
2017-12-03 13:25:14,789 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 31, learning rate is 0.000556590389867.
2017-12-03 13:25:17,419 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 32)
2017-12-03 13:25:17,434 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 32, learning rate is 0.000539072049571.
2017-12-03 13:25:20,148 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 33)
2017-12-03 13:25:20,156 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 33, learning rate is 0.000522105088264.
2017-12-03 13:25:22,765 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 34)
2017-12-03 13:25:22,769 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 34, learning rate is 0.000505672151633.
2017-12-03 13:25:25,653 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 35)
2017-12-03 13:25:25,660 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 35, learning rate is 0.000489756431578.
2017-12-03 13:25:28,596 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 36)
2017-12-03 13:25:28,601 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 36, learning rate is 0.000474341649025.
2017-12-03 13:25:31,513 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 37)
2017-12-03 13:25:31,522 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 37, learning rate is 0.000459412037276.
2017-12-03 13:25:34,223 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 38)
2017-12-03 13:25:34,229 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 38, learning rate is 0.000444952325877.
2017-12-03 13:25:36,948 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 39)
2017-12-03 13:25:36,953 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 39, learning rate is 0.000430947725003.
2017-12-03 13:25:39,486 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 40)
2017-12-03 13:25:39,491 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 40, learning rate is 0.000417383910331.
2017-12-03 13:25:42,587 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 41)
2017-12-03 13:25:42,592 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 41, learning rate is 0.000404247008386.
2017-12-03 13:25:45,500 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 42)
2017-12-03 13:25:45,505 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 42, learning rate is 0.000391523582352.
2017-12-03 13:25:48,112 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 43)
2017-12-03 13:25:48,118 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 43, learning rate is 0.00037920061833.
2017-12-03 13:25:50,778 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 44)
2017-12-03 13:25:50,783 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 44, learning rate is 0.000367265512023.
2017-12-03 13:25:53,690 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 45)
2017-12-03 13:25:53,705 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 45, learning rate is 0.000355706055849.
2017-12-03 13:25:56,724 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 46)
2017-12-03 13:25:56,729 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 46, learning rate is 0.000344510426451.
2017-12-03 13:25:59,429 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 47)
2017-12-03 13:25:59,435 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 47, learning rate is 0.000333667172604.
2017-12-03 13:26:02,231 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 48)
2017-12-03 13:26:02,236 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 48, learning rate is 0.000323165203505.
2017-12-03 13:26:04,801 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 49)
2017-12-03 13:26:04,806 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 49, learning rate is 0.000312993777426.
2017-12-03 13:26:07,356 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 50)
2017-12-03 13:26:07,368 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 50, learning rate is 0.000303142490729.
2017-12-03 13:26:10,344 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 51)
2017-12-03 13:26:10,350 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 51, learning rate is 0.000293601267223.
2017-12-03 13:26:12,983 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 52)
2017-12-03 13:26:12,990 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 52, learning rate is 0.000284360347861.
2017-12-03 13:26:15,564 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 53)
2017-12-03 13:26:15,572 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 53, learning rate is 0.000275410280754.
2017-12-03 13:26:18,242 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 54)
2017-12-03 13:26:18,247 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 54, learning rate is 0.000266741911506.
2017-12-03 13:26:20,947 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 55)
2017-12-03 13:26:20,953 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 55, learning rate is 0.00025834637385.
2017-12-03 13:26:23,702 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 56)
2017-12-03 13:26:23,707 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 56, learning rate is 0.00025021508058.
2017-12-03 13:26:26,562 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 57)
2017-12-03 13:26:26,568 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 57, learning rate is 0.000242339714766.
2017-12-03 13:26:29,163 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 58)
2017-12-03 13:26:29,172 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 58, learning rate is 0.000234712221249.
2017-12-03 13:26:32,041 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 59)
2017-12-03 13:26:32,046 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 59, learning rate is 0.0002273247984.
2017-12-03 13:26:34,690 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 60)
2017-12-03 13:26:34,695 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 60, learning rate is 0.000220169890143.
2017-12-03 13:26:37,655 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 61)
2017-12-03 13:26:37,661 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 61, learning rate is 0.000213240178225.
2017-12-03 13:26:40,355 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 62)
2017-12-03 13:26:40,362 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 62, learning rate is 0.000206528574728.
2017-12-03 13:26:42,995 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 63)
2017-12-03 13:26:43,000 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 63, learning rate is 0.000200028214824.
2017-12-03 13:26:45,940 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 64)
2017-12-03 13:26:45,949 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 64, learning rate is 0.000193732449752.
2017-12-03 13:26:48,581 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 65)
2017-12-03 13:26:48,586 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 65, learning rate is 0.000187634840015.
2017-12-03 13:26:51,215 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 66)
2017-12-03 13:26:51,220 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 66, learning rate is 0.000181729148794.
2017-12-03 13:26:54,023 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 67)
2017-12-03 13:26:54,032 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 67, learning rate is 0.000176009335574.
2017-12-03 13:26:56,736 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 68)
2017-12-03 13:26:56,743 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 68, learning rate is 0.000170469549958.
2017-12-03 13:26:59,424 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 69)
2017-12-03 13:26:59,433 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 69, learning rate is 0.000165104125688.
2017-12-03 13:27:02,393 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 70)
2017-12-03 13:27:02,399 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 70, learning rate is 0.000159907574848.
2017-12-03 13:27:05,108 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 71)
2017-12-03 13:27:05,115 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 71, learning rate is 0.00015.
2017-12-03 13:27:07,712 [steps/nnet3/train_raw_dnn.py:401 - train - INFO ] Doing final combination to produce final.raw
2017-12-03 13:27:07,713 [steps/libs/nnet3/train/frame_level_objf/common.py:481 - combine_models - INFO ] Combining set([37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72]) models.
2017-12-03 13:27:20,824 [steps/nnet3/train_raw_dnn.py:423 - train - INFO ] Cleaning up the experiment directory exp/nnet3/multitask
exp/nnet3/multitask: num-iters=72 nj=1..1 num-params=0.2M combine=-3.25->-3.16
steps/nnet3/train_raw_dnn.py --stage=-5 --cmd=utils/run.pl --trainer.num-epochs 1 --trainer.optimization.num-jobs-initial=1 --trainer.optimization.num-jobs-final=1 --trainer.optimization.initial-effective-lrate=0.0015 --trainer.optimization.final-effective-lrate=0.00015 --trainer.optimization.minibatch-size=256,128 --trainer.samples-per-iter=10000 --trainer.max-param-change=2.0 --trainer.srand=0 --feat.cmvn-opts=--norm-means=false --norm-vars=false --feat-dir data/org/train --egs.dir exp/nnet3/multitask/egs --use-dense-targets false --targets-scp exp/org/tri_ali --cleanup.remove-egs true --use-gpu true --dir=exp/nnet3/multitask
['steps/nnet3/train_raw_dnn.py', '--stage=-5', '--cmd=utils/run.pl', '--trainer.num-epochs', '1', '--trainer.optimization.num-jobs-initial=1', '--trainer.optimization.num-jobs-final=1', '--trainer.optimization.initial-effective-lrate=0.0015', '--trainer.optimization.final-effective-lrate=0.00015', '--trainer.optimization.minibatch-size=256,128', '--trainer.samples-per-iter=10000', '--trainer.max-param-change=2.0', '--trainer.srand=0', '--feat.cmvn-opts=--norm-means=false --norm-vars=false', '--feat-dir', 'data/org/train', '--egs.dir', 'exp/nnet3/multitask/egs', '--use-dense-targets', 'false', '--targets-scp', 'exp/org/tri_ali', '--cleanup.remove-egs', 'true', '--use-gpu', 'true', '--dir=exp/nnet3/multitask']
use_multitask_egs=True
### ============== ###
### END TRAIN NNET ###
### ============== ###
### ========================== ###
### SPLIT & COPY NNET PER LANG ###
### ========================== ###
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/org/tri_ali/final.mdl - exp/nnet3/multitask/org/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/org/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language org.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/org exp/org/nnet3/egs
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/org2/tri_ali/final.mdl - exp/nnet3/multitask/org2/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-1 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/org2/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language org2.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/org2 exp/org2/nnet3/egs
### ============== ###
### BEGIN DECODING ###
### ============== ###
### decoding with 4 jobs, unigram LM ###
steps/nnet3/decode.sh --nj 8 --cmd utils/run.pl --max-active 600 --min-active 200 exp_org/triphones/graph data_org/test exp/nnet3/multitask/decode exp/nnet3/multitask/org/final_adj.mdl SPOKEN_NOISE SIL
steps/nnet3/decode.sh: feature type is raw
steps/nnet3/decode.sh: line 169: steps/diagnostic/analyze_lats.sh: No such file or directory
Decoding done.

#### BEGIN CALCULATE WER ####
###==============###
### END DECODING ###
###==============###

###### BEGIN LANGUAGE INFO ######
lang= org
num_targets= 770
data_dir= data/org/train
ali_dir= exp/org/tri_ali
egs_dir= exp/org/nnet3/egs
###### END LANGUAGE INFO ######


###### BEGIN LANGUAGE INFO ######
lang= no_voice
num_targets= 714
data_dir= data/no_voice/train
ali_dir= exp/no_voice/tri_ali
egs_dir= exp/no_voice/nnet3/egs
###### END LANGUAGE INFO ######

### ============================ ###
### CREATE CONFIG FILES FOR NNET ###
### ============================ ###
feat-to-dim scp:data/org/train/feats.scp - 
nnet3-init exp/nnet3/multitask/configs//ref.config exp/nnet3/multitask/configs//ref.raw 
LOG (nnet3-init[5.3.83~1-9204]:main():nnet3-init.cc:80) Initialized raw neural net and wrote it to exp/nnet3/multitask/configs//ref.raw
nnet3-info "nnet3-copy --edits='rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - |" 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/configs//ref.raw to -
nnet3-init exp/nnet3/multitask/configs//ref.config exp/nnet3/multitask/configs//ref.raw 
LOG (nnet3-init[5.3.83~1-9204]:main():nnet3-init.cc:80) Initialized raw neural net and wrote it to exp/nnet3/multitask/configs//ref.raw
nnet3-info "nnet3-copy --edits='rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - |" 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/configs//ref.raw to -
steps/nnet3/xconfig_to_configs.py --xconfig-file exp/nnet3/multitask/configs/network.xconfig --config-dir exp/nnet3/multitask/configs/ --nnet-edits=rename-node old-name=output-0 new-name=output
### ================== ###
### MAKE NNET3 EGS DIR ###
### ================== ###
### MAKE SEPARATE EGS DIR PER LANGUAGE ###
local/nnet3/prepare_multilingual_egs.sh --cmd utils/run.pl --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 2 data/org/train data/no_voice/train exp/org/tri_ali exp/no_voice/tri_ali exp/org/nnet3/egs exp/no_voice/nnet3/egs
local/nnet3/prepare_multilingual_egs.sh --cmd utils/run.pl --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 2 data/org/train data/no_voice/train exp/org/tri_ali exp/no_voice/tri_ali exp/org/nnet3/egs exp/no_voice/nnet3/egs
2
data/org/train data/no_voice/train exp/org/tri_ali exp/no_voice/tri_ali exp/org/nnet3/egs exp/no_voice/nnet3/egs
local/nnet3/prepare_multilingual_egs.sh: Generate separate egs directory per language for multilingual training.
online_ivector_dir =
local/nnet3/prepare_multilingual_egs.sh: Generate egs for 
local/nnet3/prepare_multilingual_egs.sh: calling get_egs.sh
steps/nnet3/get_egs.sh --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 --samples-per-iter 400000 --stage 0 --cmd utils/run.pl --generate-egs-scp true data/org/train exp/org/tri_ali exp/org/nnet3/egs
steps/nnet3/get_egs.sh: feature type is raw
steps/nnet3/get_egs.sh: working out number of frames of training data
feat-to-len scp:data/org/train/feats.scp ark,t:- 
steps/nnet3/get_egs.sh: working out feature dim
*** steps/nnet3/get_egs.sh: warning: the --frames-per-eg is too large to generate one archive with
*** as many as --samples-per-iter egs in it.  Consider reducing --frames-per-eg.
steps/nnet3/get_egs.sh: creating 1 archives, each with 60142 egs, with
steps/nnet3/get_egs.sh:   8 labels per example, and (left,right) context = (16,12)
steps/nnet3/get_egs.sh: copying data alignments
copy-int-vector ark:- ark,scp:exp/org/nnet3/egs/ali.ark,exp/org/nnet3/egs/ali.scp 
LOG (copy-int-vector[5.3.83~1-9204]:main():copy-int-vector.cc:83) Copied 546 vectors of int32.
steps/nnet3/get_egs.sh: Getting validation and training subset examples.
steps/nnet3/get_egs.sh: ... extracting validation and training-subset alignments.
... Getting subsets of validation examples for diagnostics and combination.
nnet3-copy-egs ark:- ark,scp:exp/org/nnet3/egs/combine.egs,exp/org/nnet3/egs/combine.scp 
LOG (nnet3-copy-egs[5.3.83~1-9204]:main():nnet3-copy-egs.cc:436) Read 7625 neural-network training examples, wrote 7625, 0 examples had errors.
rm: cannot remove 'exp/org/nnet3/egs/train_combine.scp': No such file or directory
rm: cannot remove 'exp/org/nnet3/egs/valid_combine.scp': No such file or directory
steps/nnet3/get_egs.sh: Generating training examples on disk
steps/nnet3/get_egs.sh: recombining and shuffling order of archives on disk
steps/nnet3/get_egs.sh: removing temporary archives
steps/nnet3/get_egs.sh: removing temporary alignments and transforms
steps/nnet3/get_egs.sh: Finished preparing training examples
online_ivector_dir =
local/nnet3/prepare_multilingual_egs.sh: Generate egs for 
local/nnet3/prepare_multilingual_egs.sh: calling get_egs.sh
steps/nnet3/get_egs.sh --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 --samples-per-iter 400000 --stage 0 --cmd utils/run.pl --generate-egs-scp true data/no_voice/train exp/no_voice/tri_ali exp/no_voice/nnet3/egs
utils/validate_data_dir.sh: Successfully validated data-directory data/no_voice/train/split6/1
utils/validate_data_dir.sh: Successfully validated data-directory data/no_voice/train/split6/2
utils/validate_data_dir.sh: Successfully validated data-directory data/no_voice/train/split6/3
utils/validate_data_dir.sh: Successfully validated data-directory data/no_voice/train/split6/4
utils/validate_data_dir.sh: Successfully validated data-directory data/no_voice/train/split6/5
utils/validate_data_dir.sh: Successfully validated data-directory data/no_voice/train/split6/6
steps/nnet3/get_egs.sh: feature type is raw
steps/nnet3/get_egs.sh: working out number of frames of training data
utils/data/get_utt2dur.sh: segments file does not exist so getting durations from wave files
utils/data/get_utt2dur.sh: could not get utterance lengths from sphere-file headers, using wav-to-duration
wav-to-duration scp:data/no_voice/train/wav.scp ark,t:data/no_voice/train/utt2dur 
LOG (wav-to-duration[5.3.83~1-9204]:main():wav-to-duration.cc:92) Printed duration for 549 audio files.
LOG (wav-to-duration[5.3.83~1-9204]:main():wav-to-duration.cc:94) Mean duration was 8.76397, min and max durations were 0.92, 84.44
utils/data/get_utt2dur.sh: computed data/no_voice/train/utt2dur
feat-to-len scp:data/no_voice/train/feats.scp ark,t:- 
steps/nnet3/get_egs.sh: working out feature dim
*** steps/nnet3/get_egs.sh: warning: the --frames-per-eg is too large to generate one archive with
*** as many as --samples-per-iter egs in it.  Consider reducing --frames-per-eg.
steps/nnet3/get_egs.sh: creating 1 archives, each with 60142 egs, with
steps/nnet3/get_egs.sh:   8 labels per example, and (left,right) context = (16,12)
steps/nnet3/get_egs.sh: copying data alignments
copy-int-vector ark:- ark,scp:exp/no_voice/nnet3/egs/ali.ark,exp/no_voice/nnet3/egs/ali.scp 
LOG (copy-int-vector[5.3.83~1-9204]:main():copy-int-vector.cc:83) Copied 548 vectors of int32.
steps/nnet3/get_egs.sh: Getting validation and training subset examples.
steps/nnet3/get_egs.sh: ... extracting validation and training-subset alignments.
... Getting subsets of validation examples for diagnostics and combination.
nnet3-copy-egs ark:- ark,scp:exp/no_voice/nnet3/egs/combine.egs,exp/no_voice/nnet3/egs/combine.scp 
LOG (nnet3-copy-egs[5.3.83~1-9204]:main():nnet3-copy-egs.cc:436) Read 7625 neural-network training examples, wrote 7625, 0 examples had errors.
rm: cannot remove 'exp/no_voice/nnet3/egs/train_combine.scp': No such file or directory
rm: cannot remove 'exp/no_voice/nnet3/egs/valid_combine.scp': No such file or directory
steps/nnet3/get_egs.sh: Generating training examples on disk
steps/nnet3/get_egs.sh: recombining and shuffling order of archives on disk
steps/nnet3/get_egs.sh: removing temporary archives
steps/nnet3/get_egs.sh: removing temporary alignments and transforms
steps/nnet3/get_egs.sh: Finished preparing training examples
### MAKE ONE BIG MULTILING EGS DIR ###
steps/nnet3/multilingual/combine_egs.sh --cmd utils/run.pl --samples-per-iter 10000 --lang2weight 0.5,0.5 2 exp/org/nnet3/egs exp/no_voice/nnet3/egs exp/nnet3/multitask/egs
steps/nnet3/multilingual/combine_egs.sh: allocating multilingual examples for training.
steps/nnet3/multilingual/combine_egs.sh: combine combine.scp examples from all langs in exp/nnet3/multitask/egs/combine.scp.
steps/nnet3/multilingual/combine_egs.sh: combine train_diagnostic.scp examples from all langs in exp/nnet3/multitask/egs/train_diagnostic.scp.
steps/nnet3/multilingual/combine_egs.sh: combine valid_diagnostic.scp examples from all langs in exp/nnet3/multitask/egs/valid_diagnostic.scp.
steps/nnet3/multilingual/combine_egs.sh: Finished preparing multilingual training example.
### ================ ###
### BEGIN TRAIN NNET ###
### ================ ###
2017-12-03 13:33:52,731 [steps/nnet3/train_raw_dnn.py:34 - <module> - INFO ] Starting raw DNN trainer (train_raw_dnn.py)
2017-12-03 13:33:52,738 [steps/nnet3/train_raw_dnn.py:181 - train - INFO ] Arguments for the experiment
{'backstitch_training_interval': 1,
 'backstitch_training_scale': 0.0,
 'cleanup': True,
 'cmvn_opts': '--norm-means=false --norm-vars=false',
 'combine_sum_to_one_penalty': 0.0,
 'command': 'utils/run.pl',
 'compute_average_posteriors': False,
 'dir': 'exp/nnet3/multitask',
 'dropout_schedule': None,
 'egs_command': 'queue.pl',
 'egs_dir': 'exp/nnet3/multitask/egs',
 'egs_opts': None,
 'egs_stage': 0,
 'email': None,
 'exit_stage': None,
 'feat_dir': 'data/org/train',
 'final_combination': True,
 'final_effective_lrate': 0.00015,
 'frames_per_eg': 8,
 'image_augmentation_opts': None,
 'initial_effective_lrate': 0.0015,
 'max_lda_jobs': 10,
 'max_models_combine': 20,
 'max_param_change': 2.0,
 'minibatch_size': '256,128',
 'momentum': 0.0,
 'nj': 4,
 'num_epochs': 1.0,
 'num_jobs_compute_prior': 10,
 'num_jobs_final': 1,
 'num_jobs_initial': 1,
 'online_ivector_dir': None,
 'preserve_model_interval': 100,
 'presoftmax_prior_scale_power': -0.25,
 'prior_subset_size': 20000,
 'proportional_shrink': 0.0,
 'rand_prune': 4.0,
 'remove_egs': True,
 'reporting_interval': 0.1,
 'samples_per_iter': 10000,
 'shuffle_buffer_size': 5000,
 'srand': 0,
 'stage': -5,
 'targets_scp': 'exp/org/tri_ali',
 'transform_dir': None,
 'use_dense_targets': False,
 'use_gpu': True}
2017-12-03 13:33:52,743 [steps/libs/nnet3/train/common.py:410 - verify_egs_dir - WARNING ] The ivector ids are not used. It's your responsibility to make sure the ivector extractor has been used consistently
2017-12-03 13:33:52,744 [steps/nnet3/train_raw_dnn.py:294 - train - INFO ] Preparing the initial network.
2017-12-03 13:33:52,817 [steps/nnet3/train_raw_dnn.py:328 - train - INFO ] Training will run for 1.0 epochs = 72 iterations
2017-12-03 13:33:52,818 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 0)
2017-12-03 13:33:52,824 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 0, learning rate is 0.0015.
2017-12-03 13:33:55,908 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 1)
2017-12-03 13:33:55,913 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 1, learning rate is 0.00145278842229.
2017-12-03 13:33:58,939 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 2)
2017-12-03 13:33:58,944 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 2, learning rate is 0.00140706279996.
2017-12-03 13:34:01,757 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 3)
2017-12-03 13:34:01,763 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 3, learning rate is 0.00136277636348.
2017-12-03 13:34:04,733 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 4)
2017-12-03 13:34:04,738 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 4, learning rate is 0.00131988381535.
2017-12-03 13:34:07,604 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 5)
2017-12-03 13:34:07,609 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 5, learning rate is 0.00127834128381.
2017-12-03 13:34:10,264 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 6)
2017-12-03 13:34:10,269 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 6, learning rate is 0.0012381062779.
2017-12-03 13:34:13,218 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 7)
2017-12-03 13:34:13,223 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 7, learning rate is 0.00119913764407.
2017-12-03 13:34:15,920 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 8)
2017-12-03 13:34:15,925 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 8, learning rate is 0.00116139552402.
2017-12-03 13:34:18,938 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 9)
2017-12-03 13:34:18,943 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 9, learning rate is 0.001124841314.
2017-12-03 13:34:21,733 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 10)
2017-12-03 13:34:21,738 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 10, learning rate is 0.00108943762526.
2017-12-03 13:34:24,492 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 11)
2017-12-03 13:34:24,498 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 11, learning rate is 0.00105514824586.
2017-12-03 13:34:27,589 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 12)
2017-12-03 13:34:27,594 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 12, learning rate is 0.00102193810359.
2017-12-03 13:34:30,216 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 13)
2017-12-03 13:34:30,221 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 13, learning rate is 0.000989773230125.
2017-12-03 13:34:33,021 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 14)
2017-12-03 13:34:33,026 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 14, learning rate is 0.000958620726279.
2017-12-03 13:34:35,612 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 15)
2017-12-03 13:34:35,621 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 15, learning rate is 0.000928448728337.
2017-12-03 13:34:38,357 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 16)
2017-12-03 13:34:38,363 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 16, learning rate is 0.000899226375478.
2017-12-03 13:34:40,973 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 17)
2017-12-03 13:34:40,978 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 17, learning rate is 0.000870923778208.
2017-12-03 13:34:43,826 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 18)
2017-12-03 13:34:43,831 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 18, learning rate is 0.000843511987786.
2017-12-03 13:34:46,826 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 19)
2017-12-03 13:34:46,832 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 19, learning rate is 0.000816962966612.
2017-12-03 13:34:49,541 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 20)
2017-12-03 13:34:49,549 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 20, learning rate is 0.000791249559555.
2017-12-03 13:34:52,785 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 21)
2017-12-03 13:34:52,790 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 21, learning rate is 0.000766345466176.
2017-12-03 13:34:55,705 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 22)
2017-12-03 13:34:55,711 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 22, learning rate is 0.000742225213823.
2017-12-03 13:34:58,275 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 23)
2017-12-03 13:34:58,280 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 23, learning rate is 0.000718864131583.
2017-12-03 13:35:01,110 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 24)
2017-12-03 13:35:01,118 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 24, learning rate is 0.000696238325042.
2017-12-03 13:35:03,925 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 25)
2017-12-03 13:35:03,932 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 25, learning rate is 0.00067432465185.
2017-12-03 13:35:06,513 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 26)
2017-12-03 13:35:06,520 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 26, learning rate is 0.000653100698048.
2017-12-03 13:35:09,096 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 27)
2017-12-03 13:35:09,106 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 27, learning rate is 0.000632544755143.
2017-12-03 13:35:11,841 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 28)
2017-12-03 13:35:11,849 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 28, learning rate is 0.000612635797901.
2017-12-03 13:35:14,562 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 29)
2017-12-03 13:35:14,570 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 29, learning rate is 0.000593353462847.
2017-12-03 13:35:17,216 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 30)
2017-12-03 13:35:17,220 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 30, learning rate is 0.000574678027434.
2017-12-03 13:35:19,899 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 31)
2017-12-03 13:35:19,904 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 31, learning rate is 0.000556590389867.
2017-12-03 13:35:22,807 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 32)
2017-12-03 13:35:22,812 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 32, learning rate is 0.000539072049571.
2017-12-03 13:35:25,574 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 33)
2017-12-03 13:35:25,584 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 33, learning rate is 0.000522105088264.
2017-12-03 13:35:28,072 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 34)
2017-12-03 13:35:28,077 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 34, learning rate is 0.000505672151633.
2017-12-03 13:35:30,890 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 35)
2017-12-03 13:35:30,895 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 35, learning rate is 0.000489756431578.
2017-12-03 13:35:33,428 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 36)
2017-12-03 13:35:33,433 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 36, learning rate is 0.000474341649025.
2017-12-03 13:35:36,175 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 37)
2017-12-03 13:35:36,180 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 37, learning rate is 0.000459412037276.
2017-12-03 13:35:38,887 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 38)
2017-12-03 13:35:38,892 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 38, learning rate is 0.000444952325877.
2017-12-03 13:35:41,650 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 39)
2017-12-03 13:35:41,655 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 39, learning rate is 0.000430947725003.
2017-12-03 13:35:44,464 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 40)
2017-12-03 13:35:44,469 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 40, learning rate is 0.000417383910331.
2017-12-03 13:35:47,427 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 41)
2017-12-03 13:35:47,434 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 41, learning rate is 0.000404247008386.
2017-12-03 13:35:50,054 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 42)
2017-12-03 13:35:50,061 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 42, learning rate is 0.000391523582352.
2017-12-03 13:35:52,721 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 43)
2017-12-03 13:35:52,726 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 43, learning rate is 0.00037920061833.
2017-12-03 13:35:55,370 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 44)
2017-12-03 13:35:55,377 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 44, learning rate is 0.000367265512023.
2017-12-03 13:35:58,276 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 45)
2017-12-03 13:35:58,281 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 45, learning rate is 0.000355706055849.
2017-12-03 13:36:01,297 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 46)
2017-12-03 13:36:01,302 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 46, learning rate is 0.000344510426451.
2017-12-03 13:36:04,329 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 47)
2017-12-03 13:36:04,334 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 47, learning rate is 0.000333667172604.
2017-12-03 13:36:07,199 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 48)
2017-12-03 13:36:07,206 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 48, learning rate is 0.000323165203505.
2017-12-03 13:36:10,024 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 49)
2017-12-03 13:36:10,029 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 49, learning rate is 0.000312993777426.
2017-12-03 13:36:12,630 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 50)
2017-12-03 13:36:12,635 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 50, learning rate is 0.000303142490729.
2017-12-03 13:36:15,285 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 51)
2017-12-03 13:36:15,290 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 51, learning rate is 0.000293601267223.
2017-12-03 13:36:17,870 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 52)
2017-12-03 13:36:17,875 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 52, learning rate is 0.000284360347861.
2017-12-03 13:36:20,514 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 53)
2017-12-03 13:36:20,519 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 53, learning rate is 0.000275410280754.
2017-12-03 13:36:23,211 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 54)
2017-12-03 13:36:23,216 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 54, learning rate is 0.000266741911506.
2017-12-03 13:36:25,946 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 55)
2017-12-03 13:36:25,952 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 55, learning rate is 0.00025834637385.
2017-12-03 13:36:28,777 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 56)
2017-12-03 13:36:28,782 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 56, learning rate is 0.00025021508058.
2017-12-03 13:36:31,566 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 57)
2017-12-03 13:36:31,571 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 57, learning rate is 0.000242339714766.
2017-12-03 13:36:34,324 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 58)
2017-12-03 13:36:34,329 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 58, learning rate is 0.000234712221249.
2017-12-03 13:36:36,880 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 59)
2017-12-03 13:36:36,885 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 59, learning rate is 0.0002273247984.
2017-12-03 13:36:39,623 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 60)
2017-12-03 13:36:39,628 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 60, learning rate is 0.000220169890143.
2017-12-03 13:36:42,632 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 61)
2017-12-03 13:36:42,638 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 61, learning rate is 0.000213240178225.
2017-12-03 13:36:45,235 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 62)
2017-12-03 13:36:45,241 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 62, learning rate is 0.000206528574728.
2017-12-03 13:36:47,916 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 63)
2017-12-03 13:36:47,930 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 63, learning rate is 0.000200028214824.
2017-12-03 13:36:50,628 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 64)
2017-12-03 13:36:50,633 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 64, learning rate is 0.000193732449752.
2017-12-03 13:36:53,393 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 65)
2017-12-03 13:36:53,397 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 65, learning rate is 0.000187634840015.
2017-12-03 13:36:56,183 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 66)
2017-12-03 13:36:56,188 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 66, learning rate is 0.000181729148794.
2017-12-03 13:36:58,921 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 67)
2017-12-03 13:36:58,925 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 67, learning rate is 0.000176009335574.
2017-12-03 13:37:01,413 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 68)
2017-12-03 13:37:01,418 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 68, learning rate is 0.000170469549958.
2017-12-03 13:37:03,979 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 69)
2017-12-03 13:37:03,984 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 69, learning rate is 0.000165104125688.
2017-12-03 13:37:06,536 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 70)
2017-12-03 13:37:06,542 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 70, learning rate is 0.000159907574848.
2017-12-03 13:37:09,106 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 71)
2017-12-03 13:37:09,111 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 71, learning rate is 0.00015.
2017-12-03 13:37:12,035 [steps/nnet3/train_raw_dnn.py:401 - train - INFO ] Doing final combination to produce final.raw
2017-12-03 13:37:12,036 [steps/libs/nnet3/train/frame_level_objf/common.py:481 - combine_models - INFO ] Combining set([37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72]) models.
2017-12-03 13:37:25,283 [steps/nnet3/train_raw_dnn.py:423 - train - INFO ] Cleaning up the experiment directory exp/nnet3/multitask
exp/nnet3/multitask: num-iters=72 nj=1..1 num-params=0.2M combine=-3.28->-3.20
steps/nnet3/train_raw_dnn.py --stage=-5 --cmd=utils/run.pl --trainer.num-epochs 1 --trainer.optimization.num-jobs-initial=1 --trainer.optimization.num-jobs-final=1 --trainer.optimization.initial-effective-lrate=0.0015 --trainer.optimization.final-effective-lrate=0.00015 --trainer.optimization.minibatch-size=256,128 --trainer.samples-per-iter=10000 --trainer.max-param-change=2.0 --trainer.srand=0 --feat.cmvn-opts=--norm-means=false --norm-vars=false --feat-dir data/org/train --egs.dir exp/nnet3/multitask/egs --use-dense-targets false --targets-scp exp/org/tri_ali --cleanup.remove-egs true --use-gpu true --dir=exp/nnet3/multitask
['steps/nnet3/train_raw_dnn.py', '--stage=-5', '--cmd=utils/run.pl', '--trainer.num-epochs', '1', '--trainer.optimization.num-jobs-initial=1', '--trainer.optimization.num-jobs-final=1', '--trainer.optimization.initial-effective-lrate=0.0015', '--trainer.optimization.final-effective-lrate=0.00015', '--trainer.optimization.minibatch-size=256,128', '--trainer.samples-per-iter=10000', '--trainer.max-param-change=2.0', '--trainer.srand=0', '--feat.cmvn-opts=--norm-means=false --norm-vars=false', '--feat-dir', 'data/org/train', '--egs.dir', 'exp/nnet3/multitask/egs', '--use-dense-targets', 'false', '--targets-scp', 'exp/org/tri_ali', '--cleanup.remove-egs', 'true', '--use-gpu', 'true', '--dir=exp/nnet3/multitask']
use_multitask_egs=True
### ============== ###
### END TRAIN NNET ###
### ============== ###
### ========================== ###
### SPLIT & COPY NNET PER LANG ###
### ========================== ###
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/org/tri_ali/final.mdl - exp/nnet3/multitask/org/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/org/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language org.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/org exp/org/nnet3/egs
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/no_voice/tri_ali/final.mdl - exp/nnet3/multitask/no_voice/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-1 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/no_voice/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language no_voice.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/no_voice exp/no_voice/nnet3/egs
### ============== ###
### BEGIN DECODING ###
### ============== ###
### decoding with 4 jobs, unigram LM ###
steps/nnet3/decode.sh --nj 8 --cmd utils/run.pl --max-active 600 --min-active 200 exp_org/triphones/graph data_org/test exp/nnet3/multitask/decode exp/nnet3/multitask/org/final_adj.mdl SPOKEN_NOISE SIL
steps/nnet3/decode.sh: feature type is raw
steps/nnet3/decode.sh: line 169: steps/diagnostic/analyze_lats.sh: No such file or directory
Decoding done.

#### BEGIN CALCULATE WER ####
###==============###
### END DECODING ###
###==============###

###### BEGIN LANGUAGE INFO ######
lang= org
num_targets= 770
data_dir= data/org/train
ali_dir= exp/org/tri_ali
egs_dir= exp/org/nnet3/egs
###### END LANGUAGE INFO ######


###### BEGIN LANGUAGE INFO ######
lang= org
num_targets= 770
data_dir= data/org/train
ali_dir= exp/org/tri_ali
egs_dir= exp/org/nnet3/egs
###### END LANGUAGE INFO ######


###### BEGIN LANGUAGE INFO ######
lang= org
num_targets= 770
data_dir= data/org/train
ali_dir= exp/org/tri_ali
egs_dir= exp/org/nnet3/egs
###### END LANGUAGE INFO ######

### ============================ ###
### CREATE CONFIG FILES FOR NNET ###
### ============================ ###
feat-to-dim scp:data/org/train/feats.scp - 
nnet3-init exp/nnet3/multitask/configs//ref.config exp/nnet3/multitask/configs//ref.raw 
LOG (nnet3-init[5.3.83~1-9204]:main():nnet3-init.cc:80) Initialized raw neural net and wrote it to exp/nnet3/multitask/configs//ref.raw
nnet3-info "nnet3-copy --edits='rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - |" 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/configs//ref.raw to -
nnet3-init exp/nnet3/multitask/configs//ref.config exp/nnet3/multitask/configs//ref.raw 
LOG (nnet3-init[5.3.83~1-9204]:main():nnet3-init.cc:80) Initialized raw neural net and wrote it to exp/nnet3/multitask/configs//ref.raw
nnet3-info "nnet3-copy --edits='rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - |" 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/configs//ref.raw to -
steps/nnet3/xconfig_to_configs.py --xconfig-file exp/nnet3/multitask/configs/network.xconfig --config-dir exp/nnet3/multitask/configs/ --nnet-edits=rename-node old-name=output-0 new-name=output
### ================== ###
### MAKE NNET3 EGS DIR ###
### ================== ###
### MAKE SEPARATE EGS DIR PER LANGUAGE ###
local/nnet3/prepare_multilingual_egs.sh --cmd utils/run.pl --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 3 data/org/train data/org/train data/org/train exp/org/tri_ali exp/org/tri_ali exp/org/tri_ali exp/org/nnet3/egs exp/org/nnet3/egs exp/org/nnet3/egs
local/nnet3/prepare_multilingual_egs.sh --cmd utils/run.pl --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 3 data/org/train data/org/train data/org/train exp/org/tri_ali exp/org/tri_ali exp/org/tri_ali exp/org/nnet3/egs exp/org/nnet3/egs exp/org/nnet3/egs
3
data/org/train data/org/train data/org/train exp/org/tri_ali exp/org/tri_ali exp/org/tri_ali exp/org/nnet3/egs exp/org/nnet3/egs exp/org/nnet3/egs
local/nnet3/prepare_multilingual_egs.sh: Generate separate egs directory per language for multilingual training.
online_ivector_dir =
local/nnet3/prepare_multilingual_egs.sh: Generate egs for 
local/nnet3/prepare_multilingual_egs.sh: calling get_egs.sh
steps/nnet3/get_egs.sh --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 --samples-per-iter 400000 --stage 0 --cmd utils/run.pl --generate-egs-scp true data/org/train exp/org/tri_ali exp/org/nnet3/egs
steps/nnet3/get_egs.sh: feature type is raw
steps/nnet3/get_egs.sh: working out number of frames of training data
feat-to-len scp:data/org/train/feats.scp ark,t:- 
steps/nnet3/get_egs.sh: working out feature dim
*** steps/nnet3/get_egs.sh: warning: the --frames-per-eg is too large to generate one archive with
*** as many as --samples-per-iter egs in it.  Consider reducing --frames-per-eg.
steps/nnet3/get_egs.sh: creating 1 archives, each with 60142 egs, with
steps/nnet3/get_egs.sh:   8 labels per example, and (left,right) context = (16,12)
steps/nnet3/get_egs.sh: copying data alignments
copy-int-vector ark:- ark,scp:exp/org/nnet3/egs/ali.ark,exp/org/nnet3/egs/ali.scp 
LOG (copy-int-vector[5.3.83~1-9204]:main():copy-int-vector.cc:83) Copied 546 vectors of int32.
steps/nnet3/get_egs.sh: Getting validation and training subset examples.
steps/nnet3/get_egs.sh: ... extracting validation and training-subset alignments.
... Getting subsets of validation examples for diagnostics and combination.
nnet3-copy-egs ark:- ark,scp:exp/org/nnet3/egs/combine.egs,exp/org/nnet3/egs/combine.scp 
LOG (nnet3-copy-egs[5.3.83~1-9204]:main():nnet3-copy-egs.cc:436) Read 7625 neural-network training examples, wrote 7625, 0 examples had errors.
rm: cannot remove 'exp/org/nnet3/egs/train_combine.scp': No such file or directory
rm: cannot remove 'exp/org/nnet3/egs/valid_combine.scp': No such file or directory
steps/nnet3/get_egs.sh: Generating training examples on disk
steps/nnet3/get_egs.sh: recombining and shuffling order of archives on disk
steps/nnet3/get_egs.sh: removing temporary archives
steps/nnet3/get_egs.sh: removing temporary alignments and transforms
steps/nnet3/get_egs.sh: Finished preparing training examples
online_ivector_dir =
online_ivector_dir =
### MAKE ONE BIG MULTILING EGS DIR ###
steps/nnet3/multilingual/combine_egs.sh --cmd utils/run.pl --samples-per-iter 10000 --lang2weight 0.5,0.5,0.5 3 exp/org/nnet3/egs exp/org/nnet3/egs exp/org/nnet3/egs exp/nnet3/multitask/egs
steps/nnet3/multilingual/combine_egs.sh: allocating multilingual examples for training.
steps/nnet3/multilingual/combine_egs.sh: combine combine.scp examples from all langs in exp/nnet3/multitask/egs/combine.scp.
steps/nnet3/multilingual/combine_egs.sh: combine train_diagnostic.scp examples from all langs in exp/nnet3/multitask/egs/train_diagnostic.scp.
steps/nnet3/multilingual/combine_egs.sh: combine valid_diagnostic.scp examples from all langs in exp/nnet3/multitask/egs/valid_diagnostic.scp.
steps/nnet3/multilingual/combine_egs.sh: Finished preparing multilingual training example.
### ================ ###
### BEGIN TRAIN NNET ###
### ================ ###
2017-12-03 13:43:22,882 [steps/nnet3/train_raw_dnn.py:34 - <module> - INFO ] Starting raw DNN trainer (train_raw_dnn.py)
2017-12-03 13:43:22,888 [steps/nnet3/train_raw_dnn.py:181 - train - INFO ] Arguments for the experiment
{'backstitch_training_interval': 1,
 'backstitch_training_scale': 0.0,
 'cleanup': True,
 'cmvn_opts': '--norm-means=false --norm-vars=false',
 'combine_sum_to_one_penalty': 0.0,
 'command': 'utils/run.pl',
 'compute_average_posteriors': False,
 'dir': 'exp/nnet3/multitask',
 'dropout_schedule': None,
 'egs_command': 'queue.pl',
 'egs_dir': 'exp/nnet3/multitask/egs',
 'egs_opts': None,
 'egs_stage': 0,
 'email': None,
 'exit_stage': None,
 'feat_dir': 'data/org/train',
 'final_combination': True,
 'final_effective_lrate': 0.00015,
 'frames_per_eg': 8,
 'image_augmentation_opts': None,
 'initial_effective_lrate': 0.0015,
 'max_lda_jobs': 10,
 'max_models_combine': 20,
 'max_param_change': 2.0,
 'minibatch_size': '256,128',
 'momentum': 0.0,
 'nj': 4,
 'num_epochs': 1.0,
 'num_jobs_compute_prior': 10,
 'num_jobs_final': 1,
 'num_jobs_initial': 1,
 'online_ivector_dir': None,
 'preserve_model_interval': 100,
 'presoftmax_prior_scale_power': -0.25,
 'prior_subset_size': 20000,
 'proportional_shrink': 0.0,
 'rand_prune': 4.0,
 'remove_egs': True,
 'reporting_interval': 0.1,
 'samples_per_iter': 10000,
 'shuffle_buffer_size': 5000,
 'srand': 0,
 'stage': -5,
 'targets_scp': 'exp/org/tri_ali',
 'transform_dir': None,
 'use_dense_targets': False,
 'use_gpu': True}
2017-12-03 13:43:22,893 [steps/libs/nnet3/train/common.py:410 - verify_egs_dir - WARNING ] The ivector ids are not used. It's your responsibility to make sure the ivector extractor has been used consistently
2017-12-03 13:43:22,894 [steps/nnet3/train_raw_dnn.py:294 - train - INFO ] Preparing the initial network.
2017-12-03 13:43:22,967 [steps/nnet3/train_raw_dnn.py:328 - train - INFO ] Training will run for 1.0 epochs = 112 iterations
2017-12-03 13:43:22,968 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 0)
2017-12-03 13:43:22,971 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 0, learning rate is 0.0015.
2017-12-03 13:43:24,588 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 1)
2017-12-03 13:43:24,600 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 1, learning rate is 0.0014694766436.
2017-12-03 13:43:26,112 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 2)
2017-12-03 13:43:26,121 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 2, learning rate is 0.00143957440405.
2017-12-03 13:43:29,075 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 3)
2017-12-03 13:43:29,080 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 3, learning rate is 0.00141028064232.
2017-12-03 13:43:30,678 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 4)
2017-12-03 13:43:30,694 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 4, learning rate is 0.00138158297653.
2017-12-03 13:43:33,632 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 5)
2017-12-03 13:43:33,638 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 5, learning rate is 0.00135346927681.
2017-12-03 13:43:35,239 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 6)
2017-12-03 13:43:35,245 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 6, learning rate is 0.00132592766006.
2017-12-03 13:43:36,877 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 7)
2017-12-03 13:43:36,883 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 7, learning rate is 0.00129894648504.
2017-12-03 13:43:39,866 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 8)
2017-12-03 13:43:39,871 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 8, learning rate is 0.00127251434737.
2017-12-03 13:43:41,879 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 9)
2017-12-03 13:43:41,885 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 9, learning rate is 0.00124662007473.
2017-12-03 13:43:43,838 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 10)
2017-12-03 13:43:43,845 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 10, learning rate is 0.00122125272217.
2017-12-03 13:43:46,804 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 11)
2017-12-03 13:43:46,810 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 11, learning rate is 0.00119640156744.
2017-12-03 13:43:49,738 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 12)
2017-12-03 13:43:49,743 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 12, learning rate is 0.00117205610648.
2017-12-03 13:43:52,709 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 13)
2017-12-03 13:43:52,714 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 13, learning rate is 0.00114820604897.
2017-12-03 13:43:55,531 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 14)
2017-12-03 13:43:55,541 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 14, learning rate is 0.001124841314.
2017-12-03 13:43:57,227 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 15)
2017-12-03 13:43:57,235 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 15, learning rate is 0.00110195202578.
2017-12-03 13:43:58,963 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 16)
2017-12-03 13:43:58,972 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 16, learning rate is 0.0010795285095.
2017-12-03 13:44:01,995 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 17)
2017-12-03 13:44:02,000 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 17, learning rate is 0.00105756128721.
2017-12-03 13:44:03,706 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 18)
2017-12-03 13:44:03,717 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 18, learning rate is 0.00103604107382.
2017-12-03 13:44:06,576 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 19)
2017-12-03 13:44:06,581 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 19, learning rate is 0.00101495877319.
2017-12-03 13:44:08,284 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 20)
2017-12-03 13:44:08,290 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 20, learning rate is 0.000994305474274.
2017-12-03 13:44:10,083 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 21)
2017-12-03 13:44:10,095 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 21, learning rate is 0.000974072447364.
2017-12-03 13:44:13,059 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 22)
2017-12-03 13:44:13,065 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 22, learning rate is 0.000954251140382.
2017-12-03 13:44:15,233 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 23)
2017-12-03 13:44:15,238 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 23, learning rate is 0.000934833175279.
2017-12-03 13:44:17,102 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 24)
2017-12-03 13:44:17,111 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 24, learning rate is 0.000915810344488.
2017-12-03 13:44:20,024 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 25)
2017-12-03 13:44:20,029 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 25, learning rate is 0.00089717460746.
2017-12-03 13:44:22,964 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 26)
2017-12-03 13:44:22,969 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 26, learning rate is 0.00087891808726.
2017-12-03 13:44:25,897 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 27)
2017-12-03 13:44:25,903 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 27, learning rate is 0.000861033067243.
2017-12-03 13:44:28,708 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 28)
2017-12-03 13:44:28,714 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 28, learning rate is 0.000843511987786.
2017-12-03 13:44:30,368 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 29)
2017-12-03 13:44:30,374 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 29, learning rate is 0.000826347443097.
2017-12-03 13:44:32,153 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 30)
2017-12-03 13:44:32,164 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 30, learning rate is 0.000809532178085.
2017-12-03 13:44:35,097 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 31)
2017-12-03 13:44:35,106 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 31, learning rate is 0.000793059085291.
2017-12-03 13:44:36,776 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 32)
2017-12-03 13:44:36,782 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 32, learning rate is 0.000776921201885.
2017-12-03 13:44:39,705 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 33)
2017-12-03 13:44:39,710 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 33, learning rate is 0.000761111706723.
2017-12-03 13:44:41,337 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 34)
2017-12-03 13:44:41,342 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 34, learning rate is 0.000745623917466.
2017-12-03 13:44:43,023 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 35)
2017-12-03 13:44:43,031 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 35, learning rate is 0.000730451287749.
2017-12-03 13:44:46,063 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 36)
2017-12-03 13:44:46,069 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 36, learning rate is 0.000715587404422.
2017-12-03 13:44:48,285 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 37)
2017-12-03 13:44:48,290 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 37, learning rate is 0.000701025984833.
2017-12-03 13:44:50,329 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 38)
2017-12-03 13:44:50,337 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 38, learning rate is 0.000686760874178.
2017-12-03 13:44:53,577 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 39)
2017-12-03 13:44:53,582 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 39, learning rate is 0.000672786042894.
2017-12-03 13:44:56,571 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 40)
2017-12-03 13:44:56,576 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 40, learning rate is 0.000659095584114.
2017-12-03 13:44:59,770 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 41)
2017-12-03 13:44:59,775 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 41, learning rate is 0.000645683711169.
2017-12-03 13:45:02,737 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 42)
2017-12-03 13:45:02,742 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 42, learning rate is 0.000632544755143.
2017-12-03 13:45:04,399 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 43)
2017-12-03 13:45:04,405 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 43, learning rate is 0.000619673162475.
2017-12-03 13:45:06,193 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 44)
2017-12-03 13:45:06,199 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 44, learning rate is 0.000607063492614.
2017-12-03 13:45:09,138 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 45)
2017-12-03 13:45:09,143 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 45, learning rate is 0.000594710415718.
2017-12-03 13:45:11,066 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 46)
2017-12-03 13:45:11,077 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 46, learning rate is 0.000582608710401.
2017-12-03 13:45:14,137 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 47)
2017-12-03 13:45:14,142 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 47, learning rate is 0.000570753261527.
2017-12-03 13:45:15,896 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 48)
2017-12-03 13:45:15,902 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 48, learning rate is 0.000559139058047.
2017-12-03 13:45:17,766 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 49)
2017-12-03 13:45:17,772 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 49, learning rate is 0.000547761190882.
2017-12-03 13:45:20,813 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 50)
2017-12-03 13:45:20,823 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 50, learning rate is 0.000536614850847.
2017-12-03 13:45:22,947 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 51)
2017-12-03 13:45:22,953 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 51, learning rate is 0.000525695326618.
2017-12-03 13:45:24,976 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 52)
2017-12-03 13:45:24,984 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 52, learning rate is 0.000514998002742.
2017-12-03 13:45:27,942 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 53)
2017-12-03 13:45:27,947 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 53, learning rate is 0.000504518357686.
2017-12-03 13:45:31,007 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 54)
2017-12-03 13:45:31,012 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 54, learning rate is 0.000494251961924.
2017-12-03 13:45:33,799 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 55)
2017-12-03 13:45:33,804 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 55, learning rate is 0.000484194476066.
2017-12-03 13:45:36,649 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 56)
2017-12-03 13:45:36,658 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 56, learning rate is 0.000474341649025.
2017-12-03 13:45:38,297 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 57)
2017-12-03 13:45:38,303 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 57, learning rate is 0.000464689316219.
2017-12-03 13:45:40,140 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 58)
2017-12-03 13:45:40,146 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 58, learning rate is 0.000455233397808.
2017-12-03 13:45:43,040 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 59)
2017-12-03 13:45:43,047 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 59, learning rate is 0.000445969896977.
2017-12-03 13:45:44,793 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 60)
2017-12-03 13:45:44,799 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 60, learning rate is 0.000436894898236.
2017-12-03 13:45:48,012 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 61)
2017-12-03 13:45:48,017 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 61, learning rate is 0.000428004565777.
2017-12-03 13:45:49,703 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 62)
2017-12-03 13:45:49,719 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 62, learning rate is 0.000419295141841.
2017-12-03 13:45:51,408 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 63)
2017-12-03 13:45:51,413 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 63, learning rate is 0.00041076294514.
2017-12-03 13:45:54,392 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 64)
2017-12-03 13:45:54,402 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 64, learning rate is 0.000402404369292.
2017-12-03 13:45:56,398 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 65)
2017-12-03 13:45:56,404 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 65, learning rate is 0.000394215881304.
2017-12-03 13:45:58,382 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 66)
2017-12-03 13:45:58,397 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 66, learning rate is 0.000386194020074.
2017-12-03 13:46:01,395 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 67)
2017-12-03 13:46:01,400 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 67, learning rate is 0.000378335394931.
2017-12-03 13:46:04,420 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 68)
2017-12-03 13:46:04,425 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 68, learning rate is 0.000370636684198.
2017-12-03 13:46:07,339 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 69)
2017-12-03 13:46:07,345 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 69, learning rate is 0.000363094633793.
2017-12-03 13:46:10,200 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 70)
2017-12-03 13:46:10,206 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 70, learning rate is 0.000355706055849.
2017-12-03 13:46:11,968 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 71)
2017-12-03 13:46:11,987 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 71, learning rate is 0.000348467827371.
2017-12-03 13:46:13,790 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 72)
2017-12-03 13:46:13,797 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 72, learning rate is 0.000341376888911.
2017-12-03 13:46:16,749 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 73)
2017-12-03 13:46:16,754 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 73, learning rate is 0.000334430243279.
2017-12-03 13:46:18,489 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 74)
2017-12-03 13:46:18,495 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 74, learning rate is 0.000327624954274.
2017-12-03 13:46:21,455 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 75)
2017-12-03 13:46:21,461 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 75, learning rate is 0.000320958145444.
2017-12-03 13:46:23,102 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 76)
2017-12-03 13:46:23,114 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 76, learning rate is 0.000314426998868.
2017-12-03 13:46:24,981 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 77)
2017-12-03 13:46:24,987 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 77, learning rate is 0.000308028753969.
2017-12-03 13:46:27,970 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 78)
2017-12-03 13:46:27,975 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 78, learning rate is 0.000301760706342.
2017-12-03 13:46:30,014 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 79)
2017-12-03 13:46:30,020 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 79, learning rate is 0.000295620206617.
2017-12-03 13:46:31,941 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 80)
2017-12-03 13:46:31,946 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 80, learning rate is 0.000289604659332.
2017-12-03 13:46:35,071 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 81)
2017-12-03 13:46:35,076 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 81, learning rate is 0.000283711521844.
2017-12-03 13:46:37,974 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 82)
2017-12-03 13:46:37,981 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 82, learning rate is 0.000277938303246.
2017-12-03 13:46:40,860 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 83)
2017-12-03 13:46:40,865 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 83, learning rate is 0.000272282563321.
2017-12-03 13:46:43,687 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 84)
2017-12-03 13:46:43,692 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 84, learning rate is 0.000266741911506.
2017-12-03 13:46:45,380 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 85)
2017-12-03 13:46:45,386 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 85, learning rate is 0.000261314005884.
2017-12-03 13:46:47,105 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 86)
2017-12-03 13:46:47,114 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 86, learning rate is 0.000255996552194.
2017-12-03 13:46:50,124 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 87)
2017-12-03 13:46:50,130 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 87, learning rate is 0.000250787302861.
2017-12-03 13:46:51,778 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 88)
2017-12-03 13:46:51,792 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 88, learning rate is 0.000245684056043.
2017-12-03 13:46:54,819 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 89)
2017-12-03 13:46:54,824 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 89, learning rate is 0.000240684654706.
2017-12-03 13:46:56,455 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 90)
2017-12-03 13:46:56,462 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 90, learning rate is 0.000235786985709.
2017-12-03 13:46:58,269 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 91)
2017-12-03 13:46:58,275 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 91, learning rate is 0.000230988978909.
2017-12-03 13:47:01,274 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 92)
2017-12-03 13:47:01,282 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 92, learning rate is 0.00022628860629.
2017-12-03 13:47:03,416 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 93)
2017-12-03 13:47:03,422 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 93, learning rate is 0.000221683881104.
2017-12-03 13:47:05,343 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 94)
2017-12-03 13:47:05,349 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 94, learning rate is 0.000217172857029.
2017-12-03 13:47:08,298 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 95)
2017-12-03 13:47:08,303 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 95, learning rate is 0.000212753627352.
2017-12-03 13:47:11,214 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 96)
2017-12-03 13:47:11,219 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 96, learning rate is 0.000208424324156.
2017-12-03 13:47:14,179 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 97)
2017-12-03 13:47:14,185 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 97, learning rate is 0.000204183117536.
2017-12-03 13:47:17,074 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 98)
2017-12-03 13:47:17,078 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 98, learning rate is 0.000200028214824.
2017-12-03 13:47:18,778 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 99)
2017-12-03 13:47:18,784 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 99, learning rate is 0.00019595785983.
2017-12-03 13:47:20,480 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 100)
2017-12-03 13:47:20,486 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 100, learning rate is 0.0001919703321.
2017-12-03 13:47:23,650 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 101)
2017-12-03 13:47:23,660 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 101, learning rate is 0.000188063946189.
2017-12-03 13:47:25,502 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 102)
2017-12-03 13:47:25,511 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 102, learning rate is 0.000184237050952.
2017-12-03 13:47:28,720 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 103)
2017-12-03 13:47:28,725 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 103, learning rate is 0.00018048802884.
2017-12-03 13:47:30,510 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 104)
2017-12-03 13:47:30,517 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 104, learning rate is 0.000176815295219.
2017-12-03 13:47:32,345 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 105)
2017-12-03 13:47:32,353 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 105, learning rate is 0.000173217297703.
2017-12-03 13:47:35,372 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 106)
2017-12-03 13:47:35,377 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 106, learning rate is 0.000169692515495.
2017-12-03 13:47:37,554 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 107)
2017-12-03 13:47:37,561 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 107, learning rate is 0.000166239458742.
2017-12-03 13:47:39,605 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 108)
2017-12-03 13:47:39,621 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 108, learning rate is 0.00016285666791.
2017-12-03 13:47:42,719 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 109)
2017-12-03 13:47:42,725 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 109, learning rate is 0.000159542713166.
2017-12-03 13:47:45,719 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 110)
2017-12-03 13:47:45,726 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 110, learning rate is 0.000156296193769.
2017-12-03 13:47:48,680 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 111)
2017-12-03 13:47:48,685 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 111, learning rate is 0.00015.
2017-12-03 13:47:51,639 [steps/nnet3/train_raw_dnn.py:401 - train - INFO ] Doing final combination to produce final.raw
2017-12-03 13:47:51,640 [steps/libs/nnet3/train/frame_level_objf/common.py:481 - combine_models - INFO ] Combining set([57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 112]) models.
2017-12-03 13:48:10,228 [steps/nnet3/train_raw_dnn.py:423 - train - INFO ] Cleaning up the experiment directory exp/nnet3/multitask
exp/nnet3/multitask: num-iters=112 nj=1..1 num-params=0.3M combine=-3.82->-3.74
steps/nnet3/train_raw_dnn.py --stage=-5 --cmd=utils/run.pl --trainer.num-epochs 1 --trainer.optimization.num-jobs-initial=1 --trainer.optimization.num-jobs-final=1 --trainer.optimization.initial-effective-lrate=0.0015 --trainer.optimization.final-effective-lrate=0.00015 --trainer.optimization.minibatch-size=256,128 --trainer.samples-per-iter=10000 --trainer.max-param-change=2.0 --trainer.srand=0 --feat.cmvn-opts=--norm-means=false --norm-vars=false --feat-dir data/org/train --egs.dir exp/nnet3/multitask/egs --use-dense-targets false --targets-scp exp/org/tri_ali --cleanup.remove-egs true --use-gpu true --dir=exp/nnet3/multitask
['steps/nnet3/train_raw_dnn.py', '--stage=-5', '--cmd=utils/run.pl', '--trainer.num-epochs', '1', '--trainer.optimization.num-jobs-initial=1', '--trainer.optimization.num-jobs-final=1', '--trainer.optimization.initial-effective-lrate=0.0015', '--trainer.optimization.final-effective-lrate=0.00015', '--trainer.optimization.minibatch-size=256,128', '--trainer.samples-per-iter=10000', '--trainer.max-param-change=2.0', '--trainer.srand=0', '--feat.cmvn-opts=--norm-means=false --norm-vars=false', '--feat-dir', 'data/org/train', '--egs.dir', 'exp/nnet3/multitask/egs', '--use-dense-targets', 'false', '--targets-scp', 'exp/org/tri_ali', '--cleanup.remove-egs', 'true', '--use-gpu', 'true', '--dir=exp/nnet3/multitask']
use_multitask_egs=True
### ============== ###
### END TRAIN NNET ###
### ============== ###
### ========================== ###
### SPLIT & COPY NNET PER LANG ###
### ========================== ###
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/org/tri_ali/final.mdl - exp/nnet3/multitask/org/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/org/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language org.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/org exp/org/nnet3/egs
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/org/tri_ali/final.mdl - exp/nnet3/multitask/org/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-1 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/org/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language org.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/org exp/org/nnet3/egs
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/org/tri_ali/final.mdl - exp/nnet3/multitask/org/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-2 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/org/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language org.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/org exp/org/nnet3/egs
### ============== ###
### BEGIN DECODING ###
### ============== ###
### decoding with 4 jobs, unigram LM ###
steps/nnet3/decode.sh --nj 8 --cmd utils/run.pl --max-active 600 --min-active 200 exp_org/triphones/graph data_org/test exp/nnet3/multitask/decode exp/nnet3/multitask/org/final_adj.mdl SPOKEN_NOISE SIL
steps/nnet3/decode.sh: feature type is raw
steps/nnet3/decode.sh: line 169: steps/diagnostic/analyze_lats.sh: No such file or directory
Decoding done.

#### BEGIN CALCULATE WER ####
###==============###
### END DECODING ###
###==============###

###### BEGIN LANGUAGE INFO ######
lang= org
num_targets= 770
data_dir= data/org/train
ali_dir= exp/org/tri_ali
egs_dir= exp/org/nnet3/egs
###### END LANGUAGE INFO ######


###### BEGIN LANGUAGE INFO ######
lang= org2
num_targets= 722
data_dir= data/org2/train
ali_dir= exp/org2/tri_ali
egs_dir= exp/org2/nnet3/egs
###### END LANGUAGE INFO ######


###### BEGIN LANGUAGE INFO ######
lang= no_voice
num_targets= 714
data_dir= data/no_voice/train
ali_dir= exp/no_voice/tri_ali
egs_dir= exp/no_voice/nnet3/egs
###### END LANGUAGE INFO ######

### ============================ ###
### CREATE CONFIG FILES FOR NNET ###
### ============================ ###
feat-to-dim scp:data/org/train/feats.scp - 
nnet3-init exp/nnet3/multitask/configs//ref.config exp/nnet3/multitask/configs//ref.raw 
LOG (nnet3-init[5.3.83~1-9204]:main():nnet3-init.cc:80) Initialized raw neural net and wrote it to exp/nnet3/multitask/configs//ref.raw
nnet3-info "nnet3-copy --edits='rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - |" 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/configs//ref.raw to -
nnet3-init exp/nnet3/multitask/configs//ref.config exp/nnet3/multitask/configs//ref.raw 
LOG (nnet3-init[5.3.83~1-9204]:main():nnet3-init.cc:80) Initialized raw neural net and wrote it to exp/nnet3/multitask/configs//ref.raw
nnet3-info "nnet3-copy --edits='rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - |" 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/configs//ref.raw to -
steps/nnet3/xconfig_to_configs.py --xconfig-file exp/nnet3/multitask/configs/network.xconfig --config-dir exp/nnet3/multitask/configs/ --nnet-edits=rename-node old-name=output-0 new-name=output
### ================== ###
### MAKE NNET3 EGS DIR ###
### ================== ###
### MAKE SEPARATE EGS DIR PER LANGUAGE ###
local/nnet3/prepare_multilingual_egs.sh --cmd utils/run.pl --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 3 data/org/train data/org2/train data/no_voice/train exp/org/tri_ali exp/org2/tri_ali exp/no_voice/tri_ali exp/org/nnet3/egs exp/org2/nnet3/egs exp/no_voice/nnet3/egs
local/nnet3/prepare_multilingual_egs.sh --cmd utils/run.pl --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 3 data/org/train data/org2/train data/no_voice/train exp/org/tri_ali exp/org2/tri_ali exp/no_voice/tri_ali exp/org/nnet3/egs exp/org2/nnet3/egs exp/no_voice/nnet3/egs
3
data/org/train data/org2/train data/no_voice/train exp/org/tri_ali exp/org2/tri_ali exp/no_voice/tri_ali exp/org/nnet3/egs exp/org2/nnet3/egs exp/no_voice/nnet3/egs
local/nnet3/prepare_multilingual_egs.sh: Generate separate egs directory per language for multilingual training.
online_ivector_dir =
local/nnet3/prepare_multilingual_egs.sh: Generate egs for 
local/nnet3/prepare_multilingual_egs.sh: calling get_egs.sh
steps/nnet3/get_egs.sh --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 --samples-per-iter 400000 --stage 0 --cmd utils/run.pl --generate-egs-scp true data/org/train exp/org/tri_ali exp/org/nnet3/egs
steps/nnet3/get_egs.sh: feature type is raw
steps/nnet3/get_egs.sh: working out number of frames of training data
feat-to-len scp:data/org/train/feats.scp ark,t:- 
steps/nnet3/get_egs.sh: working out feature dim
*** steps/nnet3/get_egs.sh: warning: the --frames-per-eg is too large to generate one archive with
*** as many as --samples-per-iter egs in it.  Consider reducing --frames-per-eg.
steps/nnet3/get_egs.sh: creating 1 archives, each with 60142 egs, with
steps/nnet3/get_egs.sh:   8 labels per example, and (left,right) context = (16,12)
steps/nnet3/get_egs.sh: copying data alignments
copy-int-vector ark:- ark,scp:exp/org/nnet3/egs/ali.ark,exp/org/nnet3/egs/ali.scp 
LOG (copy-int-vector[5.3.83~1-9204]:main():copy-int-vector.cc:83) Copied 546 vectors of int32.
steps/nnet3/get_egs.sh: Getting validation and training subset examples.
steps/nnet3/get_egs.sh: ... extracting validation and training-subset alignments.
... Getting subsets of validation examples for diagnostics and combination.
nnet3-copy-egs ark:- ark,scp:exp/org/nnet3/egs/combine.egs,exp/org/nnet3/egs/combine.scp 
LOG (nnet3-copy-egs[5.3.83~1-9204]:main():nnet3-copy-egs.cc:436) Read 7625 neural-network training examples, wrote 7625, 0 examples had errors.
rm: cannot remove 'exp/org/nnet3/egs/train_combine.scp': No such file or directory
rm: cannot remove 'exp/org/nnet3/egs/valid_combine.scp': No such file or directory
steps/nnet3/get_egs.sh: Generating training examples on disk
steps/nnet3/get_egs.sh: recombining and shuffling order of archives on disk
steps/nnet3/get_egs.sh: removing temporary archives
steps/nnet3/get_egs.sh: removing temporary alignments and transforms
steps/nnet3/get_egs.sh: Finished preparing training examples
online_ivector_dir =
local/nnet3/prepare_multilingual_egs.sh: Generate egs for 
local/nnet3/prepare_multilingual_egs.sh: calling get_egs.sh
steps/nnet3/get_egs.sh --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 --samples-per-iter 400000 --stage 0 --cmd utils/run.pl --generate-egs-scp true data/org2/train exp/org2/tri_ali exp/org2/nnet3/egs
steps/nnet3/get_egs.sh: feature type is raw
steps/nnet3/get_egs.sh: working out number of frames of training data
feat-to-len scp:data/org2/train/feats.scp ark,t:- 
steps/nnet3/get_egs.sh: working out feature dim
*** steps/nnet3/get_egs.sh: warning: the --frames-per-eg is too large to generate one archive with
*** as many as --samples-per-iter egs in it.  Consider reducing --frames-per-eg.
steps/nnet3/get_egs.sh: creating 1 archives, each with 60142 egs, with
steps/nnet3/get_egs.sh:   8 labels per example, and (left,right) context = (16,12)
steps/nnet3/get_egs.sh: copying data alignments
copy-int-vector ark:- ark,scp:exp/org2/nnet3/egs/ali.ark,exp/org2/nnet3/egs/ali.scp 
LOG (copy-int-vector[5.3.83~1-9204]:main():copy-int-vector.cc:83) Copied 547 vectors of int32.
steps/nnet3/get_egs.sh: Getting validation and training subset examples.
steps/nnet3/get_egs.sh: ... extracting validation and training-subset alignments.
... Getting subsets of validation examples for diagnostics and combination.
nnet3-copy-egs ark:- ark,scp:exp/org2/nnet3/egs/combine.egs,exp/org2/nnet3/egs/combine.scp 
LOG (nnet3-copy-egs[5.3.83~1-9204]:main():nnet3-copy-egs.cc:436) Read 7625 neural-network training examples, wrote 7625, 0 examples had errors.
rm: cannot remove 'exp/org2/nnet3/egs/train_combine.scp': No such file or directory
rm: cannot remove 'exp/org2/nnet3/egs/valid_combine.scp': No such file or directory
steps/nnet3/get_egs.sh: Generating training examples on disk
steps/nnet3/get_egs.sh: recombining and shuffling order of archives on disk
steps/nnet3/get_egs.sh: removing temporary archives
steps/nnet3/get_egs.sh: removing temporary alignments and transforms
steps/nnet3/get_egs.sh: Finished preparing training examples
online_ivector_dir =
local/nnet3/prepare_multilingual_egs.sh: Generate egs for 
local/nnet3/prepare_multilingual_egs.sh: calling get_egs.sh
steps/nnet3/get_egs.sh --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 --samples-per-iter 400000 --stage 0 --cmd utils/run.pl --generate-egs-scp true data/no_voice/train exp/no_voice/tri_ali exp/no_voice/nnet3/egs
steps/nnet3/get_egs.sh: feature type is raw
steps/nnet3/get_egs.sh: working out number of frames of training data
feat-to-len scp:data/no_voice/train/feats.scp ark,t:- 
steps/nnet3/get_egs.sh: working out feature dim
*** steps/nnet3/get_egs.sh: warning: the --frames-per-eg is too large to generate one archive with
*** as many as --samples-per-iter egs in it.  Consider reducing --frames-per-eg.
steps/nnet3/get_egs.sh: creating 1 archives, each with 60142 egs, with
steps/nnet3/get_egs.sh:   8 labels per example, and (left,right) context = (16,12)
steps/nnet3/get_egs.sh: copying data alignments
copy-int-vector ark:- ark,scp:exp/no_voice/nnet3/egs/ali.ark,exp/no_voice/nnet3/egs/ali.scp 
LOG (copy-int-vector[5.3.83~1-9204]:main():copy-int-vector.cc:83) Copied 548 vectors of int32.
steps/nnet3/get_egs.sh: Getting validation and training subset examples.
steps/nnet3/get_egs.sh: ... extracting validation and training-subset alignments.
... Getting subsets of validation examples for diagnostics and combination.
nnet3-copy-egs ark:- ark,scp:exp/no_voice/nnet3/egs/combine.egs,exp/no_voice/nnet3/egs/combine.scp 
LOG (nnet3-copy-egs[5.3.83~1-9204]:main():nnet3-copy-egs.cc:436) Read 7625 neural-network training examples, wrote 7625, 0 examples had errors.
rm: cannot remove 'exp/no_voice/nnet3/egs/train_combine.scp': No such file or directory
rm: cannot remove 'exp/no_voice/nnet3/egs/valid_combine.scp': No such file or directory
steps/nnet3/get_egs.sh: Generating training examples on disk
steps/nnet3/get_egs.sh: recombining and shuffling order of archives on disk
steps/nnet3/get_egs.sh: removing temporary archives
steps/nnet3/get_egs.sh: removing temporary alignments and transforms
steps/nnet3/get_egs.sh: Finished preparing training examples
### MAKE ONE BIG MULTILING EGS DIR ###
steps/nnet3/multilingual/combine_egs.sh --cmd utils/run.pl --samples-per-iter 10000 --lang2weight 0.5,0.5,0.5 3 exp/org/nnet3/egs exp/org2/nnet3/egs exp/no_voice/nnet3/egs exp/nnet3/multitask/egs
steps/nnet3/multilingual/combine_egs.sh: allocating multilingual examples for training.
steps/nnet3/multilingual/combine_egs.sh: combine combine.scp examples from all langs in exp/nnet3/multitask/egs/combine.scp.
steps/nnet3/multilingual/combine_egs.sh: combine train_diagnostic.scp examples from all langs in exp/nnet3/multitask/egs/train_diagnostic.scp.
steps/nnet3/multilingual/combine_egs.sh: combine valid_diagnostic.scp examples from all langs in exp/nnet3/multitask/egs/valid_diagnostic.scp.
steps/nnet3/multilingual/combine_egs.sh: Finished preparing multilingual training example.
### ================ ###
### BEGIN TRAIN NNET ###
### ================ ###
2017-12-03 13:59:36,545 [steps/nnet3/train_raw_dnn.py:34 - <module> - INFO ] Starting raw DNN trainer (train_raw_dnn.py)
2017-12-03 13:59:36,552 [steps/nnet3/train_raw_dnn.py:181 - train - INFO ] Arguments for the experiment
{'backstitch_training_interval': 1,
 'backstitch_training_scale': 0.0,
 'cleanup': True,
 'cmvn_opts': '--norm-means=false --norm-vars=false',
 'combine_sum_to_one_penalty': 0.0,
 'command': 'utils/run.pl',
 'compute_average_posteriors': False,
 'dir': 'exp/nnet3/multitask',
 'dropout_schedule': None,
 'egs_command': 'queue.pl',
 'egs_dir': 'exp/nnet3/multitask/egs',
 'egs_opts': None,
 'egs_stage': 0,
 'email': None,
 'exit_stage': None,
 'feat_dir': 'data/org/train',
 'final_combination': True,
 'final_effective_lrate': 0.00015,
 'frames_per_eg': 8,
 'image_augmentation_opts': None,
 'initial_effective_lrate': 0.0015,
 'max_lda_jobs': 10,
 'max_models_combine': 20,
 'max_param_change': 2.0,
 'minibatch_size': '256,128',
 'momentum': 0.0,
 'nj': 4,
 'num_epochs': 1.0,
 'num_jobs_compute_prior': 10,
 'num_jobs_final': 1,
 'num_jobs_initial': 1,
 'online_ivector_dir': None,
 'preserve_model_interval': 100,
 'presoftmax_prior_scale_power': -0.25,
 'prior_subset_size': 20000,
 'proportional_shrink': 0.0,
 'rand_prune': 4.0,
 'remove_egs': True,
 'reporting_interval': 0.1,
 'samples_per_iter': 10000,
 'shuffle_buffer_size': 5000,
 'srand': 0,
 'stage': -5,
 'targets_scp': 'exp/org/tri_ali',
 'transform_dir': None,
 'use_dense_targets': False,
 'use_gpu': True}
2017-12-03 13:59:36,557 [steps/libs/nnet3/train/common.py:410 - verify_egs_dir - WARNING ] The ivector ids are not used. It's your responsibility to make sure the ivector extractor has been used consistently
2017-12-03 13:59:36,557 [steps/nnet3/train_raw_dnn.py:294 - train - INFO ] Preparing the initial network.
2017-12-03 13:59:36,628 [steps/nnet3/train_raw_dnn.py:328 - train - INFO ] Training will run for 1.0 epochs = 112 iterations
2017-12-03 13:59:36,628 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 0)
2017-12-03 13:59:36,632 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 0, learning rate is 0.0015.
2017-12-03 13:59:39,803 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 1)
2017-12-03 13:59:39,808 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 1, learning rate is 0.0014694766436.
2017-12-03 13:59:42,826 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 2)
2017-12-03 13:59:42,834 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 2, learning rate is 0.00143957440405.
2017-12-03 13:59:45,866 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 3)
2017-12-03 13:59:45,872 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 3, learning rate is 0.00141028064232.
2017-12-03 13:59:49,059 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 4)
2017-12-03 13:59:49,064 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 4, learning rate is 0.00138158297653.
2017-12-03 13:59:52,211 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 5)
2017-12-03 13:59:52,217 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 5, learning rate is 0.00135346927681.
2017-12-03 13:59:55,248 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 6)
2017-12-03 13:59:55,258 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 6, learning rate is 0.00132592766006.
2017-12-03 13:59:58,325 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 7)
2017-12-03 13:59:58,334 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 7, learning rate is 0.00129894648504.
2017-12-03 14:00:01,452 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 8)
2017-12-03 14:00:01,458 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 8, learning rate is 0.00127251434737.
2017-12-03 14:00:04,481 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 9)
2017-12-03 14:00:04,492 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 9, learning rate is 0.00124662007473.
2017-12-03 14:00:07,577 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 10)
2017-12-03 14:00:07,586 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 10, learning rate is 0.00122125272217.
2017-12-03 14:00:10,625 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 11)
2017-12-03 14:00:10,631 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 11, learning rate is 0.00119640156744.
2017-12-03 14:00:13,711 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 12)
2017-12-03 14:00:13,716 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 12, learning rate is 0.00117205610648.
2017-12-03 14:00:16,813 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 13)
2017-12-03 14:00:16,818 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 13, learning rate is 0.00114820604897.
2017-12-03 14:00:19,791 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 14)
2017-12-03 14:00:19,796 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 14, learning rate is 0.001124841314.
2017-12-03 14:00:22,861 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 15)
2017-12-03 14:00:22,866 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 15, learning rate is 0.00110195202578.
2017-12-03 14:00:25,829 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 16)
2017-12-03 14:00:25,835 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 16, learning rate is 0.0010795285095.
2017-12-03 14:00:28,815 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 17)
2017-12-03 14:00:28,821 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 17, learning rate is 0.00105756128721.
2017-12-03 14:00:31,820 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 18)
2017-12-03 14:00:31,825 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 18, learning rate is 0.00103604107382.
2017-12-03 14:00:34,696 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 19)
2017-12-03 14:00:34,702 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 19, learning rate is 0.00101495877319.
2017-12-03 14:00:37,643 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 20)
2017-12-03 14:00:37,650 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 20, learning rate is 0.000994305474274.
2017-12-03 14:00:40,811 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 21)
2017-12-03 14:00:40,816 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 21, learning rate is 0.000974072447364.
2017-12-03 14:00:43,742 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 22)
2017-12-03 14:00:43,747 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 22, learning rate is 0.000954251140382.
2017-12-03 14:00:46,726 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 23)
2017-12-03 14:00:46,732 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 23, learning rate is 0.000934833175279.
2017-12-03 14:00:49,618 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 24)
2017-12-03 14:00:49,623 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 24, learning rate is 0.000915810344488.
2017-12-03 14:00:52,540 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 25)
2017-12-03 14:00:52,545 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 25, learning rate is 0.00089717460746.
2017-12-03 14:00:55,429 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 26)
2017-12-03 14:00:55,435 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 26, learning rate is 0.00087891808726.
2017-12-03 14:00:58,342 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 27)
2017-12-03 14:00:58,347 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 27, learning rate is 0.000861033067243.
2017-12-03 14:01:01,215 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 28)
2017-12-03 14:01:01,228 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 28, learning rate is 0.000843511987786.
2017-12-03 14:01:04,212 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 29)
2017-12-03 14:01:04,217 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 29, learning rate is 0.000826347443097.
2017-12-03 14:01:07,194 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 30)
2017-12-03 14:01:07,200 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 30, learning rate is 0.000809532178085.
2017-12-03 14:01:10,174 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 31)
2017-12-03 14:01:10,179 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 31, learning rate is 0.000793059085291.
2017-12-03 14:01:13,312 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 32)
2017-12-03 14:01:13,321 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 32, learning rate is 0.000776921201885.
2017-12-03 14:01:16,296 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 33)
2017-12-03 14:01:16,303 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 33, learning rate is 0.000761111706723.
2017-12-03 14:01:19,393 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 34)
2017-12-03 14:01:19,398 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 34, learning rate is 0.000745623917466.
2017-12-03 14:01:22,505 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 35)
2017-12-03 14:01:22,511 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 35, learning rate is 0.000730451287749.
2017-12-03 14:01:25,465 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 36)
2017-12-03 14:01:25,470 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 36, learning rate is 0.000715587404422.
2017-12-03 14:01:28,414 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 37)
2017-12-03 14:01:28,420 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 37, learning rate is 0.000701025984833.
2017-12-03 14:01:31,352 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 38)
2017-12-03 14:01:31,360 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 38, learning rate is 0.000686760874178.
2017-12-03 14:01:34,421 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 39)
2017-12-03 14:01:34,426 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 39, learning rate is 0.000672786042894.
2017-12-03 14:01:37,368 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 40)
2017-12-03 14:01:37,373 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 40, learning rate is 0.000659095584114.
2017-12-03 14:01:40,638 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 41)
2017-12-03 14:01:40,644 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 41, learning rate is 0.000645683711169.
2017-12-03 14:01:43,613 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 42)
2017-12-03 14:01:43,618 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 42, learning rate is 0.000632544755143.
2017-12-03 14:01:46,661 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 43)
2017-12-03 14:01:46,667 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 43, learning rate is 0.000619673162475.
2017-12-03 14:01:49,611 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 44)
2017-12-03 14:01:49,616 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 44, learning rate is 0.000607063492614.
2017-12-03 14:01:52,660 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 45)
2017-12-03 14:01:52,665 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 45, learning rate is 0.000594710415718.
2017-12-03 14:01:55,775 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 46)
2017-12-03 14:01:55,783 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 46, learning rate is 0.000582608710401.
2017-12-03 14:01:58,739 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 47)
2017-12-03 14:01:58,759 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 47, learning rate is 0.000570753261527.
2017-12-03 14:02:01,656 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 48)
2017-12-03 14:02:01,662 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 48, learning rate is 0.000559139058047.
2017-12-03 14:02:04,647 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 49)
2017-12-03 14:02:04,652 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 49, learning rate is 0.000547761190882.
2017-12-03 14:02:07,490 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 50)
2017-12-03 14:02:07,498 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 50, learning rate is 0.000536614850847.
2017-12-03 14:02:10,552 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 51)
2017-12-03 14:02:10,568 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 51, learning rate is 0.000525695326618.
2017-12-03 14:02:13,616 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 52)
2017-12-03 14:02:13,621 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 52, learning rate is 0.000514998002742.
2017-12-03 14:02:16,543 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 53)
2017-12-03 14:02:16,548 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 53, learning rate is 0.000504518357686.
2017-12-03 14:02:19,465 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 54)
2017-12-03 14:02:19,470 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 54, learning rate is 0.000494251961924.
2017-12-03 14:02:22,473 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 55)
2017-12-03 14:02:22,481 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 55, learning rate is 0.000484194476066.
2017-12-03 14:02:25,359 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 56)
2017-12-03 14:02:25,369 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 56, learning rate is 0.000474341649025.
2017-12-03 14:02:28,373 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 57)
2017-12-03 14:02:28,378 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 57, learning rate is 0.000464689316219.
2017-12-03 14:02:31,333 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 58)
2017-12-03 14:02:31,339 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 58, learning rate is 0.000455233397808.
2017-12-03 14:02:34,360 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 59)
2017-12-03 14:02:34,366 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 59, learning rate is 0.000445969896977.
2017-12-03 14:02:37,542 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 60)
2017-12-03 14:02:37,547 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 60, learning rate is 0.000436894898236.
2017-12-03 14:02:40,700 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 61)
2017-12-03 14:02:40,705 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 61, learning rate is 0.000428004565777.
2017-12-03 14:02:43,728 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 62)
2017-12-03 14:02:43,733 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 62, learning rate is 0.000419295141841.
2017-12-03 14:02:46,738 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 63)
2017-12-03 14:02:46,744 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 63, learning rate is 0.00041076294514.
2017-12-03 14:02:49,713 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 64)
2017-12-03 14:02:49,719 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 64, learning rate is 0.000402404369292.
2017-12-03 14:02:52,682 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 65)
2017-12-03 14:02:52,690 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 65, learning rate is 0.000394215881304.
2017-12-03 14:02:55,668 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 66)
2017-12-03 14:02:55,673 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 66, learning rate is 0.000386194020074.
2017-12-03 14:02:58,558 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 67)
2017-12-03 14:02:58,566 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 67, learning rate is 0.000378335394931.
2017-12-03 14:03:01,652 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 68)
2017-12-03 14:03:01,657 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 68, learning rate is 0.000370636684198.
2017-12-03 14:03:04,659 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 69)
2017-12-03 14:03:04,665 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 69, learning rate is 0.000363094633793.
2017-12-03 14:03:07,622 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 70)
2017-12-03 14:03:07,627 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 70, learning rate is 0.000355706055849.
2017-12-03 14:03:10,629 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 71)
2017-12-03 14:03:10,634 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 71, learning rate is 0.000348467827371.
2017-12-03 14:03:13,611 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 72)
2017-12-03 14:03:13,616 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 72, learning rate is 0.000341376888911.
2017-12-03 14:03:16,712 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 73)
2017-12-03 14:03:16,717 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 73, learning rate is 0.000334430243279.
2017-12-03 14:03:19,780 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 74)
2017-12-03 14:03:19,788 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 74, learning rate is 0.000327624954274.
2017-12-03 14:03:22,784 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 75)
2017-12-03 14:03:22,790 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 75, learning rate is 0.000320958145444.
2017-12-03 14:03:25,709 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 76)
2017-12-03 14:03:25,715 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 76, learning rate is 0.000314426998868.
2017-12-03 14:03:28,597 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 77)
2017-12-03 14:03:28,602 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 77, learning rate is 0.000308028753969.
2017-12-03 14:03:31,536 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 78)
2017-12-03 14:03:31,542 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 78, learning rate is 0.000301760706342.
2017-12-03 14:03:34,561 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 79)
2017-12-03 14:03:34,566 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 79, learning rate is 0.000295620206617.
2017-12-03 14:03:37,600 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 80)
2017-12-03 14:03:37,605 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 80, learning rate is 0.000289604659332.
2017-12-03 14:03:40,796 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 81)
2017-12-03 14:03:40,802 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 81, learning rate is 0.000283711521844.
2017-12-03 14:03:43,949 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 82)
2017-12-03 14:03:43,957 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 82, learning rate is 0.000277938303246.
2017-12-03 14:03:46,988 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 83)
2017-12-03 14:03:46,993 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 83, learning rate is 0.000272282563321.
2017-12-03 14:03:49,904 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 84)
2017-12-03 14:03:49,909 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 84, learning rate is 0.000266741911506.
2017-12-03 14:03:53,050 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 85)
2017-12-03 14:03:53,055 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 85, learning rate is 0.000261314005884.
2017-12-03 14:03:56,045 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 86)
2017-12-03 14:03:56,051 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 86, learning rate is 0.000255996552194.
2017-12-03 14:03:59,188 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 87)
2017-12-03 14:03:59,193 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 87, learning rate is 0.000250787302861.
2017-12-03 14:04:02,371 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 88)
2017-12-03 14:04:02,378 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 88, learning rate is 0.000245684056043.
2017-12-03 14:04:05,505 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 89)
2017-12-03 14:04:05,514 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 89, learning rate is 0.000240684654706.
2017-12-03 14:04:08,522 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 90)
2017-12-03 14:04:08,527 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 90, learning rate is 0.000235786985709.
2017-12-03 14:04:11,518 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 91)
2017-12-03 14:04:11,523 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 91, learning rate is 0.000230988978909.
2017-12-03 14:04:14,606 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 92)
2017-12-03 14:04:14,612 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 92, learning rate is 0.00022628860629.
2017-12-03 14:04:17,634 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 93)
2017-12-03 14:04:17,639 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 93, learning rate is 0.000221683881104.
2017-12-03 14:04:20,535 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 94)
2017-12-03 14:04:20,540 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 94, learning rate is 0.000217172857029.
2017-12-03 14:04:23,475 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 95)
2017-12-03 14:04:23,482 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 95, learning rate is 0.000212753627352.
2017-12-03 14:04:26,462 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 96)
2017-12-03 14:04:26,467 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 96, learning rate is 0.000208424324156.
2017-12-03 14:04:29,334 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 97)
2017-12-03 14:04:29,341 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 97, learning rate is 0.000204183117536.
2017-12-03 14:04:32,247 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 98)
2017-12-03 14:04:32,252 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 98, learning rate is 0.000200028214824.
2017-12-03 14:04:35,389 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 99)
2017-12-03 14:04:35,394 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 99, learning rate is 0.00019595785983.
2017-12-03 14:04:38,456 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 100)
2017-12-03 14:04:38,464 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 100, learning rate is 0.0001919703321.
2017-12-03 14:04:41,713 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 101)
2017-12-03 14:04:41,718 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 101, learning rate is 0.000188063946189.
2017-12-03 14:04:44,710 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 102)
2017-12-03 14:04:44,715 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 102, learning rate is 0.000184237050952.
2017-12-03 14:04:47,696 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 103)
2017-12-03 14:04:47,701 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 103, learning rate is 0.00018048802884.
2017-12-03 14:04:50,793 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 104)
2017-12-03 14:04:50,801 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 104, learning rate is 0.000176815295219.
2017-12-03 14:04:53,785 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 105)
2017-12-03 14:04:53,790 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 105, learning rate is 0.000173217297703.
2017-12-03 14:04:56,857 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 106)
2017-12-03 14:04:56,866 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 106, learning rate is 0.000169692515495.
2017-12-03 14:04:59,892 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 107)
2017-12-03 14:04:59,897 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 107, learning rate is 0.000166239458742.
2017-12-03 14:05:03,051 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 108)
2017-12-03 14:05:03,058 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 108, learning rate is 0.00016285666791.
2017-12-03 14:05:06,217 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 109)
2017-12-03 14:05:06,222 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 109, learning rate is 0.000159542713166.
2017-12-03 14:05:09,255 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 110)
2017-12-03 14:05:09,261 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 110, learning rate is 0.000156296193769.
2017-12-03 14:05:12,340 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 111)
2017-12-03 14:05:12,346 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 111, learning rate is 0.00015.
2017-12-03 14:05:15,345 [steps/nnet3/train_raw_dnn.py:401 - train - INFO ] Doing final combination to produce final.raw
2017-12-03 14:05:15,346 [steps/libs/nnet3/train/frame_level_objf/common.py:481 - combine_models - INFO ] Combining set([57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 112]) models.
2017-12-03 14:05:33,844 [steps/nnet3/train_raw_dnn.py:423 - train - INFO ] Cleaning up the experiment directory exp/nnet3/multitask
exp/nnet3/multitask: num-iters=112 nj=1..1 num-params=0.3M combine=-3.23->-3.14
steps/nnet3/train_raw_dnn.py --stage=-5 --cmd=utils/run.pl --trainer.num-epochs 1 --trainer.optimization.num-jobs-initial=1 --trainer.optimization.num-jobs-final=1 --trainer.optimization.initial-effective-lrate=0.0015 --trainer.optimization.final-effective-lrate=0.00015 --trainer.optimization.minibatch-size=256,128 --trainer.samples-per-iter=10000 --trainer.max-param-change=2.0 --trainer.srand=0 --feat.cmvn-opts=--norm-means=false --norm-vars=false --feat-dir data/org/train --egs.dir exp/nnet3/multitask/egs --use-dense-targets false --targets-scp exp/org/tri_ali --cleanup.remove-egs true --use-gpu true --dir=exp/nnet3/multitask
['steps/nnet3/train_raw_dnn.py', '--stage=-5', '--cmd=utils/run.pl', '--trainer.num-epochs', '1', '--trainer.optimization.num-jobs-initial=1', '--trainer.optimization.num-jobs-final=1', '--trainer.optimization.initial-effective-lrate=0.0015', '--trainer.optimization.final-effective-lrate=0.00015', '--trainer.optimization.minibatch-size=256,128', '--trainer.samples-per-iter=10000', '--trainer.max-param-change=2.0', '--trainer.srand=0', '--feat.cmvn-opts=--norm-means=false --norm-vars=false', '--feat-dir', 'data/org/train', '--egs.dir', 'exp/nnet3/multitask/egs', '--use-dense-targets', 'false', '--targets-scp', 'exp/org/tri_ali', '--cleanup.remove-egs', 'true', '--use-gpu', 'true', '--dir=exp/nnet3/multitask']
use_multitask_egs=True
### ============== ###
### END TRAIN NNET ###
### ============== ###
### ========================== ###
### SPLIT & COPY NNET PER LANG ###
### ========================== ###
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/org/tri_ali/final.mdl - exp/nnet3/multitask/org/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/org/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language org.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/org exp/org/nnet3/egs
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/org2/tri_ali/final.mdl - exp/nnet3/multitask/org2/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-1 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/org2/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language org2.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/org2 exp/org2/nnet3/egs
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/no_voice/tri_ali/final.mdl - exp/nnet3/multitask/no_voice/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-2 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/no_voice/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language no_voice.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/no_voice exp/no_voice/nnet3/egs
### ============== ###
### BEGIN DECODING ###
### ============== ###
### decoding with 4 jobs, unigram LM ###
steps/nnet3/decode.sh --nj 8 --cmd utils/run.pl --max-active 600 --min-active 200 exp_org/triphones/graph data_org/test exp/nnet3/multitask/decode exp/nnet3/multitask/org/final_adj.mdl SPOKEN_NOISE SIL
steps/nnet3/decode.sh: feature type is raw
steps/nnet3/decode.sh: line 169: steps/diagnostic/analyze_lats.sh: No such file or directory
Decoding done.

#### BEGIN CALCULATE WER ####
###==============###
### END DECODING ###
###==============###

###### BEGIN LANGUAGE INFO ######
lang= org
num_targets= 770
data_dir= data/org/train
ali_dir= exp/org/tri_ali
egs_dir= exp/org/nnet3/egs
###### END LANGUAGE INFO ######


###### BEGIN LANGUAGE INFO ######
lang= org
num_targets= 770
data_dir= data/org/train
ali_dir= exp/org/tri_ali
egs_dir= exp/org/nnet3/egs
###### END LANGUAGE INFO ######

### ============================ ###
### CREATE CONFIG FILES FOR NNET ###
### ============================ ###
feat-to-dim scp:data/org/train/feats.scp - 
nnet3-init exp/nnet3/multitask/configs//ref.config exp/nnet3/multitask/configs//ref.raw 
LOG (nnet3-init[5.3.83~1-9204]:main():nnet3-init.cc:80) Initialized raw neural net and wrote it to exp/nnet3/multitask/configs//ref.raw
nnet3-info "nnet3-copy --edits='rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - |" 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/configs//ref.raw to -
nnet3-init exp/nnet3/multitask/configs//ref.config exp/nnet3/multitask/configs//ref.raw 
LOG (nnet3-init[5.3.83~1-9204]:main():nnet3-init.cc:80) Initialized raw neural net and wrote it to exp/nnet3/multitask/configs//ref.raw
nnet3-info "nnet3-copy --edits='rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - |" 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/configs//ref.raw to -
steps/nnet3/xconfig_to_configs.py --xconfig-file exp/nnet3/multitask/configs/network.xconfig --config-dir exp/nnet3/multitask/configs/ --nnet-edits=rename-node old-name=output-0 new-name=output
### ================== ###
### MAKE NNET3 EGS DIR ###
### ================== ###
### MAKE SEPARATE EGS DIR PER LANGUAGE ###
local/nnet3/prepare_multilingual_egs.sh --cmd utils/run.pl --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 2 data/org/train data/org/train exp/org/tri_ali exp/org/tri_ali exp/org/nnet3/egs exp/org/nnet3/egs
local/nnet3/prepare_multilingual_egs.sh --cmd utils/run.pl --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 2 data/org/train data/org/train exp/org/tri_ali exp/org/tri_ali exp/org/nnet3/egs exp/org/nnet3/egs
2
data/org/train data/org/train exp/org/tri_ali exp/org/tri_ali exp/org/nnet3/egs exp/org/nnet3/egs
local/nnet3/prepare_multilingual_egs.sh: Generate separate egs directory per language for multilingual training.
online_ivector_dir =
local/nnet3/prepare_multilingual_egs.sh: Generate egs for 
local/nnet3/prepare_multilingual_egs.sh: calling get_egs.sh
steps/nnet3/get_egs.sh --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 --samples-per-iter 400000 --stage 0 --cmd utils/run.pl --generate-egs-scp true data/org/train exp/org/tri_ali exp/org/nnet3/egs
steps/nnet3/get_egs.sh: feature type is raw
steps/nnet3/get_egs.sh: working out number of frames of training data
feat-to-len scp:data/org/train/feats.scp ark,t:- 
steps/nnet3/get_egs.sh: working out feature dim
*** steps/nnet3/get_egs.sh: warning: the --frames-per-eg is too large to generate one archive with
*** as many as --samples-per-iter egs in it.  Consider reducing --frames-per-eg.
steps/nnet3/get_egs.sh: creating 1 archives, each with 60142 egs, with
steps/nnet3/get_egs.sh:   8 labels per example, and (left,right) context = (16,12)
steps/nnet3/get_egs.sh: copying data alignments
copy-int-vector ark:- ark,scp:exp/org/nnet3/egs/ali.ark,exp/org/nnet3/egs/ali.scp 
LOG (copy-int-vector[5.3.83~1-9204]:main():copy-int-vector.cc:83) Copied 546 vectors of int32.
steps/nnet3/get_egs.sh: Getting validation and training subset examples.
steps/nnet3/get_egs.sh: ... extracting validation and training-subset alignments.
... Getting subsets of validation examples for diagnostics and combination.
nnet3-copy-egs ark:- ark,scp:exp/org/nnet3/egs/combine.egs,exp/org/nnet3/egs/combine.scp 
LOG (nnet3-copy-egs[5.3.83~1-9204]:main():nnet3-copy-egs.cc:436) Read 7625 neural-network training examples, wrote 7625, 0 examples had errors.
rm: cannot remove 'exp/org/nnet3/egs/train_combine.scp': No such file or directory
rm: cannot remove 'exp/org/nnet3/egs/valid_combine.scp': No such file or directory
steps/nnet3/get_egs.sh: Generating training examples on disk
steps/nnet3/get_egs.sh: recombining and shuffling order of archives on disk
steps/nnet3/get_egs.sh: removing temporary archives
steps/nnet3/get_egs.sh: removing temporary alignments and transforms
steps/nnet3/get_egs.sh: Finished preparing training examples
online_ivector_dir =
### MAKE ONE BIG MULTILING EGS DIR ###
steps/nnet3/multilingual/combine_egs.sh --cmd utils/run.pl --samples-per-iter 10000 --lang2weight 0.5,0.5 2 exp/org/nnet3/egs exp/org/nnet3/egs exp/nnet3/multitask/egs
steps/nnet3/multilingual/combine_egs.sh: allocating multilingual examples for training.
steps/nnet3/multilingual/combine_egs.sh: combine combine.scp examples from all langs in exp/nnet3/multitask/egs/combine.scp.
steps/nnet3/multilingual/combine_egs.sh: combine train_diagnostic.scp examples from all langs in exp/nnet3/multitask/egs/train_diagnostic.scp.
steps/nnet3/multilingual/combine_egs.sh: combine valid_diagnostic.scp examples from all langs in exp/nnet3/multitask/egs/valid_diagnostic.scp.
steps/nnet3/multilingual/combine_egs.sh: Finished preparing multilingual training example.
### ================ ###
### BEGIN TRAIN NNET ###
### ================ ###
2017-12-03 14:11:48,431 [steps/nnet3/train_raw_dnn.py:34 - <module> - INFO ] Starting raw DNN trainer (train_raw_dnn.py)
2017-12-03 14:11:48,437 [steps/nnet3/train_raw_dnn.py:181 - train - INFO ] Arguments for the experiment
{'backstitch_training_interval': 1,
 'backstitch_training_scale': 0.0,
 'cleanup': True,
 'cmvn_opts': '--norm-means=false --norm-vars=false',
 'combine_sum_to_one_penalty': 0.0,
 'command': 'utils/run.pl',
 'compute_average_posteriors': False,
 'dir': 'exp/nnet3/multitask',
 'dropout_schedule': None,
 'egs_command': 'queue.pl',
 'egs_dir': 'exp/nnet3/multitask/egs',
 'egs_opts': None,
 'egs_stage': 0,
 'email': None,
 'exit_stage': None,
 'feat_dir': 'data/org/train',
 'final_combination': True,
 'final_effective_lrate': 0.00015,
 'frames_per_eg': 8,
 'image_augmentation_opts': None,
 'initial_effective_lrate': 0.0015,
 'max_lda_jobs': 10,
 'max_models_combine': 20,
 'max_param_change': 2.0,
 'minibatch_size': '256,128',
 'momentum': 0.0,
 'nj': 4,
 'num_epochs': 1.0,
 'num_jobs_compute_prior': 10,
 'num_jobs_final': 1,
 'num_jobs_initial': 1,
 'online_ivector_dir': None,
 'preserve_model_interval': 100,
 'presoftmax_prior_scale_power': -0.25,
 'prior_subset_size': 20000,
 'proportional_shrink': 0.0,
 'rand_prune': 4.0,
 'remove_egs': True,
 'reporting_interval': 0.1,
 'samples_per_iter': 10000,
 'shuffle_buffer_size': 5000,
 'srand': 0,
 'stage': -5,
 'targets_scp': 'exp/org/tri_ali',
 'transform_dir': None,
 'use_dense_targets': False,
 'use_gpu': True}
2017-12-03 14:11:48,442 [steps/libs/nnet3/train/common.py:410 - verify_egs_dir - WARNING ] The ivector ids are not used. It's your responsibility to make sure the ivector extractor has been used consistently
2017-12-03 14:11:48,442 [steps/nnet3/train_raw_dnn.py:294 - train - INFO ] Preparing the initial network.
2017-12-03 14:11:48,507 [steps/nnet3/train_raw_dnn.py:328 - train - INFO ] Training will run for 1.0 epochs = 72 iterations
2017-12-03 14:11:48,507 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 0)
2017-12-03 14:11:48,510 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 0, learning rate is 0.0015.
2017-12-03 14:11:49,984 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 1)
2017-12-03 14:11:49,990 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 1, learning rate is 0.00145278842229.
2017-12-03 14:11:51,490 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 2)
2017-12-03 14:11:51,495 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 2, learning rate is 0.00140706279996.
2017-12-03 14:11:54,169 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 3)
2017-12-03 14:11:54,175 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 3, learning rate is 0.00136277636348.
2017-12-03 14:11:56,712 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 4)
2017-12-03 14:11:56,718 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 4, learning rate is 0.00131988381535.
2017-12-03 14:11:59,173 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 5)
2017-12-03 14:11:59,179 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 5, learning rate is 0.00127834128381.
2017-12-03 14:12:01,582 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 6)
2017-12-03 14:12:01,588 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 6, learning rate is 0.0012381062779.
2017-12-03 14:12:04,377 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 7)
2017-12-03 14:12:04,382 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 7, learning rate is 0.00119913764407.
2017-12-03 14:12:07,038 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 8)
2017-12-03 14:12:07,044 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 8, learning rate is 0.00116139552402.
2017-12-03 14:12:09,106 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 9)
2017-12-03 14:12:09,112 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 9, learning rate is 0.001124841314.
2017-12-03 14:12:10,763 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 10)
2017-12-03 14:12:10,772 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 10, learning rate is 0.00108943762526.
2017-12-03 14:12:12,389 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 11)
2017-12-03 14:12:12,395 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 11, learning rate is 0.00105514824586.
2017-12-03 14:12:15,308 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 12)
2017-12-03 14:12:15,313 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 12, learning rate is 0.00102193810359.
2017-12-03 14:12:18,176 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 13)
2017-12-03 14:12:18,186 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 13, learning rate is 0.000989773230125.
2017-12-03 14:12:20,746 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 14)
2017-12-03 14:12:20,751 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 14, learning rate is 0.000958620726279.
2017-12-03 14:12:22,943 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 15)
2017-12-03 14:12:22,948 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 15, learning rate is 0.000928448728337.
2017-12-03 14:12:25,455 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 16)
2017-12-03 14:12:25,460 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 16, learning rate is 0.000899226375478.
2017-12-03 14:12:27,929 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 17)
2017-12-03 14:12:27,934 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 17, learning rate is 0.000870923778208.
2017-12-03 14:12:29,889 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 18)
2017-12-03 14:12:29,896 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 18, learning rate is 0.000843511987786.
2017-12-03 14:12:31,495 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 19)
2017-12-03 14:12:31,500 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 19, learning rate is 0.000816962966612.
2017-12-03 14:12:33,065 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 20)
2017-12-03 14:12:33,070 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 20, learning rate is 0.000791249559555.
2017-12-03 14:12:35,979 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 21)
2017-12-03 14:12:35,985 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 21, learning rate is 0.000766345466176.
2017-12-03 14:12:38,566 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 22)
2017-12-03 14:12:38,572 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 22, learning rate is 0.000742225213823.
2017-12-03 14:12:41,170 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 23)
2017-12-03 14:12:41,178 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 23, learning rate is 0.000718864131583.
2017-12-03 14:12:43,417 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 24)
2017-12-03 14:12:43,422 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 24, learning rate is 0.000696238325042.
2017-12-03 14:12:46,244 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 25)
2017-12-03 14:12:46,249 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 25, learning rate is 0.00067432465185.
2017-12-03 14:12:48,898 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 26)
2017-12-03 14:12:48,905 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 26, learning rate is 0.000653100698048.
2017-12-03 14:12:50,976 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 27)
2017-12-03 14:12:50,981 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 27, learning rate is 0.000632544755143.
2017-12-03 14:12:52,612 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 28)
2017-12-03 14:12:52,622 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 28, learning rate is 0.000612635797901.
2017-12-03 14:12:54,408 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 29)
2017-12-03 14:12:54,413 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 29, learning rate is 0.000593353462847.
2017-12-03 14:12:57,087 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 30)
2017-12-03 14:12:57,093 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 30, learning rate is 0.000574678027434.
2017-12-03 14:12:59,698 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 31)
2017-12-03 14:12:59,706 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 31, learning rate is 0.000556590389867.
2017-12-03 14:13:02,642 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 32)
2017-12-03 14:13:02,648 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 32, learning rate is 0.000539072049571.
2017-12-03 14:13:04,891 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 33)
2017-12-03 14:13:04,896 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 33, learning rate is 0.000522105088264.
2017-12-03 14:13:07,500 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 34)
2017-12-03 14:13:07,505 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 34, learning rate is 0.000505672151633.
2017-12-03 14:13:10,177 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 35)
2017-12-03 14:13:10,182 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 35, learning rate is 0.000489756431578.
2017-12-03 14:13:12,154 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 36)
2017-12-03 14:13:12,161 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 36, learning rate is 0.000474341649025.
2017-12-03 14:13:13,814 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 37)
2017-12-03 14:13:13,819 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 37, learning rate is 0.000459412037276.
2017-12-03 14:13:15,453 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 38)
2017-12-03 14:13:15,462 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 38, learning rate is 0.000444952325877.
2017-12-03 14:13:18,182 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 39)
2017-12-03 14:13:18,187 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 39, learning rate is 0.000430947725003.
2017-12-03 14:13:20,957 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 40)
2017-12-03 14:13:20,962 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 40, learning rate is 0.000417383910331.
2017-12-03 14:13:23,733 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 41)
2017-12-03 14:13:23,738 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 41, learning rate is 0.000404247008386.
2017-12-03 14:13:26,089 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 42)
2017-12-03 14:13:26,094 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 42, learning rate is 0.000391523582352.
2017-12-03 14:13:28,649 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 43)
2017-12-03 14:13:28,654 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 43, learning rate is 0.00037920061833.
2017-12-03 14:13:31,390 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 44)
2017-12-03 14:13:31,394 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 44, learning rate is 0.000367265512023.
2017-12-03 14:13:33,305 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 45)
2017-12-03 14:13:33,310 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 45, learning rate is 0.000355706055849.
2017-12-03 14:13:34,953 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 46)
2017-12-03 14:13:34,958 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 46, learning rate is 0.000344510426451.
2017-12-03 14:13:36,584 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 47)
2017-12-03 14:13:36,588 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 47, learning rate is 0.000333667172604.
2017-12-03 14:13:39,294 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 48)
2017-12-03 14:13:39,299 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 48, learning rate is 0.000323165203505.
2017-12-03 14:13:41,979 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 49)
2017-12-03 14:13:41,984 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 49, learning rate is 0.000312993777426.
2017-12-03 14:13:44,797 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 50)
2017-12-03 14:13:44,802 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 50, learning rate is 0.000303142490729.
2017-12-03 14:13:47,100 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 51)
2017-12-03 14:13:47,105 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 51, learning rate is 0.000293601267223.
2017-12-03 14:13:49,790 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 52)
2017-12-03 14:13:49,795 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 52, learning rate is 0.000284360347861.
2017-12-03 14:13:52,623 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 53)
2017-12-03 14:13:52,628 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 53, learning rate is 0.000275410280754.
2017-12-03 14:13:54,608 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 54)
2017-12-03 14:13:54,614 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 54, learning rate is 0.000266741911506.
2017-12-03 14:13:56,152 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 55)
2017-12-03 14:13:56,157 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 55, learning rate is 0.00025834637385.
2017-12-03 14:13:57,771 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 56)
2017-12-03 14:13:57,776 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 56, learning rate is 0.00025021508058.
2017-12-03 14:14:00,811 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 57)
2017-12-03 14:14:00,825 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 57, learning rate is 0.000242339714766.
2017-12-03 14:14:03,514 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 58)
2017-12-03 14:14:03,519 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 58, learning rate is 0.000234712221249.
2017-12-03 14:14:06,041 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 59)
2017-12-03 14:14:06,046 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 59, learning rate is 0.0002273247984.
2017-12-03 14:14:08,406 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 60)
2017-12-03 14:14:08,414 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 60, learning rate is 0.000220169890143.
2017-12-03 14:14:11,278 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 61)
2017-12-03 14:14:11,282 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 61, learning rate is 0.000213240178225.
2017-12-03 14:14:13,884 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 62)
2017-12-03 14:14:13,894 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 62, learning rate is 0.000206528574728.
2017-12-03 14:14:15,909 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 63)
2017-12-03 14:14:15,918 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 63, learning rate is 0.000200028214824.
2017-12-03 14:14:17,556 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 64)
2017-12-03 14:14:17,561 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 64, learning rate is 0.000193732449752.
2017-12-03 14:14:19,292 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 65)
2017-12-03 14:14:19,297 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 65, learning rate is 0.000187634840015.
2017-12-03 14:14:22,268 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 66)
2017-12-03 14:14:22,276 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 66, learning rate is 0.000181729148794.
2017-12-03 14:14:24,951 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 67)
2017-12-03 14:14:24,956 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 67, learning rate is 0.000176009335574.
2017-12-03 14:14:27,538 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 68)
2017-12-03 14:14:27,546 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 68, learning rate is 0.000170469549958.
2017-12-03 14:14:29,843 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 69)
2017-12-03 14:14:29,848 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 69, learning rate is 0.000165104125688.
2017-12-03 14:14:32,608 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 70)
2017-12-03 14:14:32,614 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 70, learning rate is 0.000159907574848.
2017-12-03 14:14:35,294 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 71)
2017-12-03 14:14:35,304 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 71, learning rate is 0.00015.
2017-12-03 14:14:37,305 [steps/nnet3/train_raw_dnn.py:401 - train - INFO ] Doing final combination to produce final.raw
2017-12-03 14:14:37,305 [steps/libs/nnet3/train/frame_level_objf/common.py:481 - combine_models - INFO ] Combining set([37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72]) models.
2017-12-03 14:14:50,215 [steps/nnet3/train_raw_dnn.py:423 - train - INFO ] Cleaning up the experiment directory exp/nnet3/multitask
exp/nnet3/multitask: num-iters=72 nj=1..1 num-params=0.3M combine=-3.65->-3.56
steps/nnet3/train_raw_dnn.py --stage=-5 --cmd=utils/run.pl --trainer.num-epochs 1 --trainer.optimization.num-jobs-initial=1 --trainer.optimization.num-jobs-final=1 --trainer.optimization.initial-effective-lrate=0.0015 --trainer.optimization.final-effective-lrate=0.00015 --trainer.optimization.minibatch-size=256,128 --trainer.samples-per-iter=10000 --trainer.max-param-change=2.0 --trainer.srand=0 --feat.cmvn-opts=--norm-means=false --norm-vars=false --feat-dir data/org/train --egs.dir exp/nnet3/multitask/egs --use-dense-targets false --targets-scp exp/org/tri_ali --cleanup.remove-egs true --use-gpu true --dir=exp/nnet3/multitask
['steps/nnet3/train_raw_dnn.py', '--stage=-5', '--cmd=utils/run.pl', '--trainer.num-epochs', '1', '--trainer.optimization.num-jobs-initial=1', '--trainer.optimization.num-jobs-final=1', '--trainer.optimization.initial-effective-lrate=0.0015', '--trainer.optimization.final-effective-lrate=0.00015', '--trainer.optimization.minibatch-size=256,128', '--trainer.samples-per-iter=10000', '--trainer.max-param-change=2.0', '--trainer.srand=0', '--feat.cmvn-opts=--norm-means=false --norm-vars=false', '--feat-dir', 'data/org/train', '--egs.dir', 'exp/nnet3/multitask/egs', '--use-dense-targets', 'false', '--targets-scp', 'exp/org/tri_ali', '--cleanup.remove-egs', 'true', '--use-gpu', 'true', '--dir=exp/nnet3/multitask']
use_multitask_egs=True
### ============== ###
### END TRAIN NNET ###
### ============== ###
### ========================== ###
### SPLIT & COPY NNET PER LANG ###
### ========================== ###
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/org/tri_ali/final.mdl - exp/nnet3/multitask/org/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/org/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language org.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/org exp/org/nnet3/egs
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/org/tri_ali/final.mdl - exp/nnet3/multitask/org/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-1 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/org/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language org.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/org exp/org/nnet3/egs
### ============== ###
### BEGIN DECODING ###
### ============== ###
### decoding with 4 jobs, unigram LM ###
steps/nnet3/decode.sh --nj 8 --cmd utils/run.pl --max-active 600 --min-active 200 exp_org/triphones/graph data_org/test exp/nnet3/multitask/decode exp/nnet3/multitask/org/final_adj.mdl SPOKEN_NOISE SIL
steps/nnet3/decode.sh: feature type is raw
steps/nnet3/decode.sh: line 169: steps/diagnostic/analyze_lats.sh: No such file or directory
Decoding done.

#### BEGIN CALCULATE WER ####
###==============###
### END DECODING ###
###==============###

###### BEGIN LANGUAGE INFO ######
lang= org
num_targets= 770
data_dir= data/org/train
ali_dir= exp/org/tri_ali
egs_dir= exp/org/nnet3/egs
###### END LANGUAGE INFO ######


###### BEGIN LANGUAGE INFO ######
lang= org2
num_targets= 722
data_dir= data/org2/train
ali_dir= exp/org2/tri_ali
egs_dir= exp/org2/nnet3/egs
###### END LANGUAGE INFO ######

### ============================ ###
### CREATE CONFIG FILES FOR NNET ###
### ============================ ###
feat-to-dim scp:data/org/train/feats.scp - 
nnet3-init exp/nnet3/multitask/configs//ref.config exp/nnet3/multitask/configs//ref.raw 
LOG (nnet3-init[5.3.83~1-9204]:main():nnet3-init.cc:80) Initialized raw neural net and wrote it to exp/nnet3/multitask/configs//ref.raw
nnet3-info "nnet3-copy --edits='rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - |" 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/configs//ref.raw to -
nnet3-init exp/nnet3/multitask/configs//ref.config exp/nnet3/multitask/configs//ref.raw 
LOG (nnet3-init[5.3.83~1-9204]:main():nnet3-init.cc:80) Initialized raw neural net and wrote it to exp/nnet3/multitask/configs//ref.raw
nnet3-info "nnet3-copy --edits='rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - |" 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/configs//ref.raw to -
steps/nnet3/xconfig_to_configs.py --xconfig-file exp/nnet3/multitask/configs/network.xconfig --config-dir exp/nnet3/multitask/configs/ --nnet-edits=rename-node old-name=output-0 new-name=output
### ================== ###
### MAKE NNET3 EGS DIR ###
### ================== ###
### MAKE SEPARATE EGS DIR PER LANGUAGE ###
local/nnet3/prepare_multilingual_egs.sh --cmd utils/run.pl --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 2 data/org/train data/org2/train exp/org/tri_ali exp/org2/tri_ali exp/org/nnet3/egs exp/org2/nnet3/egs
local/nnet3/prepare_multilingual_egs.sh --cmd utils/run.pl --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 2 data/org/train data/org2/train exp/org/tri_ali exp/org2/tri_ali exp/org/nnet3/egs exp/org2/nnet3/egs
2
data/org/train data/org2/train exp/org/tri_ali exp/org2/tri_ali exp/org/nnet3/egs exp/org2/nnet3/egs
local/nnet3/prepare_multilingual_egs.sh: Generate separate egs directory per language for multilingual training.
online_ivector_dir =
local/nnet3/prepare_multilingual_egs.sh: Generate egs for 
local/nnet3/prepare_multilingual_egs.sh: calling get_egs.sh
steps/nnet3/get_egs.sh --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 --samples-per-iter 400000 --stage 0 --cmd utils/run.pl --generate-egs-scp true data/org/train exp/org/tri_ali exp/org/nnet3/egs
steps/nnet3/get_egs.sh: feature type is raw
steps/nnet3/get_egs.sh: working out number of frames of training data
feat-to-len scp:data/org/train/feats.scp ark,t:- 
steps/nnet3/get_egs.sh: working out feature dim
*** steps/nnet3/get_egs.sh: warning: the --frames-per-eg is too large to generate one archive with
*** as many as --samples-per-iter egs in it.  Consider reducing --frames-per-eg.
steps/nnet3/get_egs.sh: creating 1 archives, each with 60142 egs, with
steps/nnet3/get_egs.sh:   8 labels per example, and (left,right) context = (16,12)
steps/nnet3/get_egs.sh: copying data alignments
copy-int-vector ark:- ark,scp:exp/org/nnet3/egs/ali.ark,exp/org/nnet3/egs/ali.scp 
LOG (copy-int-vector[5.3.83~1-9204]:main():copy-int-vector.cc:83) Copied 546 vectors of int32.
steps/nnet3/get_egs.sh: Getting validation and training subset examples.
steps/nnet3/get_egs.sh: ... extracting validation and training-subset alignments.
... Getting subsets of validation examples for diagnostics and combination.
nnet3-copy-egs ark:- ark,scp:exp/org/nnet3/egs/combine.egs,exp/org/nnet3/egs/combine.scp 
LOG (nnet3-copy-egs[5.3.83~1-9204]:main():nnet3-copy-egs.cc:436) Read 7625 neural-network training examples, wrote 7625, 0 examples had errors.
rm: cannot remove 'exp/org/nnet3/egs/train_combine.scp': No such file or directory
rm: cannot remove 'exp/org/nnet3/egs/valid_combine.scp': No such file or directory
steps/nnet3/get_egs.sh: Generating training examples on disk
steps/nnet3/get_egs.sh: recombining and shuffling order of archives on disk
steps/nnet3/get_egs.sh: removing temporary archives
steps/nnet3/get_egs.sh: removing temporary alignments and transforms
steps/nnet3/get_egs.sh: Finished preparing training examples
online_ivector_dir =
local/nnet3/prepare_multilingual_egs.sh: Generate egs for 
local/nnet3/prepare_multilingual_egs.sh: calling get_egs.sh
steps/nnet3/get_egs.sh --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 --samples-per-iter 400000 --stage 0 --cmd utils/run.pl --generate-egs-scp true data/org2/train exp/org2/tri_ali exp/org2/nnet3/egs
steps/nnet3/get_egs.sh: feature type is raw
steps/nnet3/get_egs.sh: working out number of frames of training data
feat-to-len scp:data/org2/train/feats.scp ark,t:- 
steps/nnet3/get_egs.sh: working out feature dim
*** steps/nnet3/get_egs.sh: warning: the --frames-per-eg is too large to generate one archive with
*** as many as --samples-per-iter egs in it.  Consider reducing --frames-per-eg.
steps/nnet3/get_egs.sh: creating 1 archives, each with 60142 egs, with
steps/nnet3/get_egs.sh:   8 labels per example, and (left,right) context = (16,12)
steps/nnet3/get_egs.sh: copying data alignments
copy-int-vector ark:- ark,scp:exp/org2/nnet3/egs/ali.ark,exp/org2/nnet3/egs/ali.scp 
LOG (copy-int-vector[5.3.83~1-9204]:main():copy-int-vector.cc:83) Copied 547 vectors of int32.
steps/nnet3/get_egs.sh: Getting validation and training subset examples.
steps/nnet3/get_egs.sh: ... extracting validation and training-subset alignments.
... Getting subsets of validation examples for diagnostics and combination.
nnet3-copy-egs ark:- ark,scp:exp/org2/nnet3/egs/combine.egs,exp/org2/nnet3/egs/combine.scp 
LOG (nnet3-copy-egs[5.3.83~1-9204]:main():nnet3-copy-egs.cc:436) Read 7625 neural-network training examples, wrote 7625, 0 examples had errors.
rm: cannot remove 'exp/org2/nnet3/egs/train_combine.scp': No such file or directory
rm: cannot remove 'exp/org2/nnet3/egs/valid_combine.scp': No such file or directory
steps/nnet3/get_egs.sh: Generating training examples on disk
steps/nnet3/get_egs.sh: recombining and shuffling order of archives on disk
steps/nnet3/get_egs.sh: removing temporary archives
steps/nnet3/get_egs.sh: removing temporary alignments and transforms
steps/nnet3/get_egs.sh: Finished preparing training examples
### MAKE ONE BIG MULTILING EGS DIR ###
steps/nnet3/multilingual/combine_egs.sh --cmd utils/run.pl --samples-per-iter 10000 --lang2weight 0.5,0.5 2 exp/org/nnet3/egs exp/org2/nnet3/egs exp/nnet3/multitask/egs
steps/nnet3/multilingual/combine_egs.sh: allocating multilingual examples for training.
steps/nnet3/multilingual/combine_egs.sh: combine combine.scp examples from all langs in exp/nnet3/multitask/egs/combine.scp.
steps/nnet3/multilingual/combine_egs.sh: combine train_diagnostic.scp examples from all langs in exp/nnet3/multitask/egs/train_diagnostic.scp.
steps/nnet3/multilingual/combine_egs.sh: combine valid_diagnostic.scp examples from all langs in exp/nnet3/multitask/egs/valid_diagnostic.scp.
steps/nnet3/multilingual/combine_egs.sh: Finished preparing multilingual training example.
### ================ ###
### BEGIN TRAIN NNET ###
### ================ ###
2017-12-03 14:24:47,017 [steps/nnet3/train_raw_dnn.py:34 - <module> - INFO ] Starting raw DNN trainer (train_raw_dnn.py)
2017-12-03 14:24:47,023 [steps/nnet3/train_raw_dnn.py:181 - train - INFO ] Arguments for the experiment
{'backstitch_training_interval': 1,
 'backstitch_training_scale': 0.0,
 'cleanup': True,
 'cmvn_opts': '--norm-means=false --norm-vars=false',
 'combine_sum_to_one_penalty': 0.0,
 'command': 'utils/run.pl',
 'compute_average_posteriors': False,
 'dir': 'exp/nnet3/multitask',
 'dropout_schedule': None,
 'egs_command': 'queue.pl',
 'egs_dir': 'exp/nnet3/multitask/egs',
 'egs_opts': None,
 'egs_stage': 0,
 'email': None,
 'exit_stage': None,
 'feat_dir': 'data/org/train',
 'final_combination': True,
 'final_effective_lrate': 0.00015,
 'frames_per_eg': 8,
 'image_augmentation_opts': None,
 'initial_effective_lrate': 0.0015,
 'max_lda_jobs': 10,
 'max_models_combine': 20,
 'max_param_change': 2.0,
 'minibatch_size': '256,128',
 'momentum': 0.0,
 'nj': 4,
 'num_epochs': 1.0,
 'num_jobs_compute_prior': 10,
 'num_jobs_final': 1,
 'num_jobs_initial': 1,
 'online_ivector_dir': None,
 'preserve_model_interval': 100,
 'presoftmax_prior_scale_power': -0.25,
 'prior_subset_size': 20000,
 'proportional_shrink': 0.0,
 'rand_prune': 4.0,
 'remove_egs': True,
 'reporting_interval': 0.1,
 'samples_per_iter': 10000,
 'shuffle_buffer_size': 5000,
 'srand': 0,
 'stage': -5,
 'targets_scp': 'exp/org/tri_ali',
 'transform_dir': None,
 'use_dense_targets': False,
 'use_gpu': True}
2017-12-03 14:24:47,028 [steps/libs/nnet3/train/common.py:410 - verify_egs_dir - WARNING ] The ivector ids are not used. It's your responsibility to make sure the ivector extractor has been used consistently
2017-12-03 14:24:47,028 [steps/nnet3/train_raw_dnn.py:294 - train - INFO ] Preparing the initial network.
2017-12-03 14:24:47,094 [steps/nnet3/train_raw_dnn.py:328 - train - INFO ] Training will run for 1.0 epochs = 72 iterations
2017-12-03 14:24:47,094 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 0)
2017-12-03 14:24:47,097 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 0, learning rate is 0.0015.
2017-12-03 14:24:50,314 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 1)
2017-12-03 14:24:50,319 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 1, learning rate is 0.00145278842229.
2017-12-03 14:24:52,958 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 2)
2017-12-03 14:24:52,963 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 2, learning rate is 0.00140706279996.
2017-12-03 14:24:55,990 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 3)
2017-12-03 14:24:55,995 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 3, learning rate is 0.00136277636348.
2017-12-03 14:24:58,650 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 4)
2017-12-03 14:24:58,655 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 4, learning rate is 0.00131988381535.
2017-12-03 14:25:01,238 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 5)
2017-12-03 14:25:01,244 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 5, learning rate is 0.00127834128381.
2017-12-03 14:25:04,135 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 6)
2017-12-03 14:25:04,142 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 6, learning rate is 0.0012381062779.
2017-12-03 14:25:07,048 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 7)
2017-12-03 14:25:07,058 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 7, learning rate is 0.00119913764407.
2017-12-03 14:25:10,010 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 8)
2017-12-03 14:25:10,017 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 8, learning rate is 0.00116139552402.
2017-12-03 14:25:12,794 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 9)
2017-12-03 14:25:12,801 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 9, learning rate is 0.001124841314.
2017-12-03 14:25:15,809 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 10)
2017-12-03 14:25:15,814 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 10, learning rate is 0.00108943762526.
2017-12-03 14:25:18,479 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 11)
2017-12-03 14:25:18,485 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 11, learning rate is 0.00105514824586.
2017-12-03 14:25:21,509 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 12)
2017-12-03 14:25:21,518 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 12, learning rate is 0.00102193810359.
2017-12-03 14:25:24,158 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 13)
2017-12-03 14:25:24,164 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 13, learning rate is 0.000989773230125.
2017-12-03 14:25:26,793 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 14)
2017-12-03 14:25:26,798 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 14, learning rate is 0.000958620726279.
2017-12-03 14:25:29,380 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 15)
2017-12-03 14:25:29,385 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 15, learning rate is 0.000928448728337.
2017-12-03 14:25:32,148 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 16)
2017-12-03 14:25:32,154 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 16, learning rate is 0.000899226375478.
2017-12-03 14:25:34,869 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 17)
2017-12-03 14:25:34,874 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 17, learning rate is 0.000870923778208.
2017-12-03 14:25:37,620 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 18)
2017-12-03 14:25:37,625 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 18, learning rate is 0.000843511987786.
2017-12-03 14:25:40,351 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 19)
2017-12-03 14:25:40,358 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 19, learning rate is 0.000816962966612.
2017-12-03 14:25:43,071 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 20)
2017-12-03 14:25:43,076 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 20, learning rate is 0.000791249559555.
2017-12-03 14:25:46,150 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 21)
2017-12-03 14:25:46,155 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 21, learning rate is 0.000766345466176.
2017-12-03 14:25:48,941 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 22)
2017-12-03 14:25:48,948 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 22, learning rate is 0.000742225213823.
2017-12-03 14:25:51,697 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 23)
2017-12-03 14:25:51,705 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 23, learning rate is 0.000718864131583.
2017-12-03 14:25:54,657 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 24)
2017-12-03 14:25:54,663 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 24, learning rate is 0.000696238325042.
2017-12-03 14:25:57,448 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 25)
2017-12-03 14:25:57,453 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 25, learning rate is 0.00067432465185.
2017-12-03 14:26:00,315 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 26)
2017-12-03 14:26:00,321 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 26, learning rate is 0.000653100698048.
2017-12-03 14:26:02,977 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 27)
2017-12-03 14:26:02,982 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 27, learning rate is 0.000632544755143.
2017-12-03 14:26:06,025 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 28)
2017-12-03 14:26:06,031 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 28, learning rate is 0.000612635797901.
2017-12-03 14:26:08,862 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 29)
2017-12-03 14:26:08,875 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 29, learning rate is 0.000593353462847.
2017-12-03 14:26:11,663 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 30)
2017-12-03 14:26:11,673 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 30, learning rate is 0.000574678027434.
2017-12-03 14:26:14,364 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 31)
2017-12-03 14:26:14,369 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 31, learning rate is 0.000556590389867.
2017-12-03 14:26:16,927 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 32)
2017-12-03 14:26:16,932 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 32, learning rate is 0.000539072049571.
2017-12-03 14:26:19,464 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 33)
2017-12-03 14:26:19,469 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 33, learning rate is 0.000522105088264.
2017-12-03 14:26:22,186 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 34)
2017-12-03 14:26:22,193 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 34, learning rate is 0.000505672151633.
2017-12-03 14:26:24,853 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 35)
2017-12-03 14:26:24,859 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 35, learning rate is 0.000489756431578.
2017-12-03 14:26:27,532 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 36)
2017-12-03 14:26:27,537 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 36, learning rate is 0.000474341649025.
2017-12-03 14:26:30,334 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 37)
2017-12-03 14:26:30,339 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 37, learning rate is 0.000459412037276.
2017-12-03 14:26:32,972 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 38)
2017-12-03 14:26:32,977 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 38, learning rate is 0.000444952325877.
2017-12-03 14:26:35,607 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 39)
2017-12-03 14:26:35,616 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 39, learning rate is 0.000430947725003.
2017-12-03 14:26:38,110 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 40)
2017-12-03 14:26:38,115 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 40, learning rate is 0.000417383910331.
2017-12-03 14:26:40,919 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 41)
2017-12-03 14:26:40,926 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 41, learning rate is 0.000404247008386.
2017-12-03 14:26:43,699 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 42)
2017-12-03 14:26:43,704 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 42, learning rate is 0.000391523582352.
2017-12-03 14:26:46,304 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 43)
2017-12-03 14:26:46,309 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 43, learning rate is 0.00037920061833.
2017-12-03 14:26:49,004 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 44)
2017-12-03 14:26:49,009 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 44, learning rate is 0.000367265512023.
2017-12-03 14:26:51,570 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 45)
2017-12-03 14:26:51,575 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 45, learning rate is 0.000355706055849.
2017-12-03 14:26:54,241 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 46)
2017-12-03 14:26:54,247 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 46, learning rate is 0.000344510426451.
2017-12-03 14:26:56,914 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 47)
2017-12-03 14:26:56,919 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 47, learning rate is 0.000333667172604.
2017-12-03 14:26:59,583 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 48)
2017-12-03 14:26:59,588 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 48, learning rate is 0.000323165203505.
2017-12-03 14:27:02,369 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 49)
2017-12-03 14:27:02,374 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 49, learning rate is 0.000312993777426.
2017-12-03 14:27:05,045 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 50)
2017-12-03 14:27:05,051 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 50, learning rate is 0.000303142490729.
2017-12-03 14:27:07,861 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 51)
2017-12-03 14:27:07,870 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 51, learning rate is 0.000293601267223.
2017-12-03 14:27:10,705 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 52)
2017-12-03 14:27:10,710 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 52, learning rate is 0.000284360347861.
2017-12-03 14:27:13,496 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 53)
2017-12-03 14:27:13,501 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 53, learning rate is 0.000275410280754.
2017-12-03 14:27:16,362 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 54)
2017-12-03 14:27:16,369 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 54, learning rate is 0.000266741911506.
2017-12-03 14:27:19,371 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 55)
2017-12-03 14:27:19,378 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 55, learning rate is 0.00025834637385.
2017-12-03 14:27:22,222 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 56)
2017-12-03 14:27:22,228 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 56, learning rate is 0.00025021508058.
2017-12-03 14:27:25,087 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 57)
2017-12-03 14:27:25,092 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 57, learning rate is 0.000242339714766.
2017-12-03 14:27:27,838 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 58)
2017-12-03 14:27:27,847 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 58, learning rate is 0.000234712221249.
2017-12-03 14:27:30,551 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 59)
2017-12-03 14:27:30,558 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 59, learning rate is 0.0002273247984.
2017-12-03 14:27:33,294 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 60)
2017-12-03 14:27:33,299 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 60, learning rate is 0.000220169890143.
2017-12-03 14:27:36,286 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 61)
2017-12-03 14:27:36,291 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 61, learning rate is 0.000213240178225.
2017-12-03 14:27:38,913 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 62)
2017-12-03 14:27:38,918 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 62, learning rate is 0.000206528574728.
2017-12-03 14:27:41,450 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 63)
2017-12-03 14:27:41,456 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 63, learning rate is 0.000200028214824.
2017-12-03 14:27:44,470 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 64)
2017-12-03 14:27:44,474 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 64, learning rate is 0.000193732449752.
2017-12-03 14:27:47,135 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 65)
2017-12-03 14:27:47,142 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 65, learning rate is 0.000187634840015.
2017-12-03 14:27:49,850 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 66)
2017-12-03 14:27:49,855 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 66, learning rate is 0.000181729148794.
2017-12-03 14:27:52,494 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 67)
2017-12-03 14:27:52,499 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 67, learning rate is 0.000176009335574.
2017-12-03 14:27:55,031 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 68)
2017-12-03 14:27:55,037 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 68, learning rate is 0.000170469549958.
2017-12-03 14:27:57,691 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 69)
2017-12-03 14:27:57,695 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 69, learning rate is 0.000165104125688.
2017-12-03 14:28:00,650 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 70)
2017-12-03 14:28:00,658 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 70, learning rate is 0.000159907574848.
2017-12-03 14:28:03,297 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 71)
2017-12-03 14:28:03,302 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 71, learning rate is 0.00015.
2017-12-03 14:28:05,878 [steps/nnet3/train_raw_dnn.py:401 - train - INFO ] Doing final combination to produce final.raw
2017-12-03 14:28:05,879 [steps/libs/nnet3/train/frame_level_objf/common.py:481 - combine_models - INFO ] Combining set([37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72]) models.
2017-12-03 14:28:18,963 [steps/nnet3/train_raw_dnn.py:423 - train - INFO ] Cleaning up the experiment directory exp/nnet3/multitask
exp/nnet3/multitask: num-iters=72 nj=1..1 num-params=0.2M combine=-3.25->-3.16
steps/nnet3/train_raw_dnn.py --stage=-5 --cmd=utils/run.pl --trainer.num-epochs 1 --trainer.optimization.num-jobs-initial=1 --trainer.optimization.num-jobs-final=1 --trainer.optimization.initial-effective-lrate=0.0015 --trainer.optimization.final-effective-lrate=0.00015 --trainer.optimization.minibatch-size=256,128 --trainer.samples-per-iter=10000 --trainer.max-param-change=2.0 --trainer.srand=0 --feat.cmvn-opts=--norm-means=false --norm-vars=false --feat-dir data/org/train --egs.dir exp/nnet3/multitask/egs --use-dense-targets false --targets-scp exp/org/tri_ali --cleanup.remove-egs true --use-gpu true --dir=exp/nnet3/multitask
['steps/nnet3/train_raw_dnn.py', '--stage=-5', '--cmd=utils/run.pl', '--trainer.num-epochs', '1', '--trainer.optimization.num-jobs-initial=1', '--trainer.optimization.num-jobs-final=1', '--trainer.optimization.initial-effective-lrate=0.0015', '--trainer.optimization.final-effective-lrate=0.00015', '--trainer.optimization.minibatch-size=256,128', '--trainer.samples-per-iter=10000', '--trainer.max-param-change=2.0', '--trainer.srand=0', '--feat.cmvn-opts=--norm-means=false --norm-vars=false', '--feat-dir', 'data/org/train', '--egs.dir', 'exp/nnet3/multitask/egs', '--use-dense-targets', 'false', '--targets-scp', 'exp/org/tri_ali', '--cleanup.remove-egs', 'true', '--use-gpu', 'true', '--dir=exp/nnet3/multitask']
use_multitask_egs=True
### ============== ###
### END TRAIN NNET ###
### ============== ###
### ========================== ###
### SPLIT & COPY NNET PER LANG ###
### ========================== ###
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/org/tri_ali/final.mdl - exp/nnet3/multitask/org/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/org/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language org.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/org exp/org/nnet3/egs
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/org2/tri_ali/final.mdl - exp/nnet3/multitask/org2/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-1 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/org2/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language org2.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/org2 exp/org2/nnet3/egs
### ============== ###
### BEGIN DECODING ###
### ============== ###
### decoding with 4 jobs, unigram LM ###
steps/nnet3/decode.sh --nj 8 --cmd utils/run.pl --max-active 600 --min-active 200 exp_org/triphones/graph data_org/test exp/nnet3/multitask/decode exp/nnet3/multitask/org/final_adj.mdl SPOKEN_NOISE SIL
steps/nnet3/decode.sh: feature type is raw
steps/nnet3/decode.sh: line 169: steps/diagnostic/analyze_lats.sh: No such file or directory
Decoding done.

#### BEGIN CALCULATE WER ####
###==============###
### END DECODING ###
###==============###

###### BEGIN LANGUAGE INFO ######
lang= org
num_targets= 770
data_dir= data/org/train
ali_dir= exp/org/tri_ali
egs_dir= exp/org/nnet3/egs
###### END LANGUAGE INFO ######


###### BEGIN LANGUAGE INFO ######
lang= no_voice
num_targets= 714
data_dir= data/no_voice/train
ali_dir= exp/no_voice/tri_ali
egs_dir= exp/no_voice/nnet3/egs
###### END LANGUAGE INFO ######

### ============================ ###
### CREATE CONFIG FILES FOR NNET ###
### ============================ ###
feat-to-dim scp:data/org/train/feats.scp - 
nnet3-init exp/nnet3/multitask/configs//ref.config exp/nnet3/multitask/configs//ref.raw 
LOG (nnet3-init[5.3.83~1-9204]:main():nnet3-init.cc:80) Initialized raw neural net and wrote it to exp/nnet3/multitask/configs//ref.raw
nnet3-info "nnet3-copy --edits='rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - |" 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/configs//ref.raw to -
nnet3-init exp/nnet3/multitask/configs//ref.config exp/nnet3/multitask/configs//ref.raw 
LOG (nnet3-init[5.3.83~1-9204]:main():nnet3-init.cc:80) Initialized raw neural net and wrote it to exp/nnet3/multitask/configs//ref.raw
nnet3-info "nnet3-copy --edits='rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - |" 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/configs//ref.raw to -
steps/nnet3/xconfig_to_configs.py --xconfig-file exp/nnet3/multitask/configs/network.xconfig --config-dir exp/nnet3/multitask/configs/ --nnet-edits=rename-node old-name=output-0 new-name=output
### ================== ###
### MAKE NNET3 EGS DIR ###
### ================== ###
### MAKE SEPARATE EGS DIR PER LANGUAGE ###
local/nnet3/prepare_multilingual_egs.sh --cmd utils/run.pl --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 2 data/org/train data/no_voice/train exp/org/tri_ali exp/no_voice/tri_ali exp/org/nnet3/egs exp/no_voice/nnet3/egs
local/nnet3/prepare_multilingual_egs.sh --cmd utils/run.pl --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 2 data/org/train data/no_voice/train exp/org/tri_ali exp/no_voice/tri_ali exp/org/nnet3/egs exp/no_voice/nnet3/egs
2
data/org/train data/no_voice/train exp/org/tri_ali exp/no_voice/tri_ali exp/org/nnet3/egs exp/no_voice/nnet3/egs
local/nnet3/prepare_multilingual_egs.sh: Generate separate egs directory per language for multilingual training.
online_ivector_dir =
local/nnet3/prepare_multilingual_egs.sh: Generate egs for 
local/nnet3/prepare_multilingual_egs.sh: calling get_egs.sh
steps/nnet3/get_egs.sh --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 --samples-per-iter 400000 --stage 0 --cmd utils/run.pl --generate-egs-scp true data/org/train exp/org/tri_ali exp/org/nnet3/egs
steps/nnet3/get_egs.sh: feature type is raw
steps/nnet3/get_egs.sh: working out number of frames of training data
feat-to-len scp:data/org/train/feats.scp ark,t:- 
steps/nnet3/get_egs.sh: working out feature dim
*** steps/nnet3/get_egs.sh: warning: the --frames-per-eg is too large to generate one archive with
*** as many as --samples-per-iter egs in it.  Consider reducing --frames-per-eg.
steps/nnet3/get_egs.sh: creating 1 archives, each with 60142 egs, with
steps/nnet3/get_egs.sh:   8 labels per example, and (left,right) context = (16,12)
steps/nnet3/get_egs.sh: copying data alignments
copy-int-vector ark:- ark,scp:exp/org/nnet3/egs/ali.ark,exp/org/nnet3/egs/ali.scp 
LOG (copy-int-vector[5.3.83~1-9204]:main():copy-int-vector.cc:83) Copied 546 vectors of int32.
steps/nnet3/get_egs.sh: Getting validation and training subset examples.
steps/nnet3/get_egs.sh: ... extracting validation and training-subset alignments.
... Getting subsets of validation examples for diagnostics and combination.
nnet3-copy-egs ark:- ark,scp:exp/org/nnet3/egs/combine.egs,exp/org/nnet3/egs/combine.scp 
LOG (nnet3-copy-egs[5.3.83~1-9204]:main():nnet3-copy-egs.cc:436) Read 7625 neural-network training examples, wrote 7625, 0 examples had errors.
rm: cannot remove 'exp/org/nnet3/egs/train_combine.scp': No such file or directory
rm: cannot remove 'exp/org/nnet3/egs/valid_combine.scp': No such file or directory
steps/nnet3/get_egs.sh: Generating training examples on disk
steps/nnet3/get_egs.sh: recombining and shuffling order of archives on disk
steps/nnet3/get_egs.sh: removing temporary archives
steps/nnet3/get_egs.sh: removing temporary alignments and transforms
steps/nnet3/get_egs.sh: Finished preparing training examples
online_ivector_dir =
local/nnet3/prepare_multilingual_egs.sh: Generate egs for 
local/nnet3/prepare_multilingual_egs.sh: calling get_egs.sh
steps/nnet3/get_egs.sh --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 --samples-per-iter 400000 --stage 0 --cmd utils/run.pl --generate-egs-scp true data/no_voice/train exp/no_voice/tri_ali exp/no_voice/nnet3/egs
steps/nnet3/get_egs.sh: feature type is raw
steps/nnet3/get_egs.sh: working out number of frames of training data
feat-to-len scp:data/no_voice/train/feats.scp ark,t:- 
steps/nnet3/get_egs.sh: working out feature dim
*** steps/nnet3/get_egs.sh: warning: the --frames-per-eg is too large to generate one archive with
*** as many as --samples-per-iter egs in it.  Consider reducing --frames-per-eg.
steps/nnet3/get_egs.sh: creating 1 archives, each with 60142 egs, with
steps/nnet3/get_egs.sh:   8 labels per example, and (left,right) context = (16,12)
steps/nnet3/get_egs.sh: copying data alignments
copy-int-vector ark:- ark,scp:exp/no_voice/nnet3/egs/ali.ark,exp/no_voice/nnet3/egs/ali.scp 
LOG (copy-int-vector[5.3.83~1-9204]:main():copy-int-vector.cc:83) Copied 548 vectors of int32.
steps/nnet3/get_egs.sh: Getting validation and training subset examples.
steps/nnet3/get_egs.sh: ... extracting validation and training-subset alignments.
... Getting subsets of validation examples for diagnostics and combination.
nnet3-copy-egs ark:- ark,scp:exp/no_voice/nnet3/egs/combine.egs,exp/no_voice/nnet3/egs/combine.scp 
LOG (nnet3-copy-egs[5.3.83~1-9204]:main():nnet3-copy-egs.cc:436) Read 7625 neural-network training examples, wrote 7625, 0 examples had errors.
rm: cannot remove 'exp/no_voice/nnet3/egs/train_combine.scp': No such file or directory
rm: cannot remove 'exp/no_voice/nnet3/egs/valid_combine.scp': No such file or directory
steps/nnet3/get_egs.sh: Generating training examples on disk
steps/nnet3/get_egs.sh: recombining and shuffling order of archives on disk
steps/nnet3/get_egs.sh: removing temporary archives
steps/nnet3/get_egs.sh: removing temporary alignments and transforms
steps/nnet3/get_egs.sh: Finished preparing training examples
### MAKE ONE BIG MULTILING EGS DIR ###
steps/nnet3/multilingual/combine_egs.sh --cmd utils/run.pl --samples-per-iter 10000 --lang2weight 0.5,0.5 2 exp/org/nnet3/egs exp/no_voice/nnet3/egs exp/nnet3/multitask/egs
steps/nnet3/multilingual/combine_egs.sh: allocating multilingual examples for training.
steps/nnet3/multilingual/combine_egs.sh: combine combine.scp examples from all langs in exp/nnet3/multitask/egs/combine.scp.
steps/nnet3/multilingual/combine_egs.sh: combine train_diagnostic.scp examples from all langs in exp/nnet3/multitask/egs/train_diagnostic.scp.
steps/nnet3/multilingual/combine_egs.sh: combine valid_diagnostic.scp examples from all langs in exp/nnet3/multitask/egs/valid_diagnostic.scp.
steps/nnet3/multilingual/combine_egs.sh: Finished preparing multilingual training example.
### ================ ###
### BEGIN TRAIN NNET ###
### ================ ###
2017-12-03 14:34:34,503 [steps/nnet3/train_raw_dnn.py:34 - <module> - INFO ] Starting raw DNN trainer (train_raw_dnn.py)
2017-12-03 14:34:34,509 [steps/nnet3/train_raw_dnn.py:181 - train - INFO ] Arguments for the experiment
{'backstitch_training_interval': 1,
 'backstitch_training_scale': 0.0,
 'cleanup': True,
 'cmvn_opts': '--norm-means=false --norm-vars=false',
 'combine_sum_to_one_penalty': 0.0,
 'command': 'utils/run.pl',
 'compute_average_posteriors': False,
 'dir': 'exp/nnet3/multitask',
 'dropout_schedule': None,
 'egs_command': 'queue.pl',
 'egs_dir': 'exp/nnet3/multitask/egs',
 'egs_opts': None,
 'egs_stage': 0,
 'email': None,
 'exit_stage': None,
 'feat_dir': 'data/org/train',
 'final_combination': True,
 'final_effective_lrate': 0.00015,
 'frames_per_eg': 8,
 'image_augmentation_opts': None,
 'initial_effective_lrate': 0.0015,
 'max_lda_jobs': 10,
 'max_models_combine': 20,
 'max_param_change': 2.0,
 'minibatch_size': '256,128',
 'momentum': 0.0,
 'nj': 4,
 'num_epochs': 1.0,
 'num_jobs_compute_prior': 10,
 'num_jobs_final': 1,
 'num_jobs_initial': 1,
 'online_ivector_dir': None,
 'preserve_model_interval': 100,
 'presoftmax_prior_scale_power': -0.25,
 'prior_subset_size': 20000,
 'proportional_shrink': 0.0,
 'rand_prune': 4.0,
 'remove_egs': True,
 'reporting_interval': 0.1,
 'samples_per_iter': 10000,
 'shuffle_buffer_size': 5000,
 'srand': 0,
 'stage': -5,
 'targets_scp': 'exp/org/tri_ali',
 'transform_dir': None,
 'use_dense_targets': False,
 'use_gpu': True}
2017-12-03 14:34:34,513 [steps/libs/nnet3/train/common.py:410 - verify_egs_dir - WARNING ] The ivector ids are not used. It's your responsibility to make sure the ivector extractor has been used consistently
2017-12-03 14:34:34,513 [steps/nnet3/train_raw_dnn.py:294 - train - INFO ] Preparing the initial network.
2017-12-03 14:34:34,578 [steps/nnet3/train_raw_dnn.py:328 - train - INFO ] Training will run for 1.0 epochs = 72 iterations
2017-12-03 14:34:34,578 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 0)
2017-12-03 14:34:34,581 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 0, learning rate is 0.0015.
2017-12-03 14:34:37,397 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 1)
2017-12-03 14:34:37,402 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 1, learning rate is 0.00145278842229.
2017-12-03 14:34:40,132 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 2)
2017-12-03 14:34:40,137 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 2, learning rate is 0.00140706279996.
2017-12-03 14:34:43,063 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 3)
2017-12-03 14:34:43,068 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 3, learning rate is 0.00136277636348.
2017-12-03 14:34:45,659 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 4)
2017-12-03 14:34:45,664 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 4, learning rate is 0.00131988381535.
2017-12-03 14:34:48,170 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 5)
2017-12-03 14:34:48,175 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 5, learning rate is 0.00127834128381.
2017-12-03 14:34:51,044 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 6)
2017-12-03 14:34:51,049 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 6, learning rate is 0.0012381062779.
2017-12-03 14:34:53,910 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 7)
2017-12-03 14:34:53,915 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 7, learning rate is 0.00119913764407.
2017-12-03 14:34:56,744 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 8)
2017-12-03 14:34:56,749 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 8, learning rate is 0.00116139552402.
2017-12-03 14:34:59,434 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 9)
2017-12-03 14:34:59,442 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 9, learning rate is 0.001124841314.
2017-12-03 14:35:02,233 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 10)
2017-12-03 14:35:02,239 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 10, learning rate is 0.00108943762526.
2017-12-03 14:35:04,983 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 11)
2017-12-03 14:35:04,989 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 11, learning rate is 0.00105514824586.
2017-12-03 14:35:07,871 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 12)
2017-12-03 14:35:07,876 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 12, learning rate is 0.00102193810359.
2017-12-03 14:35:10,844 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 13)
2017-12-03 14:35:10,850 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 13, learning rate is 0.000989773230125.
2017-12-03 14:35:13,662 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 14)
2017-12-03 14:35:13,667 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 14, learning rate is 0.000958620726279.
2017-12-03 14:35:16,555 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 15)
2017-12-03 14:35:16,560 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 15, learning rate is 0.000928448728337.
2017-12-03 14:35:19,360 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 16)
2017-12-03 14:35:19,365 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 16, learning rate is 0.000899226375478.
2017-12-03 14:35:22,182 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 17)
2017-12-03 14:35:22,188 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 17, learning rate is 0.000870923778208.
2017-12-03 14:35:24,707 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 18)
2017-12-03 14:35:24,712 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 18, learning rate is 0.000843511987786.
2017-12-03 14:35:27,384 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 19)
2017-12-03 14:35:27,389 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 19, learning rate is 0.000816962966612.
2017-12-03 14:35:30,275 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 20)
2017-12-03 14:35:30,281 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 20, learning rate is 0.000791249559555.
2017-12-03 14:35:33,258 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 21)
2017-12-03 14:35:33,263 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 21, learning rate is 0.000766345466176.
2017-12-03 14:35:35,904 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 22)
2017-12-03 14:35:35,909 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 22, learning rate is 0.000742225213823.
2017-12-03 14:35:38,470 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 23)
2017-12-03 14:35:38,475 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 23, learning rate is 0.000718864131583.
2017-12-03 14:35:41,092 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 24)
2017-12-03 14:35:41,097 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 24, learning rate is 0.000696238325042.
2017-12-03 14:35:43,735 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 25)
2017-12-03 14:35:43,740 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 25, learning rate is 0.00067432465185.
2017-12-03 14:35:46,538 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 26)
2017-12-03 14:35:46,543 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 26, learning rate is 0.000653100698048.
2017-12-03 14:35:49,135 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 27)
2017-12-03 14:35:49,142 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 27, learning rate is 0.000632544755143.
2017-12-03 14:35:51,841 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 28)
2017-12-03 14:35:51,847 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 28, learning rate is 0.000612635797901.
2017-12-03 14:35:54,901 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 29)
2017-12-03 14:35:54,906 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 29, learning rate is 0.000593353462847.
2017-12-03 14:35:57,818 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 30)
2017-12-03 14:35:57,823 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 30, learning rate is 0.000574678027434.
2017-12-03 14:36:00,630 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 31)
2017-12-03 14:36:00,635 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 31, learning rate is 0.000556590389867.
2017-12-03 14:36:03,513 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 32)
2017-12-03 14:36:03,518 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 32, learning rate is 0.000539072049571.
2017-12-03 14:36:06,227 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 33)
2017-12-03 14:36:06,233 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 33, learning rate is 0.000522105088264.
2017-12-03 14:36:08,903 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 34)
2017-12-03 14:36:08,909 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 34, learning rate is 0.000505672151633.
2017-12-03 14:36:11,627 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 35)
2017-12-03 14:36:11,632 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 35, learning rate is 0.000489756431578.
2017-12-03 14:36:14,200 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 36)
2017-12-03 14:36:14,206 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 36, learning rate is 0.000474341649025.
2017-12-03 14:36:17,098 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 37)
2017-12-03 14:36:17,104 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 37, learning rate is 0.000459412037276.
2017-12-03 14:36:20,174 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 38)
2017-12-03 14:36:20,178 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 38, learning rate is 0.000444952325877.
2017-12-03 14:36:22,891 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 39)
2017-12-03 14:36:22,896 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 39, learning rate is 0.000430947725003.
2017-12-03 14:36:25,664 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 40)
2017-12-03 14:36:25,669 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 40, learning rate is 0.000417383910331.
2017-12-03 14:36:28,523 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 41)
2017-12-03 14:36:28,530 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 41, learning rate is 0.000404247008386.
2017-12-03 14:36:31,088 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 42)
2017-12-03 14:36:31,093 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 42, learning rate is 0.000391523582352.
2017-12-03 14:36:33,628 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 43)
2017-12-03 14:36:33,633 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 43, learning rate is 0.00037920061833.
2017-12-03 14:36:36,176 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 44)
2017-12-03 14:36:36,180 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 44, learning rate is 0.000367265512023.
2017-12-03 14:36:38,803 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 45)
2017-12-03 14:36:38,812 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 45, learning rate is 0.000355706055849.
2017-12-03 14:36:41,800 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 46)
2017-12-03 14:36:41,805 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 46, learning rate is 0.000344510426451.
2017-12-03 14:36:44,406 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 47)
2017-12-03 14:36:44,412 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 47, learning rate is 0.000333667172604.
2017-12-03 14:36:47,055 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 48)
2017-12-03 14:36:47,064 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 48, learning rate is 0.000323165203505.
2017-12-03 14:36:49,669 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 49)
2017-12-03 14:36:49,674 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 49, learning rate is 0.000312993777426.
2017-12-03 14:36:52,236 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 50)
2017-12-03 14:36:52,243 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 50, learning rate is 0.000303142490729.
2017-12-03 14:36:54,832 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 51)
2017-12-03 14:36:54,837 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 51, learning rate is 0.000293601267223.
2017-12-03 14:36:57,433 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 52)
2017-12-03 14:36:57,438 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 52, learning rate is 0.000284360347861.
2017-12-03 14:37:00,141 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 53)
2017-12-03 14:37:00,146 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 53, learning rate is 0.000275410280754.
2017-12-03 14:37:02,857 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 54)
2017-12-03 14:37:02,862 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 54, learning rate is 0.000266741911506.
2017-12-03 14:37:05,832 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 55)
2017-12-03 14:37:05,837 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 55, learning rate is 0.00025834637385.
2017-12-03 14:37:08,770 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 56)
2017-12-03 14:37:08,775 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 56, learning rate is 0.00025021508058.
2017-12-03 14:37:11,430 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 57)
2017-12-03 14:37:11,435 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 57, learning rate is 0.000242339714766.
2017-12-03 14:37:14,032 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 58)
2017-12-03 14:37:14,037 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 58, learning rate is 0.000234712221249.
2017-12-03 14:37:16,748 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 59)
2017-12-03 14:37:16,753 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 59, learning rate is 0.0002273247984.
2017-12-03 14:37:19,424 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 60)
2017-12-03 14:37:19,437 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 60, learning rate is 0.000220169890143.
2017-12-03 14:37:22,619 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 61)
2017-12-03 14:37:22,624 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 61, learning rate is 0.000213240178225.
2017-12-03 14:37:25,339 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 62)
2017-12-03 14:37:25,344 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 62, learning rate is 0.000206528574728.
2017-12-03 14:37:28,355 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 63)
2017-12-03 14:37:28,362 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 63, learning rate is 0.000200028214824.
2017-12-03 14:37:31,382 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 64)
2017-12-03 14:37:31,388 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 64, learning rate is 0.000193732449752.
2017-12-03 14:37:34,184 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 65)
2017-12-03 14:37:34,193 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 65, learning rate is 0.000187634840015.
2017-12-03 14:37:36,844 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 66)
2017-12-03 14:37:36,853 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 66, learning rate is 0.000181729148794.
2017-12-03 14:37:39,577 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 67)
2017-12-03 14:37:39,583 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 67, learning rate is 0.000176009335574.
2017-12-03 14:37:42,188 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 68)
2017-12-03 14:37:42,197 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 68, learning rate is 0.000170469549958.
2017-12-03 14:37:44,826 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 69)
2017-12-03 14:37:44,831 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 69, learning rate is 0.000165104125688.
2017-12-03 14:37:47,770 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 70)
2017-12-03 14:37:47,775 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 70, learning rate is 0.000159907574848.
2017-12-03 14:37:50,676 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 71)
2017-12-03 14:37:50,681 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 71, learning rate is 0.00015.
2017-12-03 14:37:53,443 [steps/nnet3/train_raw_dnn.py:401 - train - INFO ] Doing final combination to produce final.raw
2017-12-03 14:37:53,443 [steps/libs/nnet3/train/frame_level_objf/common.py:481 - combine_models - INFO ] Combining set([37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72]) models.
2017-12-03 14:38:06,508 [steps/nnet3/train_raw_dnn.py:423 - train - INFO ] Cleaning up the experiment directory exp/nnet3/multitask
exp/nnet3/multitask: num-iters=72 nj=1..1 num-params=0.2M combine=-3.28->-3.20
steps/nnet3/train_raw_dnn.py --stage=-5 --cmd=utils/run.pl --trainer.num-epochs 1 --trainer.optimization.num-jobs-initial=1 --trainer.optimization.num-jobs-final=1 --trainer.optimization.initial-effective-lrate=0.0015 --trainer.optimization.final-effective-lrate=0.00015 --trainer.optimization.minibatch-size=256,128 --trainer.samples-per-iter=10000 --trainer.max-param-change=2.0 --trainer.srand=0 --feat.cmvn-opts=--norm-means=false --norm-vars=false --feat-dir data/org/train --egs.dir exp/nnet3/multitask/egs --use-dense-targets false --targets-scp exp/org/tri_ali --cleanup.remove-egs true --use-gpu true --dir=exp/nnet3/multitask
['steps/nnet3/train_raw_dnn.py', '--stage=-5', '--cmd=utils/run.pl', '--trainer.num-epochs', '1', '--trainer.optimization.num-jobs-initial=1', '--trainer.optimization.num-jobs-final=1', '--trainer.optimization.initial-effective-lrate=0.0015', '--trainer.optimization.final-effective-lrate=0.00015', '--trainer.optimization.minibatch-size=256,128', '--trainer.samples-per-iter=10000', '--trainer.max-param-change=2.0', '--trainer.srand=0', '--feat.cmvn-opts=--norm-means=false --norm-vars=false', '--feat-dir', 'data/org/train', '--egs.dir', 'exp/nnet3/multitask/egs', '--use-dense-targets', 'false', '--targets-scp', 'exp/org/tri_ali', '--cleanup.remove-egs', 'true', '--use-gpu', 'true', '--dir=exp/nnet3/multitask']
use_multitask_egs=True
### ============== ###
### END TRAIN NNET ###
### ============== ###
### ========================== ###
### SPLIT & COPY NNET PER LANG ###
### ========================== ###
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/org/tri_ali/final.mdl - exp/nnet3/multitask/org/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/org/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language org.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/org exp/org/nnet3/egs
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/no_voice/tri_ali/final.mdl - exp/nnet3/multitask/no_voice/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-1 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/no_voice/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language no_voice.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/no_voice exp/no_voice/nnet3/egs
### ============== ###
### BEGIN DECODING ###
### ============== ###
### decoding with 4 jobs, unigram LM ###
steps/nnet3/decode.sh --nj 8 --cmd utils/run.pl --max-active 600 --min-active 200 exp_org/triphones/graph data_org/test exp/nnet3/multitask/decode exp/nnet3/multitask/org/final_adj.mdl SPOKEN_NOISE SIL
steps/nnet3/decode.sh: feature type is raw
steps/nnet3/decode.sh: line 169: steps/diagnostic/analyze_lats.sh: No such file or directory
Decoding done.

#### BEGIN CALCULATE WER ####
###==============###
### END DECODING ###
###==============###

###### BEGIN LANGUAGE INFO ######
lang= org
num_targets= 770
data_dir= data/org/train
ali_dir= exp/org/tri_ali
egs_dir= exp/org/nnet3/egs
###### END LANGUAGE INFO ######


###### BEGIN LANGUAGE INFO ######
lang= org
num_targets= 770
data_dir= data/org/train
ali_dir= exp/org/tri_ali
egs_dir= exp/org/nnet3/egs
###### END LANGUAGE INFO ######


###### BEGIN LANGUAGE INFO ######
lang= org
num_targets= 770
data_dir= data/org/train
ali_dir= exp/org/tri_ali
egs_dir= exp/org/nnet3/egs
###### END LANGUAGE INFO ######

### ============================ ###
### CREATE CONFIG FILES FOR NNET ###
### ============================ ###
feat-to-dim scp:data/org/train/feats.scp - 
nnet3-init exp/nnet3/multitask/configs//ref.config exp/nnet3/multitask/configs//ref.raw 
LOG (nnet3-init[5.3.83~1-9204]:main():nnet3-init.cc:80) Initialized raw neural net and wrote it to exp/nnet3/multitask/configs//ref.raw
nnet3-info "nnet3-copy --edits='rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - |" 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/configs//ref.raw to -
nnet3-init exp/nnet3/multitask/configs//ref.config exp/nnet3/multitask/configs//ref.raw 
LOG (nnet3-init[5.3.83~1-9204]:main():nnet3-init.cc:80) Initialized raw neural net and wrote it to exp/nnet3/multitask/configs//ref.raw
nnet3-info "nnet3-copy --edits='rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - |" 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/configs//ref.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/configs//ref.raw to -
steps/nnet3/xconfig_to_configs.py --xconfig-file exp/nnet3/multitask/configs/network.xconfig --config-dir exp/nnet3/multitask/configs/ --nnet-edits=rename-node old-name=output-0 new-name=output
### ================== ###
### MAKE NNET3 EGS DIR ###
### ================== ###
### MAKE SEPARATE EGS DIR PER LANGUAGE ###
local/nnet3/prepare_multilingual_egs.sh --cmd utils/run.pl --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 3 data/org/train data/org/train data/org/train exp/org/tri_ali exp/org/tri_ali exp/org/tri_ali exp/org/nnet3/egs exp/org/nnet3/egs exp/org/nnet3/egs
local/nnet3/prepare_multilingual_egs.sh --cmd utils/run.pl --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 3 data/org/train data/org/train data/org/train exp/org/tri_ali exp/org/tri_ali exp/org/tri_ali exp/org/nnet3/egs exp/org/nnet3/egs exp/org/nnet3/egs
3
data/org/train data/org/train data/org/train exp/org/tri_ali exp/org/tri_ali exp/org/tri_ali exp/org/nnet3/egs exp/org/nnet3/egs exp/org/nnet3/egs
local/nnet3/prepare_multilingual_egs.sh: Generate separate egs directory per language for multilingual training.
online_ivector_dir =
local/nnet3/prepare_multilingual_egs.sh: Generate egs for 
local/nnet3/prepare_multilingual_egs.sh: calling get_egs.sh
steps/nnet3/get_egs.sh --cmvn-opts --norm-means=false --norm-vars=false --left-context 16 --right-context 12 --samples-per-iter 400000 --stage 0 --cmd utils/run.pl --generate-egs-scp true data/org/train exp/org/tri_ali exp/org/nnet3/egs
steps/nnet3/get_egs.sh: feature type is raw
steps/nnet3/get_egs.sh: working out number of frames of training data
feat-to-len scp:data/org/train/feats.scp ark,t:- 
steps/nnet3/get_egs.sh: working out feature dim
*** steps/nnet3/get_egs.sh: warning: the --frames-per-eg is too large to generate one archive with
*** as many as --samples-per-iter egs in it.  Consider reducing --frames-per-eg.
steps/nnet3/get_egs.sh: creating 1 archives, each with 60142 egs, with
steps/nnet3/get_egs.sh:   8 labels per example, and (left,right) context = (16,12)
steps/nnet3/get_egs.sh: copying data alignments
copy-int-vector ark:- ark,scp:exp/org/nnet3/egs/ali.ark,exp/org/nnet3/egs/ali.scp 
LOG (copy-int-vector[5.3.83~1-9204]:main():copy-int-vector.cc:83) Copied 546 vectors of int32.
steps/nnet3/get_egs.sh: Getting validation and training subset examples.
steps/nnet3/get_egs.sh: ... extracting validation and training-subset alignments.
... Getting subsets of validation examples for diagnostics and combination.
nnet3-copy-egs ark:- ark,scp:exp/org/nnet3/egs/combine.egs,exp/org/nnet3/egs/combine.scp 
LOG (nnet3-copy-egs[5.3.83~1-9204]:main():nnet3-copy-egs.cc:436) Read 7625 neural-network training examples, wrote 7625, 0 examples had errors.
rm: cannot remove 'exp/org/nnet3/egs/train_combine.scp': No such file or directory
rm: cannot remove 'exp/org/nnet3/egs/valid_combine.scp': No such file or directory
steps/nnet3/get_egs.sh: Generating training examples on disk
steps/nnet3/get_egs.sh: recombining and shuffling order of archives on disk
steps/nnet3/get_egs.sh: removing temporary archives
steps/nnet3/get_egs.sh: removing temporary alignments and transforms
steps/nnet3/get_egs.sh: Finished preparing training examples
online_ivector_dir =
online_ivector_dir =
### MAKE ONE BIG MULTILING EGS DIR ###
steps/nnet3/multilingual/combine_egs.sh --cmd utils/run.pl --samples-per-iter 10000 --lang2weight 0.5,0.5,0.5 3 exp/org/nnet3/egs exp/org/nnet3/egs exp/org/nnet3/egs exp/nnet3/multitask/egs
steps/nnet3/multilingual/combine_egs.sh: allocating multilingual examples for training.
steps/nnet3/multilingual/combine_egs.sh: combine combine.scp examples from all langs in exp/nnet3/multitask/egs/combine.scp.
steps/nnet3/multilingual/combine_egs.sh: combine train_diagnostic.scp examples from all langs in exp/nnet3/multitask/egs/train_diagnostic.scp.
steps/nnet3/multilingual/combine_egs.sh: combine valid_diagnostic.scp examples from all langs in exp/nnet3/multitask/egs/valid_diagnostic.scp.
steps/nnet3/multilingual/combine_egs.sh: Finished preparing multilingual training example.
### ================ ###
### BEGIN TRAIN NNET ###
### ================ ###
2017-12-03 14:44:04,109 [steps/nnet3/train_raw_dnn.py:34 - <module> - INFO ] Starting raw DNN trainer (train_raw_dnn.py)
2017-12-03 14:44:04,116 [steps/nnet3/train_raw_dnn.py:181 - train - INFO ] Arguments for the experiment
{'backstitch_training_interval': 1,
 'backstitch_training_scale': 0.0,
 'cleanup': True,
 'cmvn_opts': '--norm-means=false --norm-vars=false',
 'combine_sum_to_one_penalty': 0.0,
 'command': 'utils/run.pl',
 'compute_average_posteriors': False,
 'dir': 'exp/nnet3/multitask',
 'dropout_schedule': None,
 'egs_command': 'queue.pl',
 'egs_dir': 'exp/nnet3/multitask/egs',
 'egs_opts': None,
 'egs_stage': 0,
 'email': None,
 'exit_stage': None,
 'feat_dir': 'data/org/train',
 'final_combination': True,
 'final_effective_lrate': 0.00015,
 'frames_per_eg': 8,
 'image_augmentation_opts': None,
 'initial_effective_lrate': 0.0015,
 'max_lda_jobs': 10,
 'max_models_combine': 20,
 'max_param_change': 2.0,
 'minibatch_size': '256,128',
 'momentum': 0.0,
 'nj': 4,
 'num_epochs': 1.0,
 'num_jobs_compute_prior': 10,
 'num_jobs_final': 1,
 'num_jobs_initial': 1,
 'online_ivector_dir': None,
 'preserve_model_interval': 100,
 'presoftmax_prior_scale_power': -0.25,
 'prior_subset_size': 20000,
 'proportional_shrink': 0.0,
 'rand_prune': 4.0,
 'remove_egs': True,
 'reporting_interval': 0.1,
 'samples_per_iter': 10000,
 'shuffle_buffer_size': 5000,
 'srand': 0,
 'stage': -5,
 'targets_scp': 'exp/org/tri_ali',
 'transform_dir': None,
 'use_dense_targets': False,
 'use_gpu': True}
2017-12-03 14:44:04,121 [steps/libs/nnet3/train/common.py:410 - verify_egs_dir - WARNING ] The ivector ids are not used. It's your responsibility to make sure the ivector extractor has been used consistently
2017-12-03 14:44:04,121 [steps/nnet3/train_raw_dnn.py:294 - train - INFO ] Preparing the initial network.
2017-12-03 14:44:04,196 [steps/nnet3/train_raw_dnn.py:328 - train - INFO ] Training will run for 1.0 epochs = 112 iterations
2017-12-03 14:44:04,197 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 0)
2017-12-03 14:44:04,200 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 0, learning rate is 0.0015.
2017-12-03 14:44:05,986 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 1)
2017-12-03 14:44:05,992 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 1, learning rate is 0.0014694766436.
2017-12-03 14:44:07,590 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 2)
2017-12-03 14:44:07,597 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 2, learning rate is 0.00143957440405.
2017-12-03 14:44:10,548 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 3)
2017-12-03 14:44:10,553 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 3, learning rate is 0.00141028064232.
2017-12-03 14:44:12,128 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 4)
2017-12-03 14:44:12,135 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 4, learning rate is 0.00138158297653.
2017-12-03 14:44:15,334 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 5)
2017-12-03 14:44:15,339 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 5, learning rate is 0.00135346927681.
2017-12-03 14:44:16,902 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 6)
2017-12-03 14:44:16,923 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 6, learning rate is 0.00132592766006.
2017-12-03 14:44:18,624 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 7)
2017-12-03 14:44:18,632 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 7, learning rate is 0.00129894648504.
2017-12-03 14:44:21,730 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 8)
2017-12-03 14:44:21,735 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 8, learning rate is 0.00127251434737.
2017-12-03 14:44:23,758 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 9)
2017-12-03 14:44:23,764 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 9, learning rate is 0.00124662007473.
2017-12-03 14:44:25,805 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 10)
2017-12-03 14:44:25,812 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 10, learning rate is 0.00122125272217.
2017-12-03 14:44:28,783 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 11)
2017-12-03 14:44:28,790 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 11, learning rate is 0.00119640156744.
2017-12-03 14:44:31,580 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 12)
2017-12-03 14:44:31,588 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 12, learning rate is 0.00117205610648.
2017-12-03 14:44:34,442 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 13)
2017-12-03 14:44:34,446 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 13, learning rate is 0.00114820604897.
2017-12-03 14:44:37,256 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 14)
2017-12-03 14:44:37,261 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 14, learning rate is 0.001124841314.
2017-12-03 14:44:38,901 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 15)
2017-12-03 14:44:38,911 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 15, learning rate is 0.00110195202578.
2017-12-03 14:44:40,644 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 16)
2017-12-03 14:44:40,654 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 16, learning rate is 0.0010795285095.
2017-12-03 14:44:43,607 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 17)
2017-12-03 14:44:43,611 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 17, learning rate is 0.00105756128721.
2017-12-03 14:44:45,200 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 18)
2017-12-03 14:44:45,207 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 18, learning rate is 0.00103604107382.
2017-12-03 14:44:48,325 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 19)
2017-12-03 14:44:48,330 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 19, learning rate is 0.00101495877319.
2017-12-03 14:44:50,010 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 20)
2017-12-03 14:44:50,017 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 20, learning rate is 0.000994305474274.
2017-12-03 14:44:51,868 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 21)
2017-12-03 14:44:51,885 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 21, learning rate is 0.000974072447364.
2017-12-03 14:44:55,138 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 22)
2017-12-03 14:44:55,143 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 22, learning rate is 0.000954251140382.
2017-12-03 14:44:57,252 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 23)
2017-12-03 14:44:57,259 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 23, learning rate is 0.000934833175279.
2017-12-03 14:44:59,362 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 24)
2017-12-03 14:44:59,368 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 24, learning rate is 0.000915810344488.
2017-12-03 14:45:02,510 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 25)
2017-12-03 14:45:02,516 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 25, learning rate is 0.00089717460746.
2017-12-03 14:45:05,545 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 26)
2017-12-03 14:45:05,551 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 26, learning rate is 0.00087891808726.
2017-12-03 14:45:08,571 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 27)
2017-12-03 14:45:08,577 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 27, learning rate is 0.000861033067243.
2017-12-03 14:45:11,665 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 28)
2017-12-03 14:45:11,671 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 28, learning rate is 0.000843511987786.
2017-12-03 14:45:13,544 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 29)
2017-12-03 14:45:13,554 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 29, learning rate is 0.000826347443097.
2017-12-03 14:45:15,325 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 30)
2017-12-03 14:45:15,332 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 30, learning rate is 0.000809532178085.
2017-12-03 14:45:18,367 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 31)
2017-12-03 14:45:18,372 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 31, learning rate is 0.000793059085291.
2017-12-03 14:45:20,090 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 32)
2017-12-03 14:45:20,096 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 32, learning rate is 0.000776921201885.
2017-12-03 14:45:22,901 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 33)
2017-12-03 14:45:22,910 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 33, learning rate is 0.000761111706723.
2017-12-03 14:45:24,525 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 34)
2017-12-03 14:45:24,535 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 34, learning rate is 0.000745623917466.
2017-12-03 14:45:26,287 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 35)
2017-12-03 14:45:26,295 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 35, learning rate is 0.000730451287749.
2017-12-03 14:45:29,278 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 36)
2017-12-03 14:45:29,283 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 36, learning rate is 0.000715587404422.
2017-12-03 14:45:31,438 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 37)
2017-12-03 14:45:31,443 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 37, learning rate is 0.000701025984833.
2017-12-03 14:45:33,374 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 38)
2017-12-03 14:45:33,380 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 38, learning rate is 0.000686760874178.
2017-12-03 14:45:36,304 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 39)
2017-12-03 14:45:36,309 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 39, learning rate is 0.000672786042894.
2017-12-03 14:45:39,321 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 40)
2017-12-03 14:45:39,326 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 40, learning rate is 0.000659095584114.
2017-12-03 14:45:42,513 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 41)
2017-12-03 14:45:42,518 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 41, learning rate is 0.000645683711169.
2017-12-03 14:45:45,333 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 42)
2017-12-03 14:45:45,339 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 42, learning rate is 0.000632544755143.
2017-12-03 14:45:47,019 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 43)
2017-12-03 14:45:47,025 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 43, learning rate is 0.000619673162475.
2017-12-03 14:45:48,823 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 44)
2017-12-03 14:45:48,836 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 44, learning rate is 0.000607063492614.
2017-12-03 14:45:51,895 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 45)
2017-12-03 14:45:51,902 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 45, learning rate is 0.000594710415718.
2017-12-03 14:45:53,722 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 46)
2017-12-03 14:45:53,738 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 46, learning rate is 0.000582608710401.
2017-12-03 14:45:56,747 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 47)
2017-12-03 14:45:56,752 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 47, learning rate is 0.000570753261527.
2017-12-03 14:45:58,539 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 48)
2017-12-03 14:45:58,555 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 48, learning rate is 0.000559139058047.
2017-12-03 14:46:00,475 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 49)
2017-12-03 14:46:00,483 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 49, learning rate is 0.000547761190882.
2017-12-03 14:46:03,598 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 50)
2017-12-03 14:46:03,604 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 50, learning rate is 0.000536614850847.
2017-12-03 14:46:05,964 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 51)
2017-12-03 14:46:05,969 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 51, learning rate is 0.000525695326618.
2017-12-03 14:46:08,174 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 52)
2017-12-03 14:46:08,180 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 52, learning rate is 0.000514998002742.
2017-12-03 14:46:11,315 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 53)
2017-12-03 14:46:11,320 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 53, learning rate is 0.000504518357686.
2017-12-03 14:46:14,318 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 54)
2017-12-03 14:46:14,323 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 54, learning rate is 0.000494251961924.
2017-12-03 14:46:17,357 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 55)
2017-12-03 14:46:17,366 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 55, learning rate is 0.000484194476066.
2017-12-03 14:46:20,222 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 56)
2017-12-03 14:46:20,230 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 56, learning rate is 0.000474341649025.
2017-12-03 14:46:21,980 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 57)
2017-12-03 14:46:21,986 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 57, learning rate is 0.000464689316219.
2017-12-03 14:46:23,741 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 58)
2017-12-03 14:46:23,756 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 58, learning rate is 0.000455233397808.
2017-12-03 14:46:26,776 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 59)
2017-12-03 14:46:26,789 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 59, learning rate is 0.000445969896977.
2017-12-03 14:46:28,525 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 60)
2017-12-03 14:46:28,531 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 60, learning rate is 0.000436894898236.
2017-12-03 14:46:31,866 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 61)
2017-12-03 14:46:31,871 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 61, learning rate is 0.000428004565777.
2017-12-03 14:46:33,600 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 62)
2017-12-03 14:46:33,607 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 62, learning rate is 0.000419295141841.
2017-12-03 14:46:35,325 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 63)
2017-12-03 14:46:35,332 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 63, learning rate is 0.00041076294514.
2017-12-03 14:46:38,422 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 64)
2017-12-03 14:46:38,428 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 64, learning rate is 0.000402404369292.
2017-12-03 14:46:40,579 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 65)
2017-12-03 14:46:40,584 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 65, learning rate is 0.000394215881304.
2017-12-03 14:46:42,570 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 66)
2017-12-03 14:46:42,579 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 66, learning rate is 0.000386194020074.
2017-12-03 14:46:45,584 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 67)
2017-12-03 14:46:45,589 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 67, learning rate is 0.000378335394931.
2017-12-03 14:46:48,480 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 68)
2017-12-03 14:46:48,485 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 68, learning rate is 0.000370636684198.
2017-12-03 14:46:51,501 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 69)
2017-12-03 14:46:51,506 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 69, learning rate is 0.000363094633793.
2017-12-03 14:46:54,288 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 70)
2017-12-03 14:46:54,293 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 70, learning rate is 0.000355706055849.
2017-12-03 14:46:55,906 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 71)
2017-12-03 14:46:55,916 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 71, learning rate is 0.000348467827371.
2017-12-03 14:46:57,740 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 72)
2017-12-03 14:46:57,748 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 72, learning rate is 0.000341376888911.
2017-12-03 14:47:00,744 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 73)
2017-12-03 14:47:00,750 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 73, learning rate is 0.000334430243279.
2017-12-03 14:47:02,569 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 74)
2017-12-03 14:47:02,577 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 74, learning rate is 0.000327624954274.
2017-12-03 14:47:05,566 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 75)
2017-12-03 14:47:05,571 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 75, learning rate is 0.000320958145444.
2017-12-03 14:47:07,210 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 76)
2017-12-03 14:47:07,216 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 76, learning rate is 0.000314426998868.
2017-12-03 14:47:08,982 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 77)
2017-12-03 14:47:08,988 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 77, learning rate is 0.000308028753969.
2017-12-03 14:47:11,922 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 78)
2017-12-03 14:47:11,930 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 78, learning rate is 0.000301760706342.
2017-12-03 14:47:13,957 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 79)
2017-12-03 14:47:13,963 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 79, learning rate is 0.000295620206617.
2017-12-03 14:47:16,009 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 80)
2017-12-03 14:47:16,015 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 80, learning rate is 0.000289604659332.
2017-12-03 14:47:19,165 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 81)
2017-12-03 14:47:19,170 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 81, learning rate is 0.000283711521844.
2017-12-03 14:47:22,064 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 82)
2017-12-03 14:47:22,069 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 82, learning rate is 0.000277938303246.
2017-12-03 14:47:24,955 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 83)
2017-12-03 14:47:24,962 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 83, learning rate is 0.000272282563321.
2017-12-03 14:47:27,731 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 84)
2017-12-03 14:47:27,740 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 84, learning rate is 0.000266741911506.
2017-12-03 14:47:29,369 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 85)
2017-12-03 14:47:29,377 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 85, learning rate is 0.000261314005884.
2017-12-03 14:47:31,078 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 86)
2017-12-03 14:47:31,083 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 86, learning rate is 0.000255996552194.
2017-12-03 14:47:34,254 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 87)
2017-12-03 14:47:34,262 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 87, learning rate is 0.000250787302861.
2017-12-03 14:47:36,122 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 88)
2017-12-03 14:47:36,128 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 88, learning rate is 0.000245684056043.
2017-12-03 14:47:39,051 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 89)
2017-12-03 14:47:39,056 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 89, learning rate is 0.000240684654706.
2017-12-03 14:47:40,712 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 90)
2017-12-03 14:47:40,718 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 90, learning rate is 0.000235786985709.
2017-12-03 14:47:42,499 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 91)
2017-12-03 14:47:42,506 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 91, learning rate is 0.000230988978909.
2017-12-03 14:47:45,475 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 92)
2017-12-03 14:47:45,484 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 92, learning rate is 0.00022628860629.
2017-12-03 14:47:47,571 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 93)
2017-12-03 14:47:47,576 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 93, learning rate is 0.000221683881104.
2017-12-03 14:47:49,650 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 94)
2017-12-03 14:47:49,657 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 94, learning rate is 0.000217172857029.
2017-12-03 14:47:52,667 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 95)
2017-12-03 14:47:52,676 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 95, learning rate is 0.000212753627352.
2017-12-03 14:47:55,619 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 96)
2017-12-03 14:47:55,625 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 96, learning rate is 0.000208424324156.
2017-12-03 14:47:58,598 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 97)
2017-12-03 14:47:58,603 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 97, learning rate is 0.000204183117536.
2017-12-03 14:48:01,488 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 98)
2017-12-03 14:48:01,493 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 98, learning rate is 0.000200028214824.
2017-12-03 14:48:03,320 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 99)
2017-12-03 14:48:03,326 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 99, learning rate is 0.00019595785983.
2017-12-03 14:48:05,133 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 100)
2017-12-03 14:48:05,140 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 100, learning rate is 0.0001919703321.
2017-12-03 14:48:08,466 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 101)
2017-12-03 14:48:08,477 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 101, learning rate is 0.000188063946189.
2017-12-03 14:48:10,332 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 102)
2017-12-03 14:48:10,338 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 102, learning rate is 0.000184237050952.
2017-12-03 14:48:13,383 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 103)
2017-12-03 14:48:13,389 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 103, learning rate is 0.00018048802884.
2017-12-03 14:48:15,161 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 104)
2017-12-03 14:48:15,170 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 104, learning rate is 0.000176815295219.
2017-12-03 14:48:16,919 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 105)
2017-12-03 14:48:16,927 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 105, learning rate is 0.000173217297703.
2017-12-03 14:48:20,007 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 106)
2017-12-03 14:48:20,012 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 106, learning rate is 0.000169692515495.
2017-12-03 14:48:22,162 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 107)
2017-12-03 14:48:22,168 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 107, learning rate is 0.000166239458742.
2017-12-03 14:48:24,112 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 108)
2017-12-03 14:48:24,121 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 108, learning rate is 0.00016285666791.
2017-12-03 14:48:27,223 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 109)
2017-12-03 14:48:27,228 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 109, learning rate is 0.000159542713166.
2017-12-03 14:48:30,254 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 110)
2017-12-03 14:48:30,259 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 110, learning rate is 0.000156296193769.
2017-12-03 14:48:33,218 [steps/libs/nnet3/train/frame_level_objf/common.py:189 - train_one_iteration - INFO ] Training neural net (pass 111)
2017-12-03 14:48:33,226 [steps/libs/nnet3/train/frame_level_objf/common.py:260 - train_one_iteration - INFO ] On iteration 111, learning rate is 0.00015.
2017-12-03 14:48:36,000 [steps/nnet3/train_raw_dnn.py:401 - train - INFO ] Doing final combination to produce final.raw
2017-12-03 14:48:36,001 [steps/libs/nnet3/train/frame_level_objf/common.py:481 - combine_models - INFO ] Combining set([57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 112]) models.
2017-12-03 14:48:54,316 [steps/nnet3/train_raw_dnn.py:423 - train - INFO ] Cleaning up the experiment directory exp/nnet3/multitask
exp/nnet3/multitask: num-iters=112 nj=1..1 num-params=0.3M combine=-3.82->-3.74
steps/nnet3/train_raw_dnn.py --stage=-5 --cmd=utils/run.pl --trainer.num-epochs 1 --trainer.optimization.num-jobs-initial=1 --trainer.optimization.num-jobs-final=1 --trainer.optimization.initial-effective-lrate=0.0015 --trainer.optimization.final-effective-lrate=0.00015 --trainer.optimization.minibatch-size=256,128 --trainer.samples-per-iter=10000 --trainer.max-param-change=2.0 --trainer.srand=0 --feat.cmvn-opts=--norm-means=false --norm-vars=false --feat-dir data/org/train --egs.dir exp/nnet3/multitask/egs --use-dense-targets false --targets-scp exp/org/tri_ali --cleanup.remove-egs true --use-gpu true --dir=exp/nnet3/multitask
['steps/nnet3/train_raw_dnn.py', '--stage=-5', '--cmd=utils/run.pl', '--trainer.num-epochs', '1', '--trainer.optimization.num-jobs-initial=1', '--trainer.optimization.num-jobs-final=1', '--trainer.optimization.initial-effective-lrate=0.0015', '--trainer.optimization.final-effective-lrate=0.00015', '--trainer.optimization.minibatch-size=256,128', '--trainer.samples-per-iter=10000', '--trainer.max-param-change=2.0', '--trainer.srand=0', '--feat.cmvn-opts=--norm-means=false --norm-vars=false', '--feat-dir', 'data/org/train', '--egs.dir', 'exp/nnet3/multitask/egs', '--use-dense-targets', 'false', '--targets-scp', 'exp/org/tri_ali', '--cleanup.remove-egs', 'true', '--use-gpu', 'true', '--dir=exp/nnet3/multitask']
use_multitask_egs=True
### ============== ###
### END TRAIN NNET ###
### ============== ###
### ========================== ###
### SPLIT & COPY NNET PER LANG ###
### ========================== ###
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/org/tri_ali/final.mdl - exp/nnet3/multitask/org/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-0 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/org/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language org.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/org exp/org/nnet3/egs
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/org/tri_ali/final.mdl - exp/nnet3/multitask/org/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-1 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/org/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language org.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/org exp/org/nnet3/egs
./run_nnet3_multilingual.sh: rename output name for each lang to 'output' and 
add transition model.
nnet3-am-init exp/org/tri_ali/final.mdl - exp/nnet3/multitask/org/final.mdl 
nnet3-copy '--edits=rename-node old-name=output-2 new-name=output' exp/nnet3/multitask/final.raw - 
LOG (nnet3-copy[5.3.83~1-9204]:main():nnet3-copy.cc:114) Copied raw neural net from exp/nnet3/multitask/final.raw to -
LOG (nnet3-am-init[5.3.83~1-9204]:main():nnet3-am-init.cc:96) Initialized am-nnet (neural net acoustic model) and wrote to exp/nnet3/multitask/org/final.mdl
./run_nnet3_multilingual.sh: compute average posterior and readjust priors for language org.
steps/nnet3/adjust_priors.sh exp/nnet3/multitask/org exp/org/nnet3/egs
### ============== ###
### BEGIN DECODING ###
### ============== ###
### decoding with 4 jobs, unigram LM ###
steps/nnet3/decode.sh --nj 8 --cmd utils/run.pl --max-active 600 --min-active 200 exp_org/triphones/graph data_org/test exp/nnet3/multitask/decode exp/nnet3/multitask/org/final_adj.mdl SPOKEN_NOISE SIL
steps/nnet3/decode.sh: feature type is raw
